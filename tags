!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
A	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            A = Xmargs{i};$/;"	v
A	lib/TrialData/util/lib/isomap/dijk.m	/^A = A';		% Use transpose to speed-up FIND for sparse A$/;"	v
A	lib/TrialData/util/predict_kalman.m	/^A = kf_model.A;$/;"	v
A	lib/TrialData/util/train_kalman.m	/^A = Y_new'*Z*inv(Z'*Z);$/;"	v
AsteriskIndices	lib/TrialData/util/openNEV_td.m	/^            AsteriskIndices   = find(DigiValues == '*');$/;"	v
B	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            B = P(:,uu)*D(uu,:)*X;$/;"	v
BasicHeader	lib/TrialData/util/openNEV_td.m	/^BasicHeader               = fread(FID, 336, '*uint8');$/;"	v
BasicHeader	lib/TrialData/util/openNSx_td.m	/^    BasicHeader                = fread(FID, 306, '*uint8');$/;"	v
C	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        C = Xmargs{i}*X'\/(X*X' + options.Cnoise + (totalVar*thisLambda)^2*eye(size(X,1)));$/;"	v
C	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    C               = ws.estParams.C;$/;"	v
C	lib/TrialData/util/predict_kalman.m	/^C = kf_model.C;$/;"	v
C	lib/TrialData/util/train_kalman.m	/^C = X'*Y*(Y'*Y)^-1;$/;"	v
CI_hi	bumpcurl_script.m	/^                CI_hi = yvals + upp * sqrt(crossval_correction*var_corrs);$/;"	v
CI_lo	bumpcurl_script.m	/^                CI_lo = yvals + low * sqrt(crossval_correction*var_corrs);$/;"	v
CI_table	bumpcurl_script.m	/^    CI_table = vertcat(CI_cell{:});$/;"	v
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(fread(FID, 1       , 'uint32=>double'));$/;"	v
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(typecast(BasicHeader(303:306), 'uint32'));$/;"	v
D	lib/TrialData/Tools/dimReduce.m	/^            D = L2_distance(data', data');$/;"	v
D	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    D = U'*C;$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D =  D.*(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D =  D.\/(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = min(D,INF); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = min(D,repmat(D(:,k),[1 N])+repmat(D(k,:),[N 1])); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = sparse(Di(1:counter), Dj(1:counter), Ds(1:counter));$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = dijkstra(D, landmarks);$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = max(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = min(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = sparse(D); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = sparse(Di(1:counter), Dj(1:counter), Ds(1:counter));$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^    D = dijkstra(Dconf, landmarks);$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^D = full(D(landmarks,Y.index))'; $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^D = reshape(D,N*nl,1); $/;"	v
D	lib/TrialData/util/lib/isomap/dijk.m	/^D = zeros(length(s),length(t));$/;"	v
D	lib/TrialData/util/lib/isomap/dijkstra.m	/^D = dijk(G, S, 1:N);$/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D =  D.\/(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D = min(D,INF); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D = min(D,repmat(D(:,k),[1 N])+repmat(D(k,:),[N 1])); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = D(Y.index, Y.index); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = min(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = reshape(D,N^2,1); $/;"	v
DataBegTimestamp	lib/TrialData/util/openNEV_td.m	/^            DataBegTimestamp = digserTimestamp(AsteriskIndices);$/;"	v
DataLength	lib/TrialData/util/openNSx_td.m	/^    DataLength = EndPacket - StartPacket + 1;$/;"	v
Dconf	lib/TrialData/util/lib/isomap/IsomapII.m	/^    Dconf = D .\/ Mij;$/;"	v
DecreaseKey	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeap::DecreaseKey(FibHeapNode *theNode, FibHeapNode& NewKey)$/;"	f	class:FibHeap	typeref:typename:int
Delete	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeap::Delete(FibHeapNode *theNode)$/;"	f	class:FibHeap	typeref:typename:int
Di	lib/TrialData/util/lib/isomap/IsomapII.m	/^         Di = zeros(N*K,1);      Dj = zeros(N*K,1);       Ds = zeros(N*K,1); $/;"	v
Di	lib/TrialData/util/lib/isomap/IsomapII.m	/^     Di = zeros(N*(K+1),1);      Dj = zeros(N*(K+1),1);       Ds = zeros(N*(K+1),1); $/;"	v
Di	lib/TrialData/util/lib/isomap/dijk.m	/^   Di = Inf*ones(n,1); Di(j) = 0;$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^            DigiValues = char(DigiValues);$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^DigiValues                 = tempDigiVals(digserIndices);$/;"	v
Dj	lib/TrialData/util/lib/isomap/dijk.m	/^         Dj = Di(j);$/;"	v
E	lib/TrialData/util/lib/isomap/IsomapII.m	/^         E = int8(1-(D==INF));  %%  Edge information for subsequent graph overlay$/;"	v
E	lib/TrialData/util/lib/isomap/IsomapII.m	/^         E = sparse(a,b,ones(size(a))); $/;"	v
E	lib/TrialData/util/lib/isomap/isomap.m	/^     E = int8(1-(D==INF));  %%  Edge information for subsequent graph overlay$/;"	v
EZZ	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    EZZ     = I - beta * L + beta * cX_beta;$/;"	v
Elec	lib/TrialData/util/openNSx_td.m	/^            Elec = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
ElectrodeID	lib/TrialData/util/openNEV_td.m	/^            ElectrodeID                       = typecast(ExtendedHeader(9:10), 'uint16');$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^	EndPacket = EndPacket - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = inputArgument(end);$/;"	v
ExtHeaderLength	lib/TrialData/util/openNSx_td.m	/^ExtHeaderLength = 66;$/;"	v
ExtendedHeader	lib/TrialData/util/openNEV_td.m	/^    ExtendedHeader = fread(FID, 32, '*uint8');$/;"	v
ExtendedHeader	lib/TrialData/util/openNSx_td.m	/^    ExtendedHeader             = fread(FID, readSize, '*uint8');$/;"	v
ExtractMin	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode *FibHeap::ExtractMin()$/;"	f	class:FibHeap	typeref:typename:FibHeapNode *
FHN_Assign	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::FHN_Assign(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:void
FHN_Cmp	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::FHN_Cmp(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
FID	lib/TrialData/util/openNEV_td.m	/^FID                       = fopen(fileFullPath, 'r', 'ieee-le');$/;"	v
FID	lib/TrialData/util/openNSx_td.m	/^FID                       = fopen([path fname], 'r', 'ieee-le');$/;"	v
FR	lib/TrialData/Tools/addFiringRates.m	/^            FR = spikes\/bin_size;$/;"	v
FibHeap	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeap::FibHeap()$/;"	f	class:FibHeap
FibHeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode::FibHeapNode()$/;"	f	class:FibHeapNode
Flags	lib/TrialData/util/openNEV_td.m	/^Flags = struct;$/;"	v
GetIndexValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      long int GetIndexValue() { return IndexV; };$/;"	f	class:HeapNode	typeref:typename:long int	file:
GetKeyValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      double GetKeyValue() { return N; };       \/* !!!! *\/$/;"	f	class:HeapNode	typeref:typename:double	file:
HPF_cutoff	lib/TrialData/td_limblab/parseFileByTrial.m	/^HPF_cutoff  =  10; % for EMG butterworth filter$/;"	v
HPF_cutoff	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^HPF_cutoff      = 750; % in Hz$/;"	v
HeaderBytes	lib/TrialData/util/openNSx_td.m	/^    HeaderBytes                = double(typecast(BasicHeader(3:6), 'uint32'));$/;"	v
HeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      HeapNode() : FibHeapNode() { N = 0; };   $/;"	f	class:HeapNode	file:
HeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^class HeapNode : public FibHeapNode$/;"	c	file:
I	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  I     = eye(zDim);$/;"	v
INF	lib/TrialData/util/lib/isomap/IsomapII.m	/^     INF =  1000*max(max(D))*N;  %% effectively infinite distance$/;"	v
INF	lib/TrialData/util/lib/isomap/IsomapII.m	/^     INF = inf; $/;"	v
INF	lib/TrialData/util/lib/isomap/isomap.m	/^INF =  1000*max(max(D))*N;  %% effectively infinite distance$/;"	v
IndexV	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      long int IndexV;$/;"	m	class:HeapNode	typeref:typename:long int	file:
Inputs	lib/TrialData/util/openNEV_td.m	/^            Inputs                     = {'Digital'; 'AnCh1'; 'AnCh2'; 'AnCh3'; 'AnCh4'; 'AnCh5'/;"	v
Insert	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Insert(FibHeapNode *NewNode)$/;"	f	class:FibHeap	typeref:typename:void
IntCmp	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int IntCmp(const void *pA, const void *pB)$/;"	f	typeref:typename:int
Intercr	lib/TrialData/util/compute_pseudo_R2.m	/^  Intercr = sum(Y.*log(eps+Ymean) - Ymean);$/;"	v
IsomapII	lib/TrialData/util/lib/isomap/IsomapII.m	/^function [Y, R, E] = IsomapII(D, n_fcn, n_size, options)$/;"	f
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^         K = 2*max(sum(tmp'<epsilon));    % just to be safe$/;"	v
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^         K = options.Kmax; $/;"	v
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^     K = n_size; $/;"	v
K	lib/TrialData/util/lib/isomap/isomap.m	/^     K = n_size; $/;"	v
K	lib/TrialData/util/predict_kalman.m	/^    K = Vpred * C' * inv(S); % Kalman gain matrix$/;"	v
Ktilde	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Ktilde = mean(reshape(options.numOfTrials, size(options.numOfTrials,1),[]),2);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        L = numComps;$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        L = sum(numComps);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        L = length(options.explainedVar.totalMarginalizedVar);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        L = length(unique(options.whichMarg));$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^L = length(options.marginalizationColours);$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    L  = cX_beta \/ EZZ;$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  L     = randn(xDim,zDim)*sqrt(scale\/zDim);$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    L               = ws.kern(k).estParams.L;$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^    L0 = (k-1)*length(Y)*log(eps+Ymean) - length(Y)*Ymean\/theta;$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^  L0 = 2*length(Y)*sum(Y.*log((Yhat_null==0)+Yhat_null).\/mean(Yhat) + (1-Y).*log((Yhat_null==1)/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^    L1 = (k-1)*sum(log(eps+Yhat)) - sum(Yhat)\/theta;$/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^  L1 = 2*length(Y)*sum(Y.*log((Yhat==0)+Yhat).\/mean(Yhat) + (1-Y).*log((Yhat==1)+1-Yhat).\/(1-m/;"	v
L2_distance	lib/TrialData/util/lib/isomap/L2_distance.m	/^function d = L2_distance(a, b)$/;"	f
LL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LL = [LL LLi];    $/;"	v
LL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  LL    = [];$/;"	v
LLbase	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      LLbase = LLi;$/;"	v
LLi	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LLi   = N*const + N*ldM - 0.5*N*sum(sum(MM .* cX)); $/;"	v
LLi	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  LLi   = 0; $/;"	v
LLold	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LLold = LLi;    $/;"	v
LPF_cutoff	lib/TrialData/td_limblab/parseFileByTrial.m	/^LPF_cutoff  =  20; % for EMG butterworth filter$/;"	v
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = L \/ mag;$/;"	v
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = UU(:, 1:xDim);$/;"	v
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^    Lsat = (k-1)*sum(log(eps+Y)) - sum(Y)\/theta;$/;"	v
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^  Lsat = 2*length(Y)*sum(Y.*log((Y==0)+Y).\/mean(Y) + (1-Y).*log((Y==1)+1-Y).\/(1-mean(Y)));$/;"	v
M	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    M = C*X;$/;"	v
METATAGS	lib/TrialData/util/openNEV_td.m	/^        METATAGS = textread([fileFullPath(1:end-8) '.sif'], '%s');$/;"	v
MM	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    MM   = iPh - iPhL \/ (I + L' * iPhL) * iPhL';$/;"	v
M_behave	bumpcurl_tensors.m	/^        M_behave = cp_als(behave_tensor,num_factors,'maxiters',200,'printitn',10);$/;"	v
M_emg	bumpcurl_tensors.m	/^            M_emg = cp_als(emg_tensor,num_factors,'maxiters',100,'printitn',10);$/;"	v
M_neural	bumpcurl_tensors.m	/^        M_neural = cp_apr(neural_tensor,num_factors,'maxiters',100,'printitn',10);$/;"	v
Mapfile	lib/TrialData/util/openNSx_td.m	/^            Mapfile = KTUEAMapFile;$/;"	v
Mij	lib/TrialData/util/lib/isomap/IsomapII.m	/^    Mij = sqrt(mean_dists * mean_dists');$/;"	v
Minimum	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode *FibHeap::Minimum()$/;"	f	class:FibHeap	typeref:typename:FibHeapNode *
Mode	lib/TrialData/util/openNEV_td.m	/^            Mode                    = ExtendedHeader(25);$/;"	v
Model1r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model1r = sum(Y.*log(eps+Yhat1) - Yhat1);$/;"	v
Model2r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model2r = sum(Y.*log(eps+Yhat2) - Yhat2);$/;"	v
Modelr	lib/TrialData/util/compute_pseudo_R2.m	/^  Modelr = sum(Y.*log(eps+Yhat) - Yhat);$/;"	v
N	lib/TrialData/Tools/dimReduce.m	/^                N = size(trial_data(trial).(signals{1,1}),1);$/;"	v
N	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^N = size(X, 1);$/;"	v
N	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^N    = length(seq);$/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^     N = length(feval(d_func,1)); $/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^     N = size(D,1); $/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^N = length(Y.index); $/;"	v
N	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      double   N;$/;"	m	class:HeapNode	typeref:typename:double	file:
N	lib/TrialData/util/lib/isomap/dijkstra.m	/^N = size(G, 1);$/;"	v
N	lib/TrialData/util/lib/isomap/isomap.m	/^N = length(Y.index); $/;"	v
N	lib/TrialData/util/lib/isomap/isomap.m	/^N = size(D,1); $/;"	v
N	lib/TrialData/util/process_lfp.m	/^N = floor(size(data,1)\/round(fft_step*samprate));$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^            NEV = remove_spike_artifacts(NEV,rejection_num_chans,rejection_window,true);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename,'nosave');$/;"	v
NEV	lib/TrialData/util/openNEV_td.m	/^NEV = struct('MetaTags',[], 'ElectrodesInfo', [], 'Data', []);$/;"	v
NSx	lib/TrialData/DataProcessing/processNSx.m	/^NSx = openNSx_td(filename,'read');$/;"	v
NSx	lib/TrialData/util/openNSx_td.m	/^NSx          = struct('MetaTags',[],'Data',[], 'RawData', []);$/;"	v
P	lib/TrialData/Analysis/getModel.m	/^P                    =  [];        % polynomial fit if nonlinear cascade$/;"	v
P	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    P = U;$/;"	v
P	lib/TrialData/util/lib/isomap/dijk.m	/^P = zeros(length(s),n);$/;"	v
PD	plotTuningDistr.m	/^PD = atan2(glm_info.b(3,:),glm_info.b(2,:));$/;"	v
PacketID	lib/TrialData/util/openNEV_td.m	/^    PacketID = char(ExtendedHeader(1:8)');$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = tRawData(5:6,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = typecast(PacketIDs(:), 'uint16').';$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^PacketIDs = [];$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      Ph = max(varFloor, Ph);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      Ph = mean(Ph) * ones(xDim, 1);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    Ph = diag(cX) - sum(cX_beta .* L, 2);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  Ph    = diag(cX);$/;"	v
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Print(FibHeapNode *Tree, FibHeapNode *theParent)$/;"	f	class:FibHeap	typeref:typename:void
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::Print()$/;"	f	class:FibHeapNode	typeref:typename:void
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::Print()$/;"	f	class:HeapNode	typeref:typename:void
Q	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Q = size(Xfull,3);$/;"	v
Q	lib/TrialData/util/predict_kalman.m	/^Q = kf_model.Q;$/;"	v
Q	lib/TrialData/util/train_kalman.m	/^Q = (Y_new'*Y_new - A*(Z'*Y_new))\/length(Y_new);$/;"	v
R	lib/TrialData/util/lib/isomap/IsomapII.m	/^R = zeros(1,length(dims)); $/;"	v
R	lib/TrialData/util/lib/isomap/isomap.m	/^R = zeros(1,length(dims)); $/;"	v
R	lib/TrialData/util/predict_kalman.m	/^R = kf_model.R;$/;"	v
R	lib/TrialData/util/train_kalman.m	/^R = (X'*X - C*(Y'*X))\/length(Y);$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^    R2 = (1-(Lsat - L1).\/(Lsat-L0));$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = (1-(Sat_r-Modelr).\/(Sat_r-Intercr))';$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = 1 - L1\/L0;$/;"	v
R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  R2 = (1-(Sat_r-Model2r).\/(Sat_r-Model1r))';$/;"	v
ReadData	lib/TrialData/util/openNSx_td.m	/^        ReadData = inputArgument;$/;"	v
Report	lib/TrialData/util/openNSx_td.m	/^        Report = inputArgument;$/;"	v
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    S = size(Xfull,2);$/;"	v
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^S = S(1:size(W,2));$/;"	v
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^S = diag(S);$/;"	v
S	lib/TrialData/util/predict_kalman.m	/^    S = C * Vpred * C' + R;$/;"	v
S1_FR_indiv_sep_CI_hi	bumpcurl_script.m	/^            S1_FR_indiv_sep_CI_hi = zeros(size(signalID,1),1);$/;"	v
S1_FR_indiv_sep_CI_lo	bumpcurl_script.m	/^            S1_FR_indiv_sep_CI_lo = zeros(size(signalID,1),1);$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-Yhat).^2,1);$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-repmat(meanY,size(Y,1),1)).^2);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat).^2,1);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat2).^2,1);$/;"	v
STATEnew	lib/TrialData/util/predict_kalman.m	/^STATEnew = zeros(size(OBSERVATIONS,1),size(STATE0,2));$/;"	v
STATEpred	lib/TrialData/util/predict_kalman.m	/^        STATEpred  = STATE0';$/;"	v
STATEpred	lib/TrialData/util/predict_kalman.m	/^        STATEpred = A * STATEprev;$/;"	v
STATEprev	lib/TrialData/util/predict_kalman.m	/^        STATEprev = STATEnew(t-1,:)';$/;"	v
Sat_r	lib/TrialData/util/compute_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
Sat_r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
SetIndexValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      void SetIndexValue( long int v) { IndexV = v; };$/;"	f	class:HeapNode	typeref:typename:void	file:
SetKeyValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      void SetKeyValue(double n) { N = n; };$/;"	f	class:HeapNode	typeref:typename:void	file:
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = double(StartPacket) * NSx.MetaTags.SamplingFreq;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^        StartPacket = inputArgument(1);$/;"	v
T	lib/TrialData/Analysis/runDPCA.m	/^T = size(trial_data(1).(signals{1,1}),1);$/;"	v
T	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    T = size(Xfull,4);$/;"	v
T	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    T    = floor(size(dat(n).spikes, 2) \/ (binWidth\/dataBinWidth));$/;"	v
T	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    T   = seq(n).T;$/;"	v
TT	lib/TrialData/util/orthogonalize.m	/^    TT = diag(diag(DD)) * VV';$/;"	v
TimeScale	lib/TrialData/util/openNSx_td.m	/^        TimeScale = inputArgument;$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = tRawData(1:4,:);$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = typecast(Timestamp(:), 'uint32').';$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^Timestamp = [];$/;"	v
UnLab	lib/TrialData/util/lib/isomap/dijk.m	/^      UnLab = 1:n;$/;"	v
Union	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Union(FibHeap *OtherHeap)$/;"	f	class:FibHeap	typeref:typename:void
V	lib/TrialData/Analysis/getModel.m	/^                    V = zeros(size(y,2));$/;"	v
V	lib/TrialData/Analysis/runDPCA.m	/^V = [];$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    V = V(:, order(1:L));$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    V = V(:, toKeep);$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^V = encoder;$/;"	v
VAF	lib/TrialData/util/compute_vaf.m	/^VAF = 1-SSE.\/SS;$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null                      = V(size(y,2)+1:end,:)';$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null = [];$/;"	v
V_potent	lib/TrialData/Analysis/getPotentSpace.m	/^    V_potent                    = V(1:size(y,2),:)';$/;"	v
Vpred	lib/TrialData/util/predict_kalman.m	/^        Vpred = A * Vprev * A' + Q;$/;"	v
Vpred	lib/TrialData/util/predict_kalman.m	/^        Vpred = V0;$/;"	v
Vprev	lib/TrialData/util/predict_kalman.m	/^        Vprev = Vpred;$/;"	v
Vprev	lib/TrialData/util/predict_kalman.m	/^        Vprev = squeeze(Vnew(:,:,t-1));$/;"	v
W	lib/TrialData/Analysis/getPotentSpace.m	/^    W = zeros( size(y,2), size(x,2) );$/;"	v
W	lib/TrialData/Analysis/runDPCA.m	/^W = [];$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    W = W(:, order(1:L));$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    W = W(:, toKeep);$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^W = decoder';$/;"	v
WSVARS	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^WSVARS = vars(~ismember(vars, {'X', 'Y', 'LL', 'estParams',...$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = bsxfun(@minus, X, mean(X(:,:),2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = ipermute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = nanmean(X, length(size(X)));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = permute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = reshape(X, [dims(dimrest) prod(dims(dimlist))]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^X = Xfull(:,:)';$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      X              = [ws.seqTest.xsm];$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      X              = fastfa_estep(Y, ws.kern(k).estParams);$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    X               = [ws.kern(k).seqTrain.xpost];$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    X               = [ws.seqTrain.xsm];    $/;"	v
X	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^        X               = fastfa_estep(Y, estParams);$/;"	v
XF	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    XF = options.X_extra(:,:)';$/;"	v
XFcen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    XFcen = bsxfun(@minus, XF, mean(X));$/;"	v
Xcen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Xcen = bsxfun(@minus, X, mean(X));$/;"	v
Xfull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Xfull = bsxfun(@minus, Xfull, mean(X,2));$/;"	v
XfullCen	lib/TrialData/td_limblab/td_dpca/dpca.m	/^XfullCen = reshape(X, size(Xfull));$/;"	v
XfullCen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^XfullCen = bsxfun(@minus, Xfull, mean(X)');$/;"	v
XfullNN	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XfullNN = bsxfun(@times, ones(dims(1:end-1)), options.numOfTrials);$/;"	v
Xmargs	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Xmargs = dpca_marginalize(Xfull, 'combinedParams', options.combinedParams, 'ifFlat', 'yes');$/;"	v
XmargsNoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XmargsNoise = dpca_marginalize(XnoiseFull, 'combinedParams', options.combinedParams);$/;"	v
Xnoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Xnoise = XnoiseFull(:,:);$/;"	v
Xnoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Xnoise = bsxfun(@minus, Xnoise, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XnoiseFull = bsxfun(@minus, XnoiseFull, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XnoiseFull = reshape(dif, dims(1:end-1));$/;"	v
Xorth	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Xorth   = estParams.Corth' * bsxfun(@minus, Y, estParams.d);$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = TT * X;$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = mag * X;    $/;"	v
Y	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    Y = X;$/;"	v
Y	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^Y = X;$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Y              = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Y       = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^        Y = [kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    Y = [kern(k).seqTrain.y];$/;"	v
YY	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    YY = YYY;$/;"	v
YY	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    YY = ZZ;$/;"	v
Y_new	lib/TrialData/util/train_kalman.m	/^    Y_new =  Y(2:end,:);$/;"	v
Ycs	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_fa(Y, kern(k).estParams);$/;"	v
Ycs	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_pca(Y, kern(k).estParams);$/;"	v
YtestRaw	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    YtestRaw  = [seqTest.y];$/;"	v
YtrainRaw	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    YtrainRaw = [seqTrain.y];$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        Z = W(:,components)'*X;$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        Z = X - V(:,i)*(W(:,i)'*X);$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Z = W'*X;$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Z = Xcen * W;$/;"	v
Z	lib/TrialData/util/train_kalman.m	/^    Z = Y(1:end-1,:);$/;"	v
ZF	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    ZF = XFcen * W;$/;"	v
ZZ	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^        ZZ = Xmargs{j} - V(:,i)*(W(:,i)'*Xmargs{j});$/;"	v
ZZ	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    ZZ = {};$/;"	v
Zfull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    Zfull = reshape(ZF(:,componentsToPlot)', [length(componentsToPlot) dataDimFull(2:end)]);$/;"	v
Zfull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Zfull = reshape(Z(:,componentsToPlot)', [length(componentsToPlot) dataDim(2:end)]);$/;"	v
_AddToRootList	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_AddToRootList(FibHeapNode *x)$/;"	f	class:FibHeap	typeref:typename:void
_CascadingCut	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_CascadingCut(FibHeapNode *y)$/;"	f	class:FibHeap	typeref:typename:void
_Consolidate	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Consolidate()$/;"	f	class:FibHeap	typeref:typename:void
_Cut	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Cut(FibHeapNode *x, FibHeapNode *y)$/;"	f	class:FibHeap	typeref:typename:void
_Exchange	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Exchange(FibHeapNode*& N1, FibHeapNode*& N2)$/;"	f	class:FibHeap	typeref:typename:void
_FIBHEAP_CPP	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^#define _FIBHEAP_CPP$/;"	d	file:
_Link	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Link(FibHeapNode *y, FibHeapNode *x)$/;"	f	class:FibHeap	typeref:typename:void
a	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^a = corr(Z(:,1:numCompToShow));$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = 180;$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = pi;$/;"	v
a	lib/TrialData/util/lib/isomap/L2_distance.m	/^        a = [a; zeros(1, size(a, 2))]; $/;"	v
a	lib/TrialData/util/resample_signals.m	/^a = zeros(2,size(data,2));$/;"	v
absolute_acc_thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^absolute_acc_thresh = [];$/;"	v
absref	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    absref = 0;$/;"	v
absref	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    absref = ihprs.absref;$/;"	v
act_counts	bumpcurl_script.m	/^            act_counts = histcounts(act_trials.S1_FR(:,neuronnum),[possible_FR;Inf]);$/;"	v
act_idx	bumpcurl_script.m	/^            act_idx = getTDidx(td,'tgtDir',dirs(dirnum),'ctrHoldBump',false,'rand',1);$/;"	v
actual_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^actual_signals  =  {};$/;"	v
actual_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^actual_signals = check_signals(trial_data(1),actual_signals);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = actual_spikes(~ismember(actual_spikes,artifacts));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = find(ismember(in_bin,bins_to_keep));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = reshape(actual_spikes,[],1);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = unique([actual_spikes;new_spikes]);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^actual_spikes = [];$/;"	v
ad_color	plotBumpcurlTuning.m	/^ad_color = colormap('summer');$/;"	v
ad_eval	bumpcurl_analysis.m	/^    ad_eval = evalModel(td_ad,eval_params);$/;"	v
ad_idx	bumpcurl_analysis.m	/^    ad_idx = getTDidx(td,'epoch','AD');$/;"	v
ad_idx	exploreData.m	/^ad_idx = getTDidx(td,'epoch','AD');$/;"	v
ad_idx	plotBumpcurlTuning.m	/^ad_idx = floor(linspace(1,length(ad_color),4));$/;"	v
addCoordPoint2TD	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function trial_data = addCoordPoint2TD(trial_data,params)$/;"	f
addCorrelatedNoise	lib/TrialData/Tools/addCorrelatedNoise.m	/^function [td] = addCorrelatedNoise(trial_data,params)$/;"	f
addFiringRates	lib/TrialData/Tools/addFiringRates.m	/^function td = addFiringRates(trial_data,params)$/;"	f
addProcessedSignal	lib/TrialData/td_limblab/addProcessedSignal.m	/^function trial_data = addProcessedSignal(trial_data,params)$/;"	f
add_interactions	lib/TrialData/Analysis/runDPCA.m	/^add_interactions = true;$/;"	v
add_pred_to_td	lib/TrialData/Analysis/getModel.m	/^add_pred_to_td       =  true;      % whether to add predictions to trial_data$/;"	v
add_proj_to_td	lib/TrialData/Analysis/getPotentSpace.m	/^add_proj_to_td     =  true;   % add projections to trial data$/;"	v
add_proj_to_td	lib/TrialData/Tools/dimReduce.m	/^add_proj_to_td    = true;   % whether to add projections$/;"	v
add_spike_times	lib/TrialData/DataProcessing/convertDataToTD.m	/^add_spike_times = false; % (not implemented) add unbinned spike times$/;"	v
add_std	lib/TrialData/Tools/trialAverage.m	/^add_std     =  false;$/;"	v
add_vals	lib/TrialData/Tools/dupeAndShift.m	/^add_vals     =  true;$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^    adiff = abs(adiff);$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^adiff = angle2 - angle1;$/;"	v
algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^algorithm          =  'pca';$/;"	v
algorithm	lib/TrialData/Tools/dimReduce.m	/^algorithm       = 'pca';$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = cell(size(signals,1),1);$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = {alias};$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^alias    =  ''; % what to call the differentiated field$/;"	v
alias_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^                alias_idx = find(strcmpi(event_alias(:,1),event_list{e}));$/;"	v
allExtraDataPacketIndices	lib/TrialData/util/openNEV_td.m	/^    allExtraDataPacketIndices  = [commentIndices, ...$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = combvec(temp{:})';$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = {'all'};$/;"	v
all_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^    all_events = trials.(event_list{e});$/;"	v
all_points	lib/TrialData/td_limblab/parseFileByTrial.m	/^all_points     =  false;$/;"	v
all_shifts	lib/TrialData/Tools/dupeAndShift.m	/^all_shifts = {varargin{2:2:end}};$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^            all_spikes  = all_spikes.\/trial_data(1).bin_size;$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,td.([array '_spikes']));$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,trial_data(use_trials).([array '_spikes']));$/;"	v
all_trials	lib/TrialData/Analysis/runDPCA.m	/^        all_trials = intersect(all_trials,varargin{i});$/;"	v
all_trials	lib/TrialData/Analysis/runDPCA.m	/^    all_trials = varargin{1};$/;"	v
alpha	bumpcurl_script.m	/^    alpha = 0.05;$/;"	v
alpha	lib/TrialData/Analysis/estimateDimensionality.m	/^alpha           =  0.95; % what fraction of non-noise variance$/;"	v
alpha	lib/TrialData/Tools/softNormalize.m	/^alpha    =  5;$/;"	v
alreadyProcessed	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^alreadyProcessed = containers.Map;$/;"	v
angleDiff	lib/TrialData/util/angleDiff.m	/^function adiff = angleDiff(angle1,angle2,useRad,preserveSign)$/;"	f
animateBumpcurlTrials	lib/animateBumpcurlTrials.m	/^function animateBumpcurlTrials(trial_data,field,bump_colors,waitperiod,tail_length)$/;"	f
appendTDs	lib/TrialData/Tools/appendTDs.m	/^function combined_td = appendTDs(varargin)$/;"	f
array	lib/TrialData/Tools/addFiringRates.m	/^        array = params;$/;"	v
array	lib/TrialData/Tools/addFiringRates.m	/^array         = '';$/;"	v
array	lib/TrialData/Tools/getCommonUnits.m	/^    array = arrays{idx_array};$/;"	v
array	lib/TrialData/Tools/getLFPidx.m	/^        array = getTDfields(trial_data,'arrays');$/;"	v
array	lib/TrialData/Tools/getLFPidx.m	/^array       =  '';$/;"	v
array	lib/TrialData/Tools/removeBadNeurons.m	/^    array = arrays{a};$/;"	v
array	lib/TrialData/td_limblab/getNeuronTuning.m	/^array      =  params.array;$/;"	v
array_alias	lib/TrialData/td_limblab/parseFileByTrial.m	/^array_alias    =  {};$/;"	v
arrayname	bumpcurl_script.m	/^    arrayname = 'S1';$/;"	v
arrays	lib/TrialData/Plotting/visData.m	/^arrays = fn(cellfun(@(x) ~isempty(regexp(x,'_spikes','ONCE')),fn));$/;"	v
arrays	lib/TrialData/Tools/getCommonUnits.m	/^arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/getTDfields.m	/^        arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^    arrays = getTDfields(trial_data,'spikes');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^arrays          =  [];$/;"	v
arrays	lib/TrialData/TrialData_tutorial.m	/^arrays = {'M1','PMd'};$/;"	v
arrays	lib/TrialData/td_limblab/parseFileByTrial.m	/^    arrays = strsplit(cds.meta.array,', ');$/;"	v
arrays	lib/TrialData/td_limblab/subspace_demo.m	/^arrays = strrep(spiking_inputs,'_spikes','');$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^        artifacts = unique([artifacts; find(ismember(in_bin,bins_to_reject))]);$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^artifacts = [];$/;"	v
assignParams	lib/TrialData/util/assignParams.m	/^function assignParams(opts,params)$/;"	f
aux_smoothed_FR	lib/TrialData/util/smooth_data.m	/^    aux_smoothed_FR     = conv(kernel',data(:,i)) .\/ nm;$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = reorderTDfields(avg_data);$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = repmat(struct(),1,num_conds);$/;"	v
avg_neuron_eval	bumpcurl_script.m	/^    avg_neuron_eval = join(avg_neuron_eval,CI_table);$/;"	v
avg_neuron_eval	bumpcurl_script.m	/^    avg_neuron_eval = neuronAverage(neuron_eval,struct(...$/;"	v
ax	bumpcurl_script.m	/^        ax = zeros(size(session_trials.S1_FR,2),1);$/;"	v
axBar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    axBar = subplot(4,4,9);$/;"	v
axColormap	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^axColormap = subplot(4,4,13);$/;"	v
axCum	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    axCum = subplot(4,4,5);$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^    b = zeros(size(x,2)+1,size(y,2));$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^b                    =  [];        % b and s identify if model_info was$/;"	v
b	lib/TrialData/Analysis/getPotentSpace.m	/^    b = zeros(size(x,2),size(y,2));$/;"	v
b	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^b = ihprs.b;$/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    b = bar(options.explainedVar.margVar(:,1:numCompToShow)' , 'stacked', 'BarWidth', 0.75);$/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^b = V(:,1:numCompToShow)'*V(:,1:numCompToShow);$/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^b = [103 0 31]\/256;      %# start$/;"	v
b	lib/TrialData/util/lib/isomap/L2_distance.m	/^        b = [b; zeros(1, size(b, 2))]; $/;"	v
b_pc	lib/TrialData/Analysis/getPotentSpace.m	/^        b_pc = x\\y(:,i);$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^        badUnits = [badUnits; setxor(temp1,temp2,'rows')];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = [];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = unique(badUnits,'rows');$/;"	v
bad_idx	lib/TrialData/Tools/getCommonUnits.m	/^        bad_idx = checkUnitGuides(master_sg,trial_data(i).([array '_unit_guide']));$/;"	v
bad_idx	lib/TrialData/Tools/getTDfields.m	/^            bad_idx = bad_idx | ismember(fn,fn_idx) | ismember(fn,fn_ug) | ismember(fn,meta_vars/;"	v
bad_idx	lib/TrialData/Tools/removeBadTrials.m	/^bad_idx = false(1,length(trial_data));$/;"	v
bad_idx	lib/TrialData/Tools/trimTD.m	/^bad_idx = false(1,length(trial_data));$/;"	v
bad_trial	bumpcurl_script.m	/^        bad_trial = false(length(td),1);$/;"	v
bad_trials	lib/TrialData/Tools/removeBadTrials.m	/^bad_trials = trial_data(bad_idx);$/;"	v
bad_trials	lib/TrialData/td_limblab/getRWMovements.m	/^    bad_trials = cellfun(@(x) ~any(isnan(x)),{trial_data.(go_cue_name)});$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = [];$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = bad_units | mean(all_spikes,1) < min_fr;$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = find(bad_units);$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^    bad_units = zeros(1,size(all_spikes,2));$/;"	v
bandwidth	lib/TrialData/util/process_lfp.m	/^bandwidth         =  50; % max frequency. Add  case to default to  fs\/2?$/;"	v
behave_data	bumpcurl_tensors.m	/^        behave_data = behave_data-repmat(mean(mean(behave_data,3),1),num_timepoints,1,num_trials/;"	v
behave_data	bumpcurl_tensors.m	/^        behave_data = cat(2,cat(3,td.marker_vel),cat(3,td.markers)); % dimensions are timepoints/;"	v
behave_tensor	bumpcurl_tensors.m	/^        behave_tensor = tensor(behave_data);$/;"	v
beta	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    beta = L' * MM; % zDim x xDim$/;"	v
biggers	bumpcurl_script.m	/^        biggers = cat(1,td.ctrHoldBump) & abs(cat(1,td.bumpDir))>360;$/;"	v
binTD	lib/TrialData/Tools/binTD.m	/^function trial_data = binTD(trial_data,num_bins)$/;"	f
binWidth	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
bin_angles	lib/TrialData/util/bin_angles.m	/^function theta = bin_angles(theta,angle_bin_size)$/;"	f
bin_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_events = bin_events(data,t_bin)$/;"	f
bin_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = bin_events(trials,event_list,t_bin)$/;"	f
bin_size	lib/TrialData/DataProcessing/convertDataToTD.m	/^bin_size        =  0.01;    % start at 10ms bins by default$/;"	v
bin_size	lib/TrialData/Tools/addFiringRates.m	/^            bin_size = trial_data(trial).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/convBasisFunc.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/removeBadNeurons.m	/^bin_size        =  trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/smoothSignals.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/td_limblab/getNeuronTuning.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/td_limblab/parseFileByTrial.m	/^    bin_size = .01;$/;"	v
bin_size	lib/TrialData/td_limblab/parseFileByTrial.m	/^    bin_size = round(1000*mode(diff(cds.kin.t)))\/1000;$/;"	v
bin_size	lib/TrialData/util/resample_signals.m	/^bin_size        =  [];$/;"	v
bin_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_spikes = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [binned_spikes,sg] = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_w	lib/TrialData/Analysis/runGPFA.m	/^bin_w       =  0.02;$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^        binned_events = binned_events';$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_events = zeros(length(data),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^            binned_spikes = cds_bin.([arrays{array} '_spikes']);$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
bins	lib/TrialData/util/remove_spike_artifacts.m	/^        bins = i + (0:rejection_samples:last_timestamp+rejection_samples);$/;"	v
bins_to_combine	lib/TrialData/td_limblab/BBDemoScript.m	/^bins_to_combine = 5;$/;"	v
bins_to_keep	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_keep = find(spike_count_in_bin<rejection_num_chans);$/;"	v
bins_to_reject	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_reject = find(spike_count_in_bin>=rejection_num_chans);$/;"	v
bl_clust	lib/estimateBumpFromPCA.m	/^bl_clust = cell(8,1);$/;"	v
bl_color	plotBumpcurlTuning.m	/^bl_color = colormap('autumn');$/;"	v
bl_dir	bumpcurl_analysis.m	/^    bl_dir = atan2(bl_vel(:,2),bl_vel(:,1));$/;"	v
bl_dir_lmpred	bumpcurl_analysis.m	/^    bl_dir_lmpred = atan2(bl_lmvel_pred(:,2),bl_lmvel_pred(:,1));$/;"	v
bl_dir_nnpred	bumpcurl_analysis.m	/^    bl_dir_nnpred = atan2(bl_nnvel_pred(:,2),bl_nnvel_pred(:,1));$/;"	v
bl_idx	bumpcurl_analysis.m	/^    bl_idx = getTDidx(td,'epoch','BL');$/;"	v
bl_idx	exploreData.m	/^bl_idx = getTDidx(td,'epoch','BL');$/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^            bl_idx = getTDidx(trial_data,'epoch','bl','target_direction',utheta(iDir));$/;"	v
bl_idx	plotBumpcurlTuning.m	/^bl_idx = 1;$/;"	v
bl_lmvel_pred	bumpcurl_analysis.m	/^    bl_lmvel_pred = cat(1,td_bl.linmodel_vel_from_spikes);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^                bl_metric = lm_bl.predict(usincos);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),1);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),corr_samples,2);$/;"	v
bl_nnvel_pred	bumpcurl_analysis.m	/^    bl_nnvel_pred = cat(1,td_bl.nn_vel_from_spikes);$/;"	v
bl_temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            bl_temp = zeros(length(bl_idx),2,corr_samples);$/;"	v
bl_vel	bumpcurl_analysis.m	/^    bl_vel = cat(1,td_bl.vel);$/;"	v
block_ends	lib/TrialData/util/process_emg.m	/^block_ends = find(diff([0;data_idx;0])<0);$/;"	v
block_ends	lib/TrialData/util/process_lfp.m	/^block_ends   = find(diff([0;data_idx;0])<0);$/;"	v
block_starts	lib/TrialData/util/process_emg.m	/^block_starts = find(diff([0;data_idx;0])>0);$/;"	v
block_starts	lib/TrialData/util/process_lfp.m	/^block_starts = find(diff([0;data_idx;0])>0);$/;"	v
block_trials	lib/TrialData/Analysis/evalModel.m	/^block_trials     =  false;$/;"	v
bottom	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^bottom = pos(2);$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^            bounds = fliplr(bounds);$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^    bounds = fv{idx};$/;"	v
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = 1:length(y_test);$/;"	v
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = randi(length(y_test),length(y_test),num_bootstraps);$/;"	v
bumpDir_idx	exploreData.m	/^        bumpDir_idx = td(i).bumpDir\/90+1; % only works for 4 bump files$/;"	v
bumpDir_idx	lib/animateBumpcurlTrials.m	/^            bumpDir_idx = td(i).bumpDir\/90+1; % only works for 4 bump files$/;"	v
bumpDir_names	exploreData.m	/^bumpDir_names = {0,90,180,270};$/;"	v
bump_colors	exploreData.m	/^bump_colors = colors(length(epoch_names)+1:end,:);$/;"	v
bumpcurl_analysis	bumpcurl_analysis.m	/^function bumpcurl_analysis(trial_data)$/;"	f
c	lib/TrialData/Analysis/pairwiseCorr.m	/^c = cluster(linkage(pdist(rho),'average'),'cutoff',1);$/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp); [NEV.Data.SerialDigitalIO(1:length(NEV.Data.Seri/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp\/NEV.MetaTags.SampleRes); [NEV.Data.SerialDigitalI/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = {Inputs{NEV.Data.SerialDigitalIO.InsertionReason(AsteriskIndices)}}; [NEV.Da/;"	v
c	lib/curvature.m	/^    c = varargin{1};$/;"	v
c1	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^c1 = zeros(128,3);$/;"	v
c2	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^c2 = zeros(128,3);$/;"	v
cX	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  cX    = cov(X', 1);$/;"	v
cX_beta	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    cX_beta = cX * beta'; % xDim x zDim$/;"	v
calc_fr	lib/TrialData/Tools/removeBadNeurons.m	/^calc_fr         =  false;$/;"	v
calc_rate	lib/TrialData/Tools/smoothSignals.m	/^calc_rate       =  false;$/;"	v
cart2pol_wrap	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function cyl = cart2pol_wrap(cart)$/;"	f
cart2sph_wrap	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function sph = cart2sph_wrap(cart)$/;"	f
cart_names	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_names = repmat({'opensim'},length(coord_postfix),1);$/;"	v
cart_names	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_names = {'markers','marker_vel','marker_acc'};$/;"	v
cart_postfix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_postfix = strcat('_', point, {'Pos','Vel','Acc'});$/;"	v
cart_prefix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_prefix = {'X','Y','Z'};$/;"	v
catTDs	lib/TrialData/Tools/catTDs.m	/^function master_td = catTDs(varargin)$/;"	f
cb	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^cb = colorbar('location', 'southoutside');$/;"	v
cc	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    cc = componentsToPlot(c);$/;"	v
cds_bin	lib/TrialData/td_limblab/parseFileByTrial.m	/^cds_bin = struct();$/;"	v
cell_idx	lib/TrialData/Analysis/runDPCA.m	/^    cell_idx = find(cellfun(@iscell,varargin),1,'first');$/;"	v
center	lib/TrialData/Tools/getEnvelope.m	/^center       =  true;$/;"	v
centerSignals	lib/TrialData/Tools/centerSignals.m	/^function [trial_data, signal_means] = centerSignals(trial_data,params)$/;"	f
center_data	lib/TrialData/Tools/dimReduce.m	/^center_data       = true;   % whether to center data$/;"	v
chanNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            chanNames = cds.units(~cellfun(@isempty,([strfind({cds.units.array},arrays{array})])/;"	v
chan_idx	lib/TrialData/DataProcessing/processNEV.m	/^            chan_idx = NEV.Data.Spikes.Electrode == spiking_chans(iElec);$/;"	v
channelIDToDelete	lib/TrialData/util/openNSx_td.m	/^channelIDToDelete = setdiff(1:ChannelCount, userRequestedChanRow);$/;"	v
channelThatWereRead	lib/TrialData/util/openNSx_td.m	/^channelThatWereRead = min(userRequestedChanRow):max(userRequestedChanRow);$/;"	v
channels	lib/TrialData/Tools/getLFPidx.m	/^    channels = chans;$/;"	v
channels	lib/TrialData/Tools/getLFPidx.m	/^channels    =  'all';$/;"	v
chans	lib/TrialData/Tools/getLFPidx.m	/^        chans = [];$/;"	v
chans	lib/TrialData/Tools/getLFPidx.m	/^chans = unique(lfp_guide(:,1));$/;"	v
checkUnitGuides	lib/TrialData/util/checkUnitGuides.m	/^function [badUnits, varargout] = checkUnitGuides(varargin)$/;"	f
check_field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^function field_extra = check_field_extra(field_extra,signals)$/;"	f
check_signals	lib/TrialData/util/subfcn/check_signals.m	/^function signals = check_signals(trial_data,signals)$/;"	f
check_td_quality	lib/TrialData/util/subfcn/check_td_quality.m	/^function trial_data = check_td_quality(trial_data)$/;"	f
circular_mean	lib/TrialData/util/circular_mean.m	/^function [mu, ul, ll] = circular_mean(alpha, w, dim)$/;"	f
cln	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    cln = {c};$/;"	v
cluster_order	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_order    =  false;$/;"	v
cluster_rho	lib/TrialData/Analysis/pairwiseCorr.m	/^function sort_idx = cluster_rho(rho)$/;"	f
cluster_signals	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_signals  =  false;$/;"	v
cm_viridis	bumpcurl_tensors.m	/^        cm_viridis = viridis(200);$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.ObjTrackInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.VideoSyncInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^            cnt = 1;$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = coinc > cutoff_val;$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = zeros(size(all_spikes,2));$/;"	v
col	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^        col = useColor(n,:);$/;"	v
col	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^        col = useColor;$/;"	v
col_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            col_name = [marker_names{marker_ctr} marker_postfix{col_ctr}];$/;"	v
colorGradient	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^colorGradient = false;$/;"	v
colors	exploreData.m	/^colors = linspecer(length(epoch_names)+length(bumpDir_names));$/;"	v
colors	exploreData.m	/^colors = {'b','r','g'};$/;"	v
colors	lib/TrialData/td_limblab/BBDemoScript.m	/^colors = linspecer(4);$/;"	v
colors	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^        colors = lines(numOfStimuli);$/;"	v
colors	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    colors = lines(numOfStimuli);$/;"	v
cols_to_keep	bumpcurl_script.m	/^        cols_to_keep = [...$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^            combined_params = [combined_params, {{combs(i,:)+1,[1 combs(i,:)+1]}}];$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^    combined_params = [combined_params, {{i+1, [1 i+1]}}];$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^combined_params  = {};$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^combined_params = { {1} };$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td  =  check_td_quality(combined_td);$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td = reorderTDfields(combined_td);$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td = varargin{1};$/;"	v
combs	lib/TrialData/Analysis/runDPCA.m	/^        combs = nchoosek(1:length(conditions),2);$/;"	v
commentIndices	lib/TrialData/util/openNEV_td.m	/^commentIndices             = find(PacketIDs == commentPacketID);$/;"	v
commentPacketID	lib/TrialData/util/openNEV_td.m	/^commentPacketID = 65535;$/;"	v
comp	lib/TrialData/util/lib/isomap/IsomapII.m	/^comp = options.comp; $/;"	v
comp	lib/TrialData/util/lib/isomap/isomap.m	/^comp = options.comp; $/;"	v
components	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        components = find(ismember(whichMarg, find(margNums==i)));$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            componentsToPlot = [componentsToPlot find(options.whichMarg==uni(u), 2)];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            componentsToPlot = componentsToPlot(1:12);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = 1:12;$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = [];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = [componentsToPlot moreComponents];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = componentsToPlot(1:numCompToShow);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = sort(componentsToPlot);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    componentsToPlot = [];$/;"	v
comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^comps = comps(comp_order(end:-1:1));    $/;"	v
comps	lib/TrialData/util/lib/isomap/isomap.m	/^comps = comps(comp_order(end:-1:1));    $/;"	v
compute_pseudo_R2	lib/TrialData/util/compute_pseudo_R2.m	/^function R2 = compute_pseudo_R2(Y, Yhat, Ymean, distr, Yhat_null)$/;"	f
compute_r2	lib/TrialData/util/compute_r2.m	/^function r2 = compute_r2(sig1,sig2,which_method)$/;"	f
compute_rel_pseudo_R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^function R2 = compute_rel_pseudo_R2(Y, Yhat1, Yhat2)$/;"	f
compute_vaf	lib/TrialData/util/compute_vaf.m	/^function VAF = compute_vaf(Y,Yhat,Yhat2)$/;"	f
cond_idx	bumpcurl_script.m	/^        cond_idx = ismember(neuron_eval(:,keycols),key);$/;"	v
cond_idx	lib/TrialData/Tools/subtractConditionMean.m	/^cond_idx  =  1:length(trial_data);$/;"	v
cond_idx	lib/TrialData/Tools/trialAverage.m	/^cond_idx = cell(1,num_conds);$/;"	v
cond_vals	lib/TrialData/Tools/trialAverage.m	/^    cond_vals = cell(1,length(conditions));$/;"	v
condition	lib/TrialData/Analysis/estimateDimensionality.m	/^condition       =  'target_direction';$/;"	v
conditions	lib/TrialData/Analysis/runDPCA.m	/^conditions = cell(1,length(varargin)-1);$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^    conditions = params;$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^    conditions = {'all'};$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^conditions  =  {};$/;"	v
conds	bumpcurl_script.m	/^    conds = {'','act_','pas_'};$/;"	v
conds	bumpcurl_script.m	/^    conds = {'act','pas'};$/;"	v
conformal	lib/TrialData/util/lib/isomap/IsomapII.m	/^conformal = options.conformal;  % [RMS]$/;"	v
const	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  const = -xDim\/2*log(2*pi);$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = [cont_idx; cont_idx(emg_idx)];$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = cont_idx_new;$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^cont_idx = find(ismember(fn,fn_cont));$/;"	v
cont_idx_new	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx_new = zeros(size(cont_idx));$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^        cont_var_ref = {cont_var_ref};$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^    cont_var_ref = cont_vars;$/;"	v
cont_vars	lib/TrialData/Tools/getTDfields.m	/^cont_vars = {'pos','vel','speed','acc','force','emg','t','x','y','z'}; % hard coded list of opti/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^            cont_vars_here = fn(ismember(fn,cont_var_ref));$/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^        cont_vars_here = cont_vars_here(cellfun(@isempty,regexp(cont_vars_here,'_shift_vals')));$/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^        cont_vars_here = getTDfields(trial_data,'spikes');$/;"	v
convBasisFunc	lib/TrialData/Tools/convBasisFunc.m	/^function trial_data = convBasisFunc(trial_data,params)$/;"	f
convertDataToTD	lib/TrialData/DataProcessing/convertDataToTD.m	/^function [trial_data,td_params,error_flag] = convertDataToTD(varargin)$/;"	f
convert_to_mv	lib/TrialData/DataProcessing/processNSx.m	/^convert_to_mv = true;$/;"	v
coord	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^coord = 'sph';$/;"	v
coord_postfix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^coord_postfix = {'pos','vel','acc'};$/;"	v
coord_test	lib/TrialData/td_limblab/coord_test.m	/^function pass = coord_test(trial_data)$/;"	f
corr_actpr2_neuronsep	bumpcurl_script.m	/^            corr_actpr2_neuronsep = corr(neuron_eval_select.S1_FR_indiv_sep,neuron_eval_select.(/;"	v
corr_cell	bumpcurl_script.m	/^    corr_cell = cell(height(keyTable),1);$/;"	v
corr_paspr2_neuronsep	bumpcurl_script.m	/^            corr_paspr2_neuronsep = corr(neuron_eval_select.S1_FR_indiv_sep,neuron_eval_select.(/;"	v
corr_pr2_neuronsep	bumpcurl_script.m	/^            corr_pr2_neuronsep = corr(neuron_eval_select.S1_FR_indiv_sep,neuron_eval_select.(spr/;"	v
corr_samples	lib/TrialData/td_limblab/getLearningMetrics.m	/^corr_samples = 1000;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^count = 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^                count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                    count = count + n_signals(iSig);$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                count = 0;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                count = count + N;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^            count = 0;$/;"	v
count	lib/TrialData/Tools/getSigByTrial.m	/^    count = count + length(signals{iSig,2});$/;"	v
count	lib/TrialData/Tools/getSigByTrial.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^                count = count + 1;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^count = 0;$/;"	v
count	lib/TrialData/td_limblab/getRWMovements.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/td_limblab/getRWMovements.m	/^count = 0;$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^    count = count + length(idx{iSig});$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^count = 0;$/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+(K+1); $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+K; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+l; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^         counter = 0; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^     counter = 0; $/;"	v
covar	lib/TrialData/td_limblab/getNeuronTuning.m	/^        covar = [trial_data.target_direction]';$/;"	v
covariate	lib/TrialData/td_limblab/getNeuronTuning.m	/^covariate  =  'target';$/;"	v
crossval_correction	bumpcurl_script.m	/^                crossval_correction = 1\/(num_folds*num_repeats) + 1\/(num_folds-1);$/;"	v
ctrs	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ctrs = yrnge(1):db:yrnge(2);   % centers (peak locations) for basis vectors$/;"	v
curr_path	lib/TrialData/util/getGitInfo.m	/^curr_path = mfilename('fullpath');$/;"	v
currentLocation	lib/TrialData/util/openNEV_td.m	/^currentLocation = ftell(FID);$/;"	v
currentParams	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^currentParams = startParams;$/;"	v
curvature	lib/curvature.m	/^function k = curvature(varargin)$/;"	f
cutoff_val	lib/TrialData/Tools/removeBadNeurons.m	/^        cutoff_val = prctile_dist(floor(10*prctile_cutoff));$/;"	v
cyc	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  cyc        = 1e8;$/;"	v
cyl	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cyl = [th r z];$/;"	v
d	lib/TrialData/Analysis/pairwiseCorr.m	/^d = squareform(pdist(rho));$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^d = length(X);$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            d = d\/sum(d)*100;$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar \/ options.explainedVar.totalVar * 100;$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar_signal \/ options.explainedVar.totalVar_si/;"	v
d	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  d     = mean(X, 2);$/;"	v
d	lib/TrialData/util/lib/isomap/IsomapII.m	/^         d = feval(d_func,i); $/;"	v
d	lib/TrialData/util/lib/isomap/L2_distance.m	/^    d = real(d);/;"	v
d	lib/TrialData/util/lib/isomap/L2_distance.m	/^    d = sqrt(bsxfun(@plus, sum(a .* a)', bsxfun(@minus, sum(b .* b), 2 * a' * b)));$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^                d = filtfilt(bhigh,ahigh,double(d));$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            d = data(i,:);$/;"	v
dPD	plotBumpcurlTuning.m	/^dPD = PD-repmat(PD(1,:),num_epochs,1);$/;"	v
d_func	lib/TrialData/util/lib/isomap/IsomapII.m	/^     d_func = D; $/;"	v
dat	lib/TrialData/Analysis/runGPFA.m	/^dat = repmat(struct(),size(trial_data));$/;"	v
dat	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    dat = seq(n).(xspec)(dimsToPlot,:);$/;"	v
data	lib/TrialData/Analysis/getNoiseCovar.m	/^data = get_vars(td,noise_signals);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = (data - repmat(mu_in,size(data,1),1)) * w_in;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = data(:,1:in_dims);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = get_vars(trial_data(trial),in_signals);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = trial_data(trial).([sig_name_in{:} '_pca']);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = (data - repmat(mu_out,size(data,1),1)) * w_out;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = get_vars(trial_data(trial),out_signals);$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^    data = [data, temp(:,signals{i,2})];$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^data = [];$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data = process_emg(data,temp_params);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        data = which_operation(data')';$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    data = file_data_temp.data(:,idx);$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^            data = [];$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^        data = cell(1,length(labels));$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^    data = data\/4e3;$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^data = double(NSx.Data)';$/;"	v
data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    data = get_vars(td(trial),signals);$/;"	v
data	lib/TrialData/Tools/convBasisFunc.m	/^                data = trial_data(trial).(signals{iSig,1});$/;"	v
data	lib/TrialData/Tools/convBasisFunc.m	/^                data = zeros(size(trial_data(trial).(fn_time{1}),1),1);$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^                data = data - repmat(mu,size(data,1),1);$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^                data = zeros(size(trial_data(trial).(signals{1,1}),1),sum(n_signals));$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^        data = [data, temp_data(:,signals{i,2})];$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^    data = [];$/;"	v
data	lib/TrialData/Tools/getDifferential.m	/^        data = trial_data(trial).(signal);$/;"	v
data	lib/TrialData/Tools/getNorm.m	/^        data = getSig(trial_data(trial),signals(iSig,:));$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^                data = smooth_data(data,bin_size,width);$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^            data = getSig(trial_data(trial),signals(iSig,1));$/;"	v
data	lib/TrialData/Tools/sqrtTransform.m	/^        data = getSig(trial_data(trial),signals{iSig,:});$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = data';$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = reshape(data, size(data,1), []);$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = squeeze(data);$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data -  repmat(mean(data,1),size(data,1),1);$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data - repmat(mean(data,2),1,size(data,2));$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data_ds;$/;"	v
data	lib/TrialData/util/process_lfp.m	/^data = double(data);$/;"	v
data	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^data = file_data.data;$/;"	v
dataBinWidth	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  dataBinWidth = 1; %in msec$/;"	v
dataDetrend	lib/TrialData/util/resample_signals.m	/^dataDetrend = zeros(size(data,1),size(data,2));$/;"	v
dataDim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^dataDim = size(Xfull);$/;"	v
dataDimFull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    dataDimFull = size(options.X_extra);$/;"	v
dataResampled	lib/TrialData/util/resample_signals.m	/^dataResampled = zeros(size(temp,1),size(temp,2));$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = bin_events(data,t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = bin_spikes(data,1:length(data),t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = histcounts(trig_ts,t_bin)'; % bin$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = interp1(t_resamp,data_resampled,t_bin);$/;"	v
data_ds	lib/TrialData/util/process_lfp.m	/^    data_ds = zeros(ceil(size(data,1)\/downsample_fac),size(data,2));$/;"	v
data_fft	lib/TrialData/util/process_lfp.m	/^    data_fft = abs(data_fft);$/;"	v
data_fft	lib/TrialData/util/process_lfp.m	/^data_fft = cat(2, ...$/;"	v
data_idx	lib/TrialData/util/process_emg.m	/^data_idx = ~any(isnan(data),2);$/;"	v
data_idx	lib/TrialData/util/process_lfp.m	/^data_idx = ~any(isnan(data),2);$/;"	v
data_poly	lib/TrialData/util/resample_signals.m	/^    data_poly = data(~nanners,i);$/;"	v
data_smooth	lib/TrialData/util/smooth_data.m	/^data_smooth = zeros(nbr_samples,nbr_chs);$/;"	v
data_type	lib/TrialData/DataProcessing/processNEV.m	/^data_type        = 'spikes'; % 'spikes', 'comments' for now$/;"	v
dataroot	bumpcurl_script.m	/^        dataroot = 'G:\\raeed\\project-data\\limblab\\s1-adapt';$/;"	v
dataroot	bumpcurl_script.m	/^        dataroot = '\/data\/raeed\/project-data\/limblab\/s1-adapt';$/;"	v
db	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^db = diff(yrnge)\/(ncols-1);    % spacing between cosine bump peaks$/;"	v
dds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        dds = [0; diff(ds)];$/;"	v
ddx	lib/curvature.m	/^ddx = diff(dx);$/;"	v
ddy	lib/curvature.m	/^ddy = diff(dy);$/;"	v
decimate_signals	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = decimate_signals(data,var_list,bin_size)$/;"	f
decoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    decoder = [decoder; D];$/;"	v
decoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^decoder = [];$/;"	v
deleteChannels	lib/TrialData/util/openNSx_td.m	/^	deleteChannels = setdiff(channelThatWereRead, userRequestedChanRow) - min(userRequestedChanRow)/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = 1;$/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = varargin{4};$/;"	v
df	lib/TrialData/util/openNEV_td.m	/^            df   = typecast(ExtendedHeader(13:14),'int16');$/;"	v
dif	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dif = dif .\/ sqrt(2*XfullNN(:));$/;"	v
dif	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dif = options.X_trial(sub2ind([prod(dims(1:end-1)) dims(end)], (1:prod(dims(1:end-1)))', ind/;"	v
digserIndices	lib/TrialData/util/openNEV_td.m	/^digserIndices              = find(PacketIDs == digserPacketID);$/;"	v
digserPacketID	lib/TrialData/util/openNEV_td.m	/^digserPacketID = 0;$/;"	v
digserTimestamp	lib/TrialData/util/openNEV_td.m	/^digserTimestamp            = Timestamp(digserIndices);$/;"	v
dijk	lib/TrialData/util/lib/isomap/dijk.m	/^function D = dijk(A,s,t)$/;"	f
dijkstra	lib/TrialData/util/lib/isomap/dijkstra.m	/^function D = dijkstra( G , S )$/;"	f
dim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    dim = size(Xfull);$/;"	v
dim	lib/TrialData/util/circular_mean.m	/^  dim = 1;$/;"	v
dimReduce	lib/TrialData/Tools/dimReduce.m	/^function [trial_data,info_out] = dimReduce(trial_data, params)$/;"	f
dimrest	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^dimrest = setdiff(1:length(dims), dimlist);$/;"	v
dims	lib/TrialData/Analysis/estimateDimensionality.m	/^dims = find(cumsum(e).\/(alpha*(1-cumsum(noise_eigen_prctile))) > 1,1,'first');$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dims = size(options.X_trial);$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^dims = size(X);$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    dims = size(data);$/;"	v
dims	lib/TrialData/util/lib/isomap/IsomapII.m	/^dims = options.dims; $/;"	v
dims	lib/TrialData/util/lib/isomap/IsomapII.m	/^dims = unique(min(dims,nl-1));    %% don't embed in more dimensions than landmarks-1$/;"	v
dims	lib/TrialData/util/lib/isomap/isomap.m	/^dims = options.dims; $/;"	v
dimsToPlot	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^dimsToPlot = 1:3;$/;"	v
dir_colors	bumpcurl_tensors.m	/^        dir_colors = linspecer(num_colors);$/;"	v
dir_idx	bumpcurl_tensors.m	/^        dir_idx = mod(round(trial_dirs\/(2*pi\/num_colors)),num_colors)+1;$/;"	v
direction_flag	lib/TrialData/Tools/dupeAndShift.m	/^direction_flag = all(cellfun(@(x) all(x > 0), all_shifts));$/;"	v
dirs	bumpcurl_analysis.m	/^    dirs = repmat(cat(1,td_bl.bumpDir),2,1);$/;"	v
dirs	bumpcurl_script.m	/^        dirs = unique(cat(1,td.tgtDir));$/;"	v
dirs	lib/TrialData/td_limblab/BBDemoScript.m	/^dirs = unique([trial_data.target_direction]);$/;"	v
displ	lib/TrialData/util/lib/isomap/IsomapII.m	/^displ = options.display; $/;"	v
displ	lib/TrialData/util/lib/isomap/isomap.m	/^displ = options.display; $/;"	v
do_avg	lib/TrialData/Tools/binTD.m	/^            do_avg =  true;$/;"	v
do_avg	lib/TrialData/Tools/binTD.m	/^    do_avg = false;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^        do_boot = true;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^do_boot = false;$/;"	v
do_dim_estimate	lib/TrialData/Analysis/getPotentSpace.m	/^do_dim_estimate    =  false;   % whether to attempt Machens method to estimate dimensionality$/;"	v
do_fr_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_fr_check     =  true;$/;"	v
do_lasso	lib/TrialData/Analysis/getModel.m	/^do_lasso      =  false;$/;"	v
do_norm	lib/TrialData/Analysis/pairwiseCorr.m	/^do_norm          =  false;$/;"	v
do_onset	lib/TrialData/td_limblab/getRWMovements.m	/^do_onset           =  true;$/;"	v
do_plot	lib/TrialData/Analysis/getNoiseCovar.m	/^do_plot         =  false;$/;"	v
do_plot	lib/TrialData/Analysis/runDPCA.m	/^do_plot        =  true;$/;"	v
do_plot	lib/TrialData/Tools/addCorrelatedNoise.m	/^do_plot         =  false;$/;"	v
do_shunt_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_shunt_check  =  false;$/;"	v
do_smoothing	lib/TrialData/Tools/dimReduce.m	/^do_smoothing      = false;  % will smooth before dim reduction  (trial_data projections are unsm/;"	v
do_smoothing	lib/TrialData/Tools/smoothSignals.m	/^do_smoothing    =  true; % will just return trial_data if this is false$/;"	v
do_the_loading	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,extra_outs] = do_the_loading(filename,func_calls)$/;"	f
dodijk_sparse	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void dodijk_sparse( $/;"	f	typeref:typename:void
dot_width	lib/TrialData/Plotting/visData.m	/^dot_width          =   3;        % standard width for dot markers$/;"	v
downsample_fac	lib/TrialData/util/process_lfp.m	/^downsample_fac    =  0;        % factor for decimate$/;"	v
dpca	lib/TrialData/td_limblab/td_dpca/dpca.m	/^function [W, V, whichMarg] = dpca(Xfull, numComps, varargin)$/;"	f
dpca_explainedVariance	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^function explVar = dpca_explainedVariance(Xfull, W, V, varargin)$/;"	f
dpca_marginalize	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function [YY, margNums] = dpca_marginalize(X, varargin)$/;"	f
dpca_plot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^function dpca_plot(Xfull, W, V, plotFunction, varargin)$/;"	f
dpca_plot_default	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^function dpca_plot_default(data, time, yspan, explVar, compNum, events, signif, marg)$/;"	f
dpca_plot_fcn	lib/TrialData/Analysis/runDPCA.m	/^dpca_plot_fcn  =  @dpca_plot_td;$/;"	v
ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        ds = [0; diff(s)];$/;"	v
dt	lib/TrialData/td_limblab/getTargetDirection.m	/^dt              =  0.01; % s$/;"	v
dt	lib/TrialData/td_limblab/parseFileByTrial.m	/^    dt = round(mode(diff(data.t)),7);$/;"	v
dupeAndShift	lib/TrialData/Tools/dupeAndShift.m	/^function trial_data = dupeAndShift(trial_data,varargin)$/;"	f
dx	lib/curvature.m	/^dx = diff(x);$/;"	v
dx	lib/curvature.m	/^dx = dx(2:end);$/;"	v
dy	lib/curvature.m	/^dy = diff(y);$/;"	v
dy	lib/curvature.m	/^dy = dy(2:end);$/;"	v
e	lib/TrialData/Analysis/estimateDimensionality.m	/^e = pca_info.eigen\/sum(pca_info.eigen);$/;"	v
e	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    e     = sort(eig(cX), 'descend');$/;"	v
eigen	lib/TrialData/Tools/dimReduce.m	/^            eigen = [];$/;"	v
eigen_in	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_in = pca_info_in.eigen;$/;"	v
eigen_out	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_out = pca_info_out.eigen;$/;"	v
eigenv_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^eigenv_noise        = cell2mat(noise_eigen);$/;"	v
elecDigiFactors	lib/TrialData/util/openNEV_td.m	/^        elecDigiFactors = double(1000.\/[NEV.ElectrodesInfo(NEV.Data.Spikes.Electrode).DigitalFa/;"	v
elecNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            elecNames = unique([sortedUnits.chan], 'stable');$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^            elecReading = 1;$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^elecReading     = 0;$/;"	v
elecs	lib/TrialData/Tools/stripSpikeSorting.m	/^    elecs = unique(sg(:,1));$/;"	v
emg_HPF_cutoff	lib/TrialData/util/process_emg.m	/^emg_HPF_cutoff  =  [10 900];    % for EMG butterworth filter$/;"	v
emg_LPF_cutoff	lib/TrialData/util/process_emg.m	/^emg_LPF_cutoff  =  50;    % for EMG butterworth filter$/;"	v
emg_data	bumpcurl_tensors.m	/^            emg_data = cat(3,td.emg); % dimensions are timepoints x emg x trials$/;"	v
emg_data	bumpcurl_tensors.m	/^            emg_data = emg_data-repmat(mean(mean(emg_data,3),1),num_timepoints,1,num_trials);$/;"	v
emg_data	lib/TrialData/util/process_emg.m	/^emg_data = data;$/;"	v
emg_idx	lib/TrialData/Tools/reorderTDfields.m	/^    emg_idx = cellfun(@(x) ~isempty(x),strfind(fn_cont,'emg'));$/;"	v
emg_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^    emg_list = cds.emg.Properties.VariableNames;$/;"	v
emg_n_poles	lib/TrialData/util/process_emg.m	/^emg_n_poles     =  4;     % for EMG butterworth filter$/;"	v
emg_tensor	bumpcurl_tensors.m	/^            emg_tensor = tensor(emg_data);$/;"	v
emptyChar	lib/TrialData/util/openNEV_td.m	/^                emptyChar = find (NEV.ObjTrackInfo(IDX).TrackableName == 0, 1);$/;"	v
encoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    encoder = [encoder P];    $/;"	v
encoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^encoder = [];$/;"	v
end_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^end_idx          =  'idx_trial_end';$/;"	v
end_name	lib/TrialData/Tools/splitTD.m	/^end_name           =  'idx_trial_end';$/;"	v
end_name	lib/TrialData/td_limblab/getRWMovements.m	/^end_name           =  'idx_trial_end';$/;"	v
end_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        end_point = size(s,1);$/;"	v
end_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        end_point = trial_data(trial).(end_idx);$/;"	v
epoch_colors	exploreData.m	/^epoch_colors = colors(1:length(epoch_names),:);$/;"	v
epoch_colors	plotBumpcurlTuning.m	/^epoch_colors = [bl_color(bl_idx,:);...$/;"	v
epoch_list	exploreData.m	/^epoch_list = {'BL','AD1','AD2','AD3','AD4','WO1','WO2','WO3'};$/;"	v
epoch_list	plotBumpcurlTuning.m	/^epoch_list = {'BL','AD1','AD2','AD3','AD4','WO1','WO2','WO3'};$/;"	v
epoch_names	exploreData.m	/^epoch_names = {'AD','BL','WO'};$/;"	v
epoch_names	exploreData.m	/^epoch_names = {'BL','AD','WO'};$/;"	v
epoch_names	lib/animateBumpcurlTrials.m	/^epoch_names = {'BL','AD','WO'};$/;"	v
epochs	exploreData.m	/^epochs = {'BL','AD','WO'};$/;"	v
epsilon	lib/TrialData/util/lib/isomap/IsomapII.m	/^     epsilon = n_size; $/;"	v
epsilon	lib/TrialData/util/lib/isomap/isomap.m	/^     epsilon = n_size; $/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^                err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^            err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^        err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^    err = false;$/;"	v
err	lib/TrialData/util/predict_kalman.m	/^    err = OBSERVATIONS(t,:)' - C * STATEpred; % error (innovation)$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^            error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^        error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^error_flag = false;$/;"	v
estParams	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    estParams       = ws.estParams;$/;"	v
estParams	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  estParams = [];$/;"	v
estimateBumpFromPCA	lib/estimateBumpFromPCA.m	/^function td = estimateBumpFromPCA(trial_data)$/;"	f
estimateDimensionality	lib/TrialData/Analysis/estimateDimensionality.m	/^function [dims,noise_eigen_prctile] = estimateDimensionality(trial_data,params)$/;"	f
evalModel	lib/TrialData/Analysis/evalModel.m	/^function metric = evalModel(trial_data,params)$/;"	f
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric      =  '';$/;"	v
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric    = varargin{end-1};$/;"	v
eval_params	bumpcurl_analysis.m	/^    eval_params = ad_model;$/;"	v
eval_params	bumpcurl_analysis.m	/^    eval_params = bl_model;$/;"	v
event_db	lib/TrialData/Plotting/visData.m	/^event_db          =   { ...$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list     =  {};$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list = fieldnames(cds_bin.trials);$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list = union({'startTime';'endTime'},event_list);$/;"	v
event_rows	lib/TrialData/Plotting/visData.m	/^event_rows         =   1;        % how many rows for event markers$/;"	v
event_symbol	lib/TrialData/Plotting/visData.m	/^event_symbol       =   'o';      % standard symbol for event markers$/;"	v
events	lib/TrialData/Plotting/visData.m	/^    events = events(idx); clear idx;$/;"	v
events	lib/TrialData/Plotting/visData.m	/^events = fn(cellfun(@(x) ~isempty(regexp(x,'idx_','ONCE')),fn));$/;"	v
exclude_units	lib/TrialData/DataProcessing/processNEV.m	/^exclude_units    = 255; % sort id of units to exclude$/;"	v
exclude_units	lib/TrialData/td_limblab/parseFileByTrial.m	/^exclude_units  =  [0,255];$/;"	v
explVar	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        explVar = sum(Z.^2,2);$/;"	v
expl_var	lib/TrialData/Analysis/runDPCA.m	/^expl_var            = dpca_explainedVariance(firing_rates, W, V, ...$/;"	v
exploreData	exploreData.m	/^function exploreData(trial_data)$/;"	f
extraOpts	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        extraOpts = {extraOpts{:}, 'minVarFrac', -Inf};$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^    extra_bins = abs(extra_bins);$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^extra_bins         =  [0 0];$/;"	v
extra_bins	lib/TrialData/td_limblab/getRWMovements.m	/^extra_bins         =  [0 0];$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^    extra_outs = cell(1,length(func_calls));$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^extra_outs = cell(length(filenames),length(varargin));$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time = [0 0];$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time = round(extra_time\/bin_size); % convert to number of bins$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^extra_time     =  [0.2, 0.2];$/;"	v
extra_time_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time_events = fn( strcmpi(trials.Properties.VariableUnits,'s') & ~time_event_exc_idx )/;"	v
extra_time_temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^extra_time_temp = extra_time;$/;"	v
extract_ns5_spikes	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^function out = extract_ns5_spikes(file_data,params)$/;"	f
extrap_idx	lib/TrialData/util/resample_signals.m	/^extrap_idx = isnan(ty);$/;"	v
f	lib/TrialData/DataProcessing/loadTDfiles.m	/^f = funcCall{1};$/;"	v
f	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^f = gcf;$/;"	v
fa_orthogonalize	lib/TrialData/Analysis/getPotentSpace.m	/^fa_orthogonalize   =  true;$/;"	v
fa_orthogonalize	lib/TrialData/Tools/dimReduce.m	/^fa_orthogonalize  = true;   % whether to orthogonalize the projections$/;"	v
fa_rotate	lib/TrialData/Tools/dimReduce.m	/^fa_rotate         = 'none'; % rotation  to apply$/;"	v
fastfa	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^function [estParams, LL] = fastfa(X, zDim, varargin)$/;"	f
fdiv	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^fdiv = floor(linspace(1, N+1, numFolds+1));$/;"	v
fext	lib/TrialData/util/openNSx_td.m	/^    fext = fname(end-3:end);$/;"	v
ff	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ff = @(x,c,dc)(cos(max(-pi,min(pi,(x-c)*pi\/dc\/2)))+1)\/2; % raised cosine basis vector$/;"	v
fft_step	lib/TrialData/util/process_lfp.m	/^fft_step          =  0.01;     % in seconds (should be bin size)$/;"	v
fft_win_fun	lib/TrialData/util/process_lfp.m	/^fft_win_fun       =  @hamming; % windowing function handle$/;"	v
fft_window_size	lib/TrialData/util/process_lfp.m	/^fft_window_size   =  2048;     % in samples$/;"	v
fh	lib/TrialData/DataProcessing/loadTDfiles.m	/^fh = functions(f);$/;"	v
field_extra	lib/TrialData/Tools/addCorrelatedNoise.m	/^field_extra     =  {'_noisy'};$/;"	v
field_extra	lib/TrialData/Tools/addCorrelatedNoise.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/addFiringRates.m	/^field_extra   =  {'_FR'};$/;"	v
field_extra	lib/TrialData/Tools/addFiringRates.m	/^field_extra  = check_field_extra(field_extra,array);$/;"	v
field_extra	lib/TrialData/Tools/centerSignals.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/centerSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/convBasisFunc.m	/^field_extra   =  {'_rcb'};   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/convBasisFunc.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/dupeAndShift.m	/^field_extra  =  '_shift';$/;"	v
field_extra	lib/TrialData/Tools/dupeAndShift.m	/^field_extra =  check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/getEnvelope.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/getEnvelope.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^    field_extra =  params.norm_name;$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^field_extra  =  '_norm';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/smoothSignals.m	/^field_extra     =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/smoothSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/softNormalize.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/softNormalize.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/sqrtTransform.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/sqrtTransform.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/zscoreSignals.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/zscoreSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^        field_extra = repmat(field_extra,1,size(signals,1));$/;"	v
field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^    field_extra = repmat({''},1,size(signals,1));$/;"	v
fields	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fields = fieldnames(params.meta);$/;"	v
fields	lib/TrialData/td_limblab/parseFileByTrial.m	/^        fields = fieldnames(params.meta);$/;"	v
fileFullPath	lib/TrialData/util/openNEV_td.m	/^                fileFullPath = varargin{i};$/;"	v
fileFullPath	lib/TrialData/util/openNEV_td.m	/^    fileFullPath = [pathName fileName];$/;"	v
file_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^        file_data = which_routine(which_file,signal_info{iFile});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        file_data_temp = rmfield(file_data_temp,{'cont_data','cont_labels'});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        file_data_temp = rmfield(file_data_temp,{'event_data','event_labels'});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^            file_data_temp = file_data;$/;"	v
file_info	bumpcurl_script.m	/^    file_info = dir(fullfile(dataroot,'td-library','*CObumpcurl*.mat'));$/;"	v
file_types	lib/TrialData/DataProcessing/convertDataToTD.m	/^file_types = unique({sig_data.type});$/;"	v
fileclock	bumpcurl_script.m	/^    fileclock = tic;$/;"	v
filenames	bumpcurl_script.m	/^    filenames = horzcat({file_info.name})';$/;"	v
filt_high_freq	lib/TrialData/util/process_lfp.m	/^filt_high_freq    =  true;     % apply LPF at highest freq_band$/;"	v
filt_line_noise	lib/TrialData/util/process_lfp.m	/^filt_line_noise   =  true;     % whether to filter line noise$/;"	v
filt_order	lib/TrialData/Tools/getEnvelope.m	/^filt_order   =  4;$/;"	v
filt_poles	lib/TrialData/util/process_lfp.m	/^filt_poles        =  2;        % for butterworth filter$/;"	v
firing_rates	lib/TrialData/Analysis/runDPCA.m	/^firing_rates = loops_for_fr([],[],{},trial_data,signals,max_trial_num,conditions{:});$/;"	v
firing_rates	lib/TrialData/Analysis/runDPCA.m	/^firing_rates = permute(firing_rates,[1:2,2+fliplr(1:length(conditions))]);$/;"	v
firing_units	bumpcurl_script.m	/^        firing_units = mean(getSig(td_act,'S1_spikes'))~=0 & mean(getSig(td_pas,'S1_spikes'))~=0/;"	v
fit_bl_ref_curve	lib/TrialData/td_limblab/getLearningMetrics.m	/^fit_bl_ref_curve = false;$/;"	v
fit_r2	lib/TrialData/Analysis/getPotentSpace.m	/^    fit_r2 = zeros(size(y,2),1);$/;"	v
flip_time	lib/TrialData/Tools/convBasisFunc.m	/^flip_time     =  false;$/;"	v
fn	lib/TrialData/Analysis/getNoiseCovar.m	/^fn = [model_name,'_residuals'];$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fn = fieldnames(sig_data(iSig).meta);$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/DataProcessing/initSignalStruct.m	/^fn = fieldnames(signal_info);$/;"	v
fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        fn = fieldnames(td);$/;"	v
fn	lib/TrialData/Plotting/visData.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/dupeAndShift.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getDifferential.m	/^    fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/Tools/getLFPidx.m	/^    fn = getTDfields(trial_data,'lfp');$/;"	v
fn	lib/TrialData/Tools/getSig.m	/^    fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(good_idx & ~bad_idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_lfp')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_lfp_guide')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_names')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')) & ...$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_unit_guide')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'idx_')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(ismember(fn,fn_time) & ~ismember(fn,fn_neural) & ~ismember(fn,fn_unit_guides));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~~neural_idx); % quick hack converts to bool$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = strrep(fn,'_spikes','')';$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = {};$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDidx.m	/^fn = varargin(1:2:length(varargin));$/;"	v
fn	lib/TrialData/Tools/reorderTDfields.m	/^fn        = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/subtractConditionMean.m	/^fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = cds.emg.Properties.VariableNames;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = fn(~strcmpi(fn,'t'));$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = markersList;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = opensimList;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^    fn = fieldnames(cds_bin);$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^fn = cds.trials.Properties.VariableNames;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^fn = getTDfields(trial_data,'idx');$/;"	v
fn_array	lib/TrialData/Tools/stripSpikeSorting.m	/^fn_array = getTDfields(trial_data,'arrays');$/;"	v
fn_array	lib/TrialData/td_limblab/getRWMovements.m	/^fn_array = getTDfields(trial_data, 'arrays');$/;"	v
fn_cont	lib/TrialData/Tools/reorderTDfields.m	/^fn_cont   = [getTDfields(trial_data,'cont'); getTDfields(trial_data,'labels')];$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^        fn_cont_new = fn_cont_new(reorder_idx);$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^    fn_cont_new = fn_cont;$/;"	v
fn_idx	lib/TrialData/Tools/appendTDs.m	/^    fn_idx  = getTDfields(combined_td,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/binTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/dupeAndShift.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^            fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^        fn_idx  = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/joinTrials.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = nan_idx_names;$/;"	v
fn_idx	lib/TrialData/Tools/reorderTDfields.m	/^fn_idx    = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = setdiff(fn_idx,split_idx_name);$/;"	v
fn_idx	lib/TrialData/Tools/trialAverage.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/trimTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/upsampleTD.m	/^fn_idx  = getTDfields(trial_data,'idx');$/;"	v
fn_labels	lib/TrialData/Tools/joinTrials.m	/^fn_labels = getTDfields(trial_data,'labels');$/;"	v
fn_lfp_guides	lib/TrialData/Tools/splitTD.m	/^fn_lfp_guides = getTDfields(trial_data, 'lfp_guides');$/;"	v
fn_lfp_guides	lib/TrialData/Tools/trialAverage.m	/^fn_lfp_guides   =  getTDfields(trial_data,'lfp_guides');$/;"	v
fn_lg	lib/TrialData/Tools/getTDfields.m	/^        fn_lg   = getTDfields(trial_data,'lfp_guides');$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(master_td);$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(varargin{iTD});$/;"	v
fn_meta	lib/TrialData/Tools/joinTrials.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = setdiff(fn_meta,linked_fields);$/;"	v
fn_meta	lib/TrialData/Tools/trialAverage.m	/^fn_meta         =  getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/td_limblab/getRWMovements.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_master,fn_new);$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_new,fn_master);$/;"	v
fn_neural	lib/TrialData/Tools/getTDfields.m	/^        fn_neural = getTDfields(trial_data,'neural');$/;"	v
fn_neural	lib/TrialData/Tools/reorderTDfields.m	/^fn_neural = [getTDfields(trial_data,'neural'); getTDfields(trial_data,'unit_guides')];$/;"	v
fn_new	lib/TrialData/Tools/catTDs.m	/^        fn_new = fieldnames(td);$/;"	v
fn_spikes	lib/TrialData/Tools/binTD.m	/^fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_spikes	lib/TrialData/Tools/getTDfields.m	/^            fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_time	lib/TrialData/Tools/appendTDs.m	/^    fn_time = getTDfields(combined_td,'time');$/;"	v
fn_time	lib/TrialData/Tools/binTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/convBasisFunc.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^    fn_time = getTDfields(trial_data(trial),'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/getTDfields.m	/^        fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/joinTrials.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/removeBadTrials.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/splitTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trialAverage.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trimTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/upsampleTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/td_limblab/getRWMovements.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^            fn_ug  = getTDfields(trial_data,'unit_guides');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^        fn_ug   = getTDfields(trial_data,'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/getTDfields.m	/^        fn_unit_guides = getTDfields(trial_data,'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/splitTD.m	/^fn_unit_guides = getTDfields(trial_data, 'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/trialAverage.m	/^fn_unit_guides  =  getTDfields(trial_data,'unit_guides');$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^            fname = sprintf('%s_cv%02d', fname, cvf);$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        fname = sprintf('%s\\\\%s_xDim%02d', runDir, method, xDim);$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    fname = [];$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^            fname = inputArgument;$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^        fname = which(fname);$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^    fname = [fname fext];$/;"	v
font_size	lib/TrialData/Plotting/visData.m	/^font_size          =   12;       % default font size$/;"	v
force_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^force_list = cds.force.Properties.VariableNames;$/;"	v
found	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                                found = 1;$/;"	v
found	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                        found = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = setdiff(found_units,exclude_units);$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = unique(NEV.Data.Spikes.Unit(chan_idx));$/;"	v
fr	lib/TrialData/Analysis/runDPCA.m	/^        fr = cat(2,fr,temp_fr);$/;"	v
fr	lib/TrialData/Analysis/runDPCA.m	/^    fr = [];$/;"	v
fr	lib/TrialData/Tools/binTD.m	/^        fr = zeros(length(t_bin)-1,size(temp,2));$/;"	v
fr	lib/TrialData/td_limblab/getNeuronTuning.m	/^        fr = zeros(length(trial_data),size(trial_data(1).([array '_spikes']),2));$/;"	v
fr_window	lib/TrialData/Tools/removeBadNeurons.m	/^fr_window       =  {};$/;"	v
freq	lib/TrialData/util/process_lfp.m	/^freq = samplerate\/2*linspace(0,1,ceil(window_size\/2+1));$/;"	v
freq_bands	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            freq_bands = temp_params.freq_bands;$/;"	v
freq_bands	lib/TrialData/Tools/getLFPidx.m	/^    freq_bands = freqs;$/;"	v
freq_bands	lib/TrialData/Tools/getLFPidx.m	/^freq_bands  =  'all';$/;"	v
freq_bands	lib/TrialData/util/process_lfp.m	/^freq_bands = [ ...% first column is low cutoff, second is high$/;"	v
freqs	lib/TrialData/Tools/getLFPidx.m	/^        freqs = [];$/;"	v
freqs	lib/TrialData/Tools/getLFPidx.m	/^freqs = unique(lfp_guide(:,2:3),'rows');$/;"	v
fs	lib/TrialData/Tools/getEnvelope.m	/^fs = round(1\/trial_data(1).bin_size);$/;"	v
full_eval	bumpcurl_analysis.m	/^    full_eval = evalModel(td_ad,eval_params);$/;"	v
func_in	lib/TrialData/Tools/trialAverage.m	/^        func_in = cell(1,2*size(all_conds,2));$/;"	v
fv	lib/TrialData/Tools/getTDidx.m	/^fv = varargin(2:2:length(varargin));$/;"	v
getCommonUnits	lib/TrialData/Tools/getCommonUnits.m	/^function trial_data = getCommonUnits(trial_data)$/;"	f
getDifferential	lib/TrialData/Tools/getDifferential.m	/^function trial_data = getDifferential(trial_data,params)$/;"	f
getEnvelope	lib/TrialData/Tools/getEnvelope.m	/^function trial_data = getEnvelope(trial_data,params)$/;"	f
getGitInfo	lib/TrialData/util/getGitInfo.m	/^function gitInfo=getGitInfo()$/;"	f
getLFPidx	lib/TrialData/Tools/getLFPidx.m	/^function [idx,freqs,chans] = getLFPidx(trial_data,varargin)$/;"	f
getLearningMetrics	lib/TrialData/td_limblab/getLearningMetrics.m	/^function metric = getLearningMetrics(trial_data,params)$/;"	f
getModel	lib/TrialData/Analysis/getModel.m	/^function [trial_data,model_info] = getModel(trial_data,params)$/;"	f
getMoveOnsetAndPeak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^function trial_data = getMoveOnsetAndPeak(trial_data,params)$/;"	f
getNeuronTuning	lib/TrialData/td_limblab/getNeuronTuning.m	/^function [tcs,fr,covar] = getNeuronTuning(trial_data,which_method,params)$/;"	f
getNoiseCovar	lib/TrialData/Analysis/getNoiseCovar.m	/^function [noise_covar,td] = getNoiseCovar(trial_data,params)$/;"	f
getNorm	lib/TrialData/Tools/getNorm.m	/^function trial_data  = getNorm(trial_data,params)$/;"	f
getPotentSpace	lib/TrialData/Analysis/getPotentSpace.m	/^function [trial_data,pca_info] = getPotentSpace(trial_data,params)$/;"	f
getRWMovements	lib/TrialData/td_limblab/getRWMovements.m	/^function rw_td = getRWMovements(trial_data,params)$/;"	f
getRWTargetDirection	lib/TrialData/td_limblab/getRWTargetDirection.m	/^function [ trial_data ] = getRWTargetDirection(trial_data, params  )$/;"	f
getSeq_td	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^function seq = getSeq_td(dat, binWidth, varargin)$/;"	f
getSig	lib/TrialData/Tools/getSig.m	/^function out = getSig(trial_data,signals)$/;"	f
getSigByTrial	lib/TrialData/Tools/getSigByTrial.m	/^function out = getSigByTrial(trial_data,signals)$/;"	f
getTDfields	lib/TrialData/Tools/getTDfields.m	/^function fn = getTDfields(trial_data,which_type,cont_var_ref)$/;"	f
getTDidx	lib/TrialData/Tools/getTDidx.m	/^function [return_idx, trial_data] = getTDidx(trial_data,varargin)$/;"	f
getTargetDirection	lib/TrialData/td_limblab/getTargetDirection.m	/^function trial_data = getTargetDirection(trial_data, params)$/;"	f
get_master_dist	lib/TrialData/Tools/removeBadNeurons.m	/^function prctile_dist = get_master_dist()$/;"	f
get_metric	lib/TrialData/Analysis/evalModel.m	/^function metric = get_metric(varargin)$/;"	f
get_vars	lib/TrialData/util/subfcn/get_vars.m	/^function x = get_vars(trial_data, signals)$/;"	f
git_path	lib/TrialData/util/getGitInfo.m	/^git_path = curr_path(1:end-16);$/;"	v
glm_distribution	lib/TrialData/Analysis/getModel.m	/^glm_distribution     =  'poisson'; % which distribution to assume for GLM$/;"	v
go_cue_name	lib/TrialData/td_limblab/getRWMovements.m	/^go_cue_name        =  'idx_go_cue';$/;"	v
go_cues	lib/TrialData/td_limblab/getRWMovements.m	/^    go_cues = td.(go_cue_name);$/;"	v
goodEMG	exploreData.m	/^goodEMG = ~contains(td(1).emg_names,'EMG_FDS');$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^                good_idx = good_idx | cellfun(@(x) ~isempty(x),strfind(fn,cont_var_ref{i}));$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^            good_idx = good_idx | ismember(fn,fn_spikes);$/;"	v
gpfaEngine_td	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^function result = gpfaEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
h	bumpcurl_analysis.m	/^            h = polar(dirs*pi\/180,spikes(:,true_neur_num));$/;"	v
h	lib/TrialData/TrialData_tutorial.m	/^h = legend({'Actual','Predicted'},'Location','SouthEast');$/;"	v
h	lib/TrialData/util/lib/isomap/IsomapII.m	/^h = real(diag(val)); $/;"	v
h	lib/TrialData/util/lib/isomap/isomap.m	/^h = real(diag(val)); $/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(0,max_rad,'.');$/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(repmat(PD(epochctr,neurctr),1,2),[0 max_rad*0.8],'-o');$/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(theta,exp(offset(epochctr,neurctr)+moddepth(epochctr,neurctr)*cos(theta-PD(epo/;"	v
h	plotTuningDistr.m	/^h = polar(repmat(PD,2,1),[0;1]*ones(size(PD)),'ko-');$/;"	v
h1	bumpcurl_analysis.m	/^    h1 = figure;$/;"	v
hasSpikesBool	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    hasSpikesBool = (mean([seqTrain.y], 2) ~= 0);$/;"	v
header	lib/TrialData/td_limblab/parseFileByTrial.m	/^    header = cds.analog{i}.Properties.VariableNames;$/;"	v
height	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^height = pos(3)*1800\/1000;$/;"	v
hist_scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_scree_noise    = zeros(length(hist_x)-1,size(eigenv_noise,1));$/;"	v
hist_x	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_x              = 0:0.01:1;$/;"	v
hold_time	lib/TrialData/td_limblab/getTargetDirection.m	/^hold_time       =  0.5; % s$/;"	v
hpeaks	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^hpeaks = ihprs.hpeaks;$/;"	v
iDir	lib/TrialData/td_limblab/getLearningMetrics.m	/^            iDir = utheta==trial_data(iTrial).target_direction;$/;"	v
iEnd	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^      iEnd   = binWidth * t \/ dataBinWidth;$/;"	v
iPh	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    iPh  = diag(1.\/Ph);$/;"	v
iPhL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    iPhL = iPh * L;  $/;"	v
iStart	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^      iStart = binWidth * (t-1) \/ dataBinWidth + 1;$/;"	v
iTrial	lib/TrialData/td_limblab/parseFileByTrial.m	/^    iTrial = idx_trials(i);$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^            iVar = iVar + 1;$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^        iVar = 0;$/;"	v
identical	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                            identical = 0;$/;"	v
identical	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                    identical = 1;$/;"	v
idx	lib/TrialData/Analysis/getModel.m	/^        idx = any(isnan(x),2) | any(isnan(y),2);$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^            idx = start_idx(i)+(1:neurons{i}(end));$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    idx = find(c==u(i));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = 1:size(file_data_temp.data,2);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = 1:length(file_labels);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = ismember(file_labels(:,1),temp_label);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = temp_label;$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'emg'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'generic'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'lfp'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'spikes'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'trigger') | strcmpi({sig_data.type},'event'));$/;"	v
idx	lib/TrialData/DataProcessing/initSignalStruct.m	/^idx = find(cellfun(@isempty,temp));$/;"	v
idx	lib/TrialData/DataProcessing/processNEV.m	/^            idx = startsWith(nev_text,labels{iText});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^            idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^        idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^    idx = true(1,length(events));$/;"	v
idx	lib/TrialData/Tools/getLFPidx.m	/^        idx = [];$/;"	v
idx	lib/TrialData/Tools/getLFPidx.m	/^idx = find(ismember(lfp_guide(:,1),channels) & ...$/;"	v
idx	lib/TrialData/Tools/getSig.m	/^            idx =  [idx, ...$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^            idx = false(length(fn),1);$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^        idx = ismember(fn,fn_time) | ismember(fn,fn_idx) | ismember(fn,fn_ug) | ismember(fn,fn_l/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember([trial_data.(fn{i})],fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & strcmpi({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = ones(1,length(trial_data));$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'boot');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'rand');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'range');$/;"	v
idx	lib/TrialData/Tools/joinTrials.m	/^        idx = [idx new_idx+last_end];$/;"	v
idx	lib/TrialData/Tools/joinTrials.m	/^    idx = [];$/;"	v
idx	lib/TrialData/Tools/stripSpikeSorting.m	/^        idx = sg(:,1) == elecs(e);$/;"	v
idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                idx = t1:t2;$/;"	v
idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^            idx = t1:t2;$/;"	v
idx	lib/TrialData/td_limblab/getNeuronTuning.m	/^            idx = trial_data(trial).(win{1,1})+win{1,2}:trial_data(trial).(win{2,1})+win{2,2};$/;"	v
idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx = t_start:t_end-1;$/;"	v
idx	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            idx = find([0 diff(d < spike_threshold*sd)] > 0);$/;"	v
idx	lib/TrialData/util/subfcn/get_vars.m	/^idx = cell(1,size(signals,1));$/;"	v
idx1	lib/TrialData/Tools/removeBadTrials.m	/^                    idx1 = td.(ranges{i,1});$/;"	v
idx1	lib/TrialData/Tools/removeBadTrials.m	/^                idx1 = 1;$/;"	v
idx2	lib/TrialData/Tools/removeBadTrials.m	/^                    idx2 = td.(ranges{i,2});$/;"	v
idx2	lib/TrialData/Tools/removeBadTrials.m	/^                idx2 = size(td.(fn_time{1}),1);$/;"	v
idx_emg	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_emg = contains(emg.Properties.VariableNames,'EMG');$/;"	v
idx_empty	lib/TrialData/Tools/appendTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_empty	lib/TrialData/Tools/catTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = Inf;$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = split_idx(idx+1)+extra_bins(2)-1;$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^    idx_end   = varargin{2};$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^idx_end   = {};$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                    idx_end = go_cues(cue+1)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                    idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_freq	lib/TrialData/util/process_lfp.m	/^        idx_freq = freq >= freq_bands(iBand,1)  &  freq  <= freq_bands(iBand,2);$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = find(ismember(fn,fn_idx));$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = idx_idx(I);$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                    idx_keep = data{iCol} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                idx_keep = data{iCol} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                idx_keep = t >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            idx_keep = t >= 0;$/;"	v
idx_start	lib/TrialData/Tools/splitTD.m	/^                    idx_start = 1;$/;"	v
idx_start	lib/TrialData/Tools/splitTD.m	/^                idx_start = split_idx(idx)-extra_bins(1);$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^    idx_start = varargin{1};$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^idx_start = {};$/;"	v
idx_start	lib/TrialData/td_limblab/getRWMovements.m	/^            idx_start = go_cues(cue)-extra_bins(1);$/;"	v
idx_trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_trials = 1:length(trials.result);$/;"	v
idx_trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_trials = find(ismember(trials.result,trial_results));$/;"	v
idx_vals	lib/TrialData/Analysis/runDPCA.m	/^    idx_vals = cell(1,num_conds);$/;"	v
idx_vars	lib/TrialData/Tools/stretchSignals.m	/^idx_vars = getTDfields(trial_data,'idx');$/;"	v
ih0	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ih0 = zeros(size(ihbasis,1),1);$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbas =   [ihbas; zeros(nextra,ncols)];$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbas = ihbas(1:niht,:);$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ihbas = orth(ihbasis);  $/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbasis = [ihbasis; zeros(nextra,ncols)];$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbasis = ihbasis(1:niht,:);$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ihbasis = [ih0,ihbasis];$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ihbasis = ff(repmat(nlin(iht+b), 1, ncols), repmat(ctrs, nt, 1), db);$/;"	v
iht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        iht = iht0;$/;"	v
iht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^iht = (dt:dt:mxt)';$/;"	v
ii	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ii = find(iht<absref);$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    in_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^in_dims      =  [];$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals    =  {}; % {'name',idx; 'name',idx};$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals   =  [];$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/td_limblab/addProcessedSignal.m	/^in_signals = '';$/;"	v
in_signals	lib/TrialData/td_limblab/addProcessedSignal.m	/^in_signals = check_signals(trial_data,in_signals);$/;"	v
include_naming	lib/TrialData/td_limblab/parseFileByTrial.m	/^include_naming =  false;$/;"	v
include_ts	lib/TrialData/td_limblab/parseFileByTrial.m	/^include_ts     =  false;$/;"	v
ind	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        ind = {};$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = bsxfun(@times, ones(dims(1:end-1)), ind1);$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = ind1(:);$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = reshape(ind1, size(options.numOfTrials));$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = zeros(1, length(neuronsConditions));$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = bsxfun(@times, ones(dims(1:end-1)), ind2);$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = ind2(:);$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = reshape(ind2, size(options.numOfTrials));$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = zeros(1, length(neuronsConditions));$/;"	v
indM	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        indM = [paramsubsubsets{s} indMarg];$/;"	v
indMarg	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    indMarg = setdiff(params, indRest);$/;"	v
indRest	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    indRest = paramsubsets{subs};$/;"	v
indicesOfEvent	lib/TrialData/util/openNEV_td.m	/^                indicesOfEvent = find(tmp.NodeID == IDX-1);$/;"	v
infidx	bumpcurl_script.m	/^        infidx = isinf(numeric_vals);$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = params;$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = struct('w',w,'scores',scores,'eigen',eigen,'mu',mu,'signals',{signals},'out_param/;"	v
initSignalStruct	lib/TrialData/DataProcessing/initSignalStruct.m	/^function signal_info = initSignalStruct(varargin)$/;"	f
inputArgument	lib/TrialData/util/openNSx_td.m	/^        inputArgument = str2num(inputArgument);$/;"	v
inputArgument	lib/TrialData/util/openNSx_td.m	/^    inputArgument = varargin{i};$/;"	v
input_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^    input_data = get_vars(trial_data(trial),in_signals);$/;"	v
invnl	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^invnl = @(x)exp(x)-1e-20; % inverse nonlinearity$/;"	v
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 0;$/;"	v
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 1;$/;"	v
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 2;$/;"	v
isLab	lib/TrialData/util/lib/isomap/dijk.m	/^   isLab = logical(zeros(length(t),1));$/;"	v
isTuned	bumpcurl_analysis.m	/^    isTuned = checkIsTuned(opensimPDs{1},isTuned_params)...$/;"	v
isTuned	bumpcurl_analysis.m	/^    isTuned = checkIsTuned(spikesPDs{1},isTuned_params)...$/;"	v
isTuned_params	bumpcurl_analysis.m	/^    isTuned_params = struct('move_corr','vel','CIthresh',pi\/3);$/;"	v
isTuned_params	bumpcurl_analysis.m	/^    isTuned_params = struct('move_corr','vel','CIthresh',pi\/4);$/;"	v
isUnLab	lib/TrialData/util/lib/isomap/dijk.m	/^      isUnLab = logical(ones(n,1));$/;"	v
iso_component	lib/TrialData/Tools/dimReduce.m	/^iso_component     = 1;      % which connected component to embed, if more than one.$/;"	v
iso_display	lib/TrialData/Tools/dimReduce.m	/^iso_display       = false;  % plot residual variance and 2-D embedding?$/;"	v
iso_function	lib/TrialData/Tools/dimReduce.m	/^iso_function      = 'k';    % neighborhood function ('epsilon' or 'k')$/;"	v
iso_info	lib/TrialData/util/lib/isomap/isomap.m	/^iso_info = struct( ...$/;"	v
iso_n	lib/TrialData/Tools/dimReduce.m	/^iso_n             = 12;     % neighborhood size (value for epsilon or k)$/;"	v
iso_opts	lib/TrialData/Tools/dimReduce.m	/^            iso_opts = struct( ...$/;"	v
isomap	lib/TrialData/util/lib/isomap/isomap.m	/^function [Y, R, E, iso_info] = isomap(D, n_fcn, n_size, options)$/;"	f
iter_data	lib/TrialData/Analysis/runDPCA.m	/^    iter_data = varargin{cell_idx};$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = UnLab(jj);$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = j + 1;$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = j - 1;$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^   j = s(i);$/;"	v
joinTrials	lib/TrialData/Tools/joinTrials.m	/^function td_j = joinTrials(trial_data,params)$/;"	f
k	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      k = 1;$/;"	v
k	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      k = find(ws.kernSDList == kernSD);$/;"	v
k	lib/TrialData/util/compute_pseudo_R2.m	/^    k = (mean(Y).^2.\/var(Y));$/;"	v
k	lib/curvature.m	/^k = (dx.*ddy + dy.*ddx) .\/ (dx.^2+dy.^2).^(3\/2);$/;"	v
keepers	bumpcurl_tensors.m	/^        keepers = (td(1).S1_unit_guide(:,2)~=0);$/;"	v
kernSD	lib/TrialData/Analysis/runGPFA.m	/^kernSD      =  0.03;$/;"	v
kernSD	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  kernSD = [];$/;"	v
kernSDList	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^kernSDList    = 20:5:80; % in msec$/;"	v
kernel	lib/TrialData/util/smooth_data.m	/^kernel = normpdf( -kernel_hl*(dt) : ...$/;"	v
kernel_hl	lib/TrialData/util/smooth_data.m	/^kernel_hl = ceil( 3 * kernel_SD \/ (dt) );$/;"	v
key	bumpcurl_script.m	/^        key = keyTable(key_idx,:);$/;"	v
keyTable	bumpcurl_script.m	/^    keyTable = unique(neuron_eval(:,keycols));$/;"	v
keycols	bumpcurl_script.m	/^    keycols = {'monkey','date','task','crossvalID'};$/;"	v
kf_model	lib/TrialData/Analysis/getModel.m	/^            kf_model = b;$/;"	v
kf_model	lib/TrialData/Analysis/getModel.m	/^            kf_model = train_kalman(x,y);$/;"	v
kin	lib/TrialData/Tools/binTD.m	/^            kin = zeros(length(t_bin)-1,size(temp,2));$/;"	v
kin_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^kin_list = {'t','x','y','vx','vy','ax','ay'};$/;"	v
kin_rows	lib/TrialData/Plotting/visData.m	/^kin_rows           =   3;        % how many rows for kinematic plots$/;"	v
l	lib/TrialData/util/lib/isomap/IsomapII.m	/^             l = find(a==i); $/;"	v
l	lib/TrialData/util/lib/isomap/IsomapII.m	/^             l = length(a); $/;"	v
labelNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            labelNames = zeros(length(sortedUnits),1);$/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            labels = labels';$/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            labels = match_labels('lfp',file_data_temp.labels,signal_info{iFile}/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        labels = file_data_temp.labels;$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^            labels = {};$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^        labels = unique(nev_text);$/;"	v
labels	lib/TrialData/DataProcessing/processNSx.m	/^labels = {NSx.ElectrodesInfo.Label};$/;"	v
labels	lib/TrialData/Tools/joinTrials.m	/^        labels = trial_data(1).(fn_labels{fn_ctr});$/;"	v
labels	lib/TrialData/Tools/joinTrials.m	/^        labels = {trial_data.(fn_labels{fn_ctr})};$/;"	v
labels	lib/TrialData/td_limblab/parseFileByTrial.m	/^            labels = unique(labelNames,'stable');$/;"	v
landmarks	lib/TrialData/util/lib/isomap/IsomapII.m	/^landmarks = options.landmarks; $/;"	v
lasso_alpha	lib/TrialData/Analysis/getModel.m	/^lasso_alpha   =  0;$/;"	v
lasso_lambda	lib/TrialData/Analysis/getModel.m	/^lasso_lambda  =  0;$/;"	v
last_end	lib/TrialData/Tools/joinTrials.m	/^        last_end = last_end + size(timevec,1);$/;"	v
last_end	lib/TrialData/Tools/joinTrials.m	/^    last_end = 0;$/;"	v
last_timestamp	lib/TrialData/util/remove_spike_artifacts.m	/^        last_timestamp = timestamps(end);$/;"	v
layer_sizes	lib/TrialData/Analysis/getModel.m	/^layer_sizes          =  10;        % how many feedforward layers in neural net$/;"	v
ldM	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    ldM   = sum(log(diag(chol(MM))));$/;"	v
lfp_data	lib/TrialData/util/process_lfp.m	/^lfp_data = zeros(N,size(freq_bands,1)*size(data,2));$/;"	v
lfp_guide	lib/TrialData/Tools/getLFPidx.m	/^lfp_guide = trial_data(1).([array '_lfp_guide']);$/;"	v
lfp_method	lib/TrialData/util/process_lfp.m	/^lfp_method        =  'fft';    % 'fft' for now$/;"	v
lims	lib/animateBumpcurlTrials.m	/^        lims = [min(min_field(1:3)) max(max_field(1:3))];$/;"	v
line_noise_freq	lib/TrialData/util/process_lfp.m	/^line_noise_freq   =  50;       % 60 for US, 50 for Europe$/;"	v
line_width	lib/TrialData/Plotting/visData.m	/^line_width         =   2;        % standard line width$/;"	v
linked_fields	lib/TrialData/Tools/splitTD.m	/^linked_fields      =  {}; % list of meta etc fields linked to split_idx$/;"	v
ll	lib/TrialData/util/circular_mean.m	/^  ll = mu - t;$/;"	v
lm_bl	lib/TrialData/td_limblab/getLearningMetrics.m	/^                lm_bl = fitlm(sincos,temp_err);$/;"	v
loadTDfiles	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [master_td, params] = loadTDfiles(filenames,varargin)$/;"	f
loop_me_twice	lib/TrialData/Analysis/runDPCA.m	/^function valCat = loop_me_twice(dim,valCat,val,valIdx,depthCount,varargin)$/;"	f
loops_all_the_way_down	lib/TrialData/Analysis/runDPCA.m	/^function val = loops_all_the_way_down(val,varargin)$/;"	f
loops_for_fr	lib/TrialData/Analysis/runDPCA.m	/^function [val,valIdx] = loops_for_fr(depthCount,valIdx,val,trial_data,signals,max_trial_num,vara/;"	f
low	bumpcurl_script.m	/^                low = tinv(alpha\/2,num_folds*num_repeats-1);$/;"	v
lp_cutoff	lib/TrialData/Tools/getEnvelope.m	/^lp_cutoff    =  20;$/;"	v
lw	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^lw = 2;$/;"	v
m	lib/TrialData/Tools/centerSignals.m	/^    m = mean(getSig(trial_data,signals(iSig,:)),1);$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = mean(getSig(trial_data,signals{1,1}),1);$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = zeros(1,size(trial_data(1).(signals{1,1}),2));$/;"	v
m	lib/TrialData/Tools/subtractConditionMean.m	/^    m = mean(cat(3,td.(fn{i})),3);$/;"	v
mag	lib/TrialData/util/orthogonalize.m	/^    mag   = sqrt(L' * L);$/;"	v
makeBasis_PostSpike	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^function [iht, ihbas, ihbasis] = makeBasis_PostSpike(ihprs,dt,iht0)$/;"	f
map	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^map = tril(a,-1)+triu(b);$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    margNums = 1:length(options.combinedParams);$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    margNums = [];$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^margNums = 1:length(YY);$/;"	v
margRowSeq	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        margRowSeq = 1:max(options.whichMarg);$/;"	v
margRowSeq	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        margRowSeq = [options.timeMarginalization setdiff(1:max(options.whichMarg), options.time/;"	v
marg_colors	lib/TrialData/Analysis/runDPCA.m	/^marg_colors      = [150 150 150; 23 100 171; 187 20 25; 114 97 171]\/256; % blue, red, grey, pur/;"	v
marg_names	lib/TrialData/Analysis/runDPCA.m	/^marg_names       = {'time','target','learning','target\/learning interaction'};$/;"	v
margsToAdd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                    margsToAdd = [margsToAdd k];$/;"	v
margsToAdd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        margsToAdd = [];$/;"	v
marker_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        marker_analog_idx = i;$/;"	v
marker_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^marker_analog_idx = 0;$/;"	v
marker_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^marker_data    =  [];$/;"	v
marker_names	lib/TrialData/td_limblab/parseFileByTrial.m	/^    marker_names = markers.Properties.VariableNames;$/;"	v
marker_postfix	lib/TrialData/td_limblab/parseFileByTrial.m	/^    marker_postfix = {'_x','_y','_z'};$/;"	v
markername	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        markername = 'Marker_1';$/;"	v
markername	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        markername = 'Pronation_Pt1';$/;"	v
markernans	bumpcurl_script.m	/^            markernans = isnan(td(trialnum).markers);$/;"	v
markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^    markers = markers(:,2:end); % get rid of frames column$/;"	v
markersList	lib/TrialData/td_limblab/parseFileByTrial.m	/^    markersList = new_markers.Properties.VariableNames;$/;"	v
master_fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_fn = fieldnames(master_td);$/;"	v
master_idx	lib/TrialData/Tools/reorderTDfields.m	/^master_idx = [meta_idx; idx_idx; cont_idx; neural_idx];$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^            master_sg = setdiff(master_sg, bad_idx, 'rows');$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^    master_sg = trial_data(1).([array '_unit_guide']);$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_td = [master_td, td];$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^master_td = reorderTDfields(master_td);$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^        master_td = [master_td,td];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = [];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = varargin{1};$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^master_td  =  check_td_quality(master_td);$/;"	v
matPath	lib/TrialData/util/openNEV_td.m	/^matPath = [fileFullPath(1:end-4) '.mat'];$/;"	v
match_labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^function [idx,error_flag] = match_labels(which_type,file_labels, which_label)$/;"	f
maxFRs	bumpcurl_analysis.m	/^    maxFRs = max(spikes,[],1);$/;"	v
maxNSPChannels	lib/TrialData/util/openNSx_td.m	/^maxNSPChannels  = 128;$/;"	v
max_field	lib/animateBumpcurlTrials.m	/^max_field = max(cat(1,td.(field)));$/;"	v
max_rad	plotBumpcurlTuning.m	/^    max_rad = 0;$/;"	v
max_rad	plotBumpcurlTuning.m	/^    max_rad = max(exp(offset(:,neurctr)+moddepth(:,neurctr)));$/;"	v
max_shift	lib/TrialData/Tools/dupeAndShift.m	/^max_shift = max(cellfun(@(x) max(abs(x)), all_shifts));$/;"	v
max_trial_num	lib/TrialData/Analysis/runDPCA.m	/^max_trial_num = max(loops_all_the_way_down(0,conditions{:}));$/;"	v
meanY	lib/TrialData/util/compute_vaf.m	/^    meanY = mean(Y,1);$/;"	v
mean_dists	lib/TrialData/util/lib/isomap/IsomapII.m	/^mean_dists = zeros(N,1);$/;"	v
meta	lib/TrialData/Tools/joinTrials.m	/^        meta = trial_data(1).(fn_meta{fn_ctr});$/;"	v
meta	lib/TrialData/Tools/joinTrials.m	/^        meta = {trial_data.(fn_meta{fn_ctr})};$/;"	v
meta_idx	lib/TrialData/Tools/reorderTDfields.m	/^meta_idx = find(~(ismember(fn,fn_idx) | ismember(fn,fn_neural) | ismember(fn,fn_cont)));$/;"	v
meta_vars	lib/TrialData/Tools/getTDfields.m	/^meta_vars = {'monkey','date','task','perturbation','trial_id','target_direction','target_center'/;"	v
method	lib/TrialData/Analysis/pairwiseCorr.m	/^method           =  @corr;$/;"	v
method	lib/TrialData/Analysis/runGPFA.m	/^method      =  'gpfa';$/;"	v
method	lib/TrialData/Tools/addFiringRates.m	/^method        = 'averageInBin';$/;"	v
method	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^method = 'markers';$/;"	v
method	lib/TrialData/td_limblab/coord_test.m	/^    method = {'opensim','markers'};$/;"	v
method	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^method        = 'gpfa';$/;"	v
metric	bumpcurl_analysis.m	/^    metric = getLearningMetrics(td,struct('which_metric','angle','fit_bl_ref_curve',true,'vel_or/;"	v
metric	exploreData.m	/^metric = getLearningMetrics(td,struct('which_metric','angle','fit_bl_ref_curve',true,'vel_or_pos/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_pseudo_R2(y_test(bs),y_fit(bs),mean(y_test));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_r2(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_rel_pseudo_R2(y_test(bs),y_fit(bs),y_fit2(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_vaf(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = metric(:,1);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = squeeze(metric(:,:,1));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(length(trial_idx)-1,sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = [mean(metric) - std(metric); mean(metric) + std(metric)];$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = prctile(metric,[2.5,97.5]);$/;"	v
metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        metric = -metric;$/;"	v
metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^metric = zeros(length(trial_data),1);$/;"	v
mexFunction	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void mexFunction($/;"	f	typeref:typename:void
minL	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            minL = min(length(options.whichMarg), size(options.componentsSignif,1));$/;"	v
minVarFrac	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  minVarFrac = 0.01;$/;"	v
min_ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^min_ds           =  1.9;$/;"	v
min_field	lib/animateBumpcurlTrials.m	/^min_field = min(cat(1,td.(field)));$/;"	v
min_fr	lib/TrialData/Tools/removeBadNeurons.m	/^min_fr          =  0;$/;"	v
minusPi2Pi	lib/TrialData/util/minusPi2Pi.m	/^function out = minusPi2Pi(in)$/;"	f
moddepth	plotTuningDistr.m	/^moddepth = sqrt(sum(glm_info.b(2:3,:).^2,1));$/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 1; $/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 2; $/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 3; $/;"	v
model_corr	bumpcurl_script.m	/^        model_corr = cell(1,length(models_to_plot)-1);$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct( ...$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct(...$/;"	v
model_name	lib/TrialData/Analysis/evalModel.m	/^model_name       =  [];$/;"	v
model_name	lib/TrialData/Analysis/getModel.m	/^model_name    =  'default';$/;"	v
model_name	lib/TrialData/Analysis/getNoiseCovar.m	/^model_name      =  'default';$/;"	v
model_pairs	bumpcurl_script.m	/^    model_pairs = {'ext','handelbow'};$/;"	v
model_params	lib/TrialData/TrialData_tutorial.m	/^model_params = struct( ...$/;"	v
model_type	lib/TrialData/Analysis/evalModel.m	/^model_type       =  '';$/;"	v
model_type	lib/TrialData/Analysis/getModel.m	/^model_type    =  '';$/;"	v
modeled_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^modeled_signals =  {};$/;"	v
modeled_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^modeled_signals = check_signals(trial_data(1),modeled_signals);$/;"	v
modifiedTime	lib/TrialData/util/openNSx_td.m	/^        modifiedTime = 1;$/;"	v
monkey_names	bumpcurl_script.m	/^    monkey_names = {'H'};$/;"	v
moreComponents	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg == margRowSeq(i), 3);$/;"	v
moreComponents	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg(1:minL) == margRowSeq(i) & ...$/;"	v
move_inds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    move_inds = false(size(s));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                    mu = info_out.mu;$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                    mu = mean(get_vars(trial_data,signals),1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = mean(data,1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = zeros(1,size(data,2));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = zeros(1,sum(n_signals));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^            mu = mean(data,1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^mu                = [];     % mu is the mean from fitting, only filled if info_out is passed in$/;"	v
mu	lib/TrialData/util/circular_mean.m	/^mu = angle(r);$/;"	v
mu_in	lib/TrialData/Analysis/getPotentSpace.m	/^mu_in = pca_info_in.mu;$/;"	v
mu_out	lib/TrialData/Analysis/getPotentSpace.m	/^mu_out = pca_info_out.mu;$/;"	v
mvt_peak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        mvt_peak = find(peaks & (1:length(peaks))' > trial_data(trial).(start_idx)+peak_idx_offs/;"	v
mxt	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^mxt = invnl(yrnge(2)+2*db)-b;  % maximum time bin$/;"	v
myFig	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^myFig = figure('Position', [0 0 1800 1000]);$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = 1;$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = length(return_idx);$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^    n = fv{idx};$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^n = NaN; % use this as a flag$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = 0;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = j - 1;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = n - j;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = nLab + 1;$/;"	v
nPlotMax	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^nPlotMax   = 20;$/;"	v
n_bins	lib/TrialData/td_limblab/subspace_demo.m	/^n_bins = 3;$/;"	v
n_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^n_comps = length(comps);           %% number of connected components$/;"	v
n_comps	lib/TrialData/util/lib/isomap/isomap.m	/^n_comps = length(comps);               %% number of connected components$/;"	v
n_connect	lib/TrialData/util/lib/isomap/isomap.m	/^n_connect = sum(~(D==INF));        %% number of points each point connects to$/;"	v
n_poles	lib/TrialData/td_limblab/parseFileByTrial.m	/^n_poles     =  4;  % for EMG butterworth filter$/;"	v
n_poles	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^n_poles         = 0;   % for high pass filter on threshold (0 means no filter)$/;"	v
n_shifts	lib/TrialData/Tools/dupeAndShift.m	/^        n_shifts =  length(the_shifts);$/;"	v
n_signals	lib/TrialData/Tools/dimReduce.m	/^    n_signals = cellfun(@(x) length(x),signals(:,2));$/;"	v
n_time	lib/TrialData/Tools/getNorm.m	/^        n_time = size(data,1);$/;"	v
nan_bins	lib/TrialData/td_limblab/parseFileByTrial.m	/^    nan_bins = NaN(size(all_events));$/;"	v
nan_idx_names	lib/TrialData/Tools/removeBadTrials.m	/^nan_idx_names = 'all';$/;"	v
nanmmean	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function Y = nanmmean(X, dimlist)$/;"	f
nanners	bumpcurl_script.m	/^        nanners = isnan(cat(1,td.tgtDir));$/;"	v
nanners	bumpcurl_tensors.m	/^        nanners = isnan(cat(1,td.target_direction));$/;"	v
nanners	lib/TrialData/util/resample_signals.m	/^    nanners = isnan(data(:,i));$/;"	v
nbins	plotBumpcurlTuning.m	/^nbins = 12;$/;"	v
nbr_chs	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_chs = size(trial_data(1).(signal),2);$/;"	v
nbr_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_trials = cellfun(@(x) length(getTDidx(trial_data,condition,x)),num2cell(unique([trial_data.(/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            nc = numComps(i);$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            nc = numComps;$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        nc = numComps(margNums(i));$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        nc = numComps;$/;"	v
ncols	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ncols = ncols-1;$/;"	v
ncols	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ncols = ihprs.ncols;$/;"	v
ndim	lib/estimateBumpFromPCA.m	/^ndim = 10;$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = feedforwardnet(layer_sizes, train_func);$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = train(net, x', y');$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^net = b;$/;"	v
neuralIndices	lib/TrialData/util/openNEV_td.m	/^neuralIndices              = find(neuralIndicesPacketIDBounds(2) >= PacketIDs & PacketIDs >= neu/;"	v
neuralIndicesPacketIDBounds	lib/TrialData/util/openNEV_td.m	/^neuralIndicesPacketIDBounds = [1, 16384];$/;"	v
neuralTraj_td	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^function result = neuralTraj_td(runIdx, dat, directory, varargin)$/;"	f
neural_data	bumpcurl_tensors.m	/^        neural_data = cat(3,td.S1_spikes); % dimensions are timepoints x neurons x trials$/;"	v
neural_idx	lib/TrialData/Tools/getTDfields.m	/^            neural_idx = neural_idx | ...$/;"	v
neural_idx	lib/TrialData/Tools/getTDfields.m	/^        neural_idx = zeros(length(fn),1);$/;"	v
neural_idx	lib/TrialData/Tools/reorderTDfields.m	/^neural_idx = find(ismember(fn,fn_neural));$/;"	v
neural_signals	bumpcurl_script.m	/^    neural_signals = [arrayname '_FR'];$/;"	v
neural_tensor	bumpcurl_tensors.m	/^        neural_tensor = tensor(neural_data);$/;"	v
neuroMotiveEvents	lib/TrialData/util/openNEV_td.m	/^            neuroMotiveEvents = find(NEV.Data.Comments.CharSet == 255);$/;"	v
neuron_corr_table	bumpcurl_script.m	/^    neuron_corr_table = horzcat(keyTable,vertcat(corr_cell{:}));$/;"	v
neuron_eval	bumpcurl_script.m	/^    neuron_eval = vertcat(neuron_eval_cell{:});$/;"	v
neuron_eval_select	bumpcurl_script.m	/^        neuron_eval_select = neuron_eval(cond_idx,:);$/;"	v
neuronsConditions	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    neuronsConditions = options.numOfTrials(:);$/;"	v
nev_text	lib/TrialData/DataProcessing/processNEV.m	/^        nev_text = cell(1,size(temp_text,1));$/;"	v
new_bin_size	lib/TrialData/Tools/upsampleTD.m	/^new_bin_size = trial_data(1).bin_size \/  upsample_factor;$/;"	v
new_col	lib/TrialData/td_limblab/parseFileByTrial.m	/^            new_col = table(markers.(marker_names{marker_ctr})(:,col_ctr),'VariableNames',{col_n/;"	v
new_data	lib/TrialData/Tools/getNorm.m	/^        new_data = zeros(n_time,1);$/;"	v
new_idx	lib/TrialData/Tools/joinTrials.m	/^        new_idx = trial_data(trialnum).(fn_idx{fn_ctr});$/;"	v
new_markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^            new_markers = [new_markers new_col];$/;"	v
new_markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^    new_markers = table(markers.t,'VariableNames',{'t'});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = cat(2,new_name{~cellfun(@isempty,new_name)});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = strsplit(og_name,'_shift'); % effectively removes the _shift$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = intersect(actual_spikes,1:length(timestamps));$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = reshape(new_spikes,[],1);$/;"	v
new_unit_guide	bumpcurl_script.m	/^            new_unit_guide = unit_ids(firing_units,:);$/;"	v
new_unit_guide	bumpcurl_script.m	/^        new_unit_guide = unit_ids(~unsorted_units,:);$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = '';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'channels';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'duration';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'electrodes';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'precision';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'skipfactor';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^next = '';$/;"	v
nextra	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        nextra = niht-length(iht);$/;"	v
niht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    niht = length(iht0);$/;"	v
nl	lib/TrialData/util/lib/isomap/IsomapII.m	/^nl = length(landmarks); $/;"	v
nlin	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^nlin = @(x)log(x+1e-20);$/;"	v
nm	lib/TrialData/util/smooth_data.m	/^nm = conv(kernel,ones(1,nbr_samples))';$/;"	v
noTrials	lib/TrialData/td_limblab/parseFileByTrial.m	/^noTrials       = false;$/;"	v
no_winner	bumpcurl_script.m	/^                    no_winner =  cellfun(@isempty,pr2_winners(1,:));$/;"	v
no_winner	bumpcurl_script.m	/^                no_winner =  cellfun(@isempty,pr2_winners(pairnum,:));$/;"	v
noise_covar	lib/TrialData/Analysis/getNoiseCovar.m	/^noise_covar = cov(data);$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noise_covar = eye(sum(cellfun(@length,signals(:,2))));$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^noise_covar     = [];$/;"	v
noise_eigen	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen = cell(1,num_iter);$/;"	v
noise_eigen_prctile	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen_prctile      = prctile(eigenv_noise,99,2);$/;"	v
noise_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^noise_signals = check_signals(td,{fn});$/;"	v
noise_var_99	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_var_99        = zeros(1,nbr_chs);$/;"	v
noisy_data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noisy_data = mvnrnd(data,noise_covar);$/;"	v
normfac	lib/TrialData/Tools/softNormalize.m	/^    normfac = range(get_vars(trial_data,signals(iSig,:))) + alpha;$/;"	v
nt	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^nt = length(iht);        % number of points in iht$/;"	v
numChansToRead	lib/TrialData/util/openNSx_td.m	/^    numChansToRead = double(length(min(userRequestedChanRow):max(userRequestedChanRow)));$/;"	v
numCompToShow	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^numCompToShow = min(options.numCompToShow, size(W,2));$/;"	v
numFolds	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^numFolds      = 0;$/;"	v
numOfStimuli	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^        numOfStimuli = time(2); % time is used to pass size(data) for legend$/;"	v
numOfStimuli	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    numOfStimuli = size(data, 2);$/;"	v
numSigs	lib/TrialData/util/compute_r2.m	/^numSigs = size(sig1,2);$/;"	v
num_arrays	lib/TrialData/Plotting/visData.m	/^num_arrays = length(arrays);$/;"	v
num_bins	bumpcurl_analysis.m	/^    num_bins = 8;$/;"	v
num_bins	lib/TrialData/Tools/binTD.m	/^        num_bins = t(end); % this will tell you how  many$/;"	v
num_bins_after	bumpcurl_tensors.m	/^        num_bins_after = 100;$/;"	v
num_bins_before	bumpcurl_tensors.m	/^        num_bins_before = 30;$/;"	v
num_boots	bumpcurl_analysis.m	/^    num_boots = 1000;$/;"	v
num_boots	lib/TrialData/Analysis/evalModel.m	/^num_boots        =  0;$/;"	v
num_bootstraps	lib/TrialData/Analysis/evalModel.m	/^num_bootstraps = varargin{end};$/;"	v
num_colors	bumpcurl_tensors.m	/^        num_colors = 4;$/;"	v
num_cols	lib/TrialData/Plotting/visData.m	/^num_cols = pos_cols + time_cols;$/;"	v
num_conds	lib/TrialData/Analysis/runDPCA.m	/^    num_conds = size(valIdx,1);$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = 1;$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = size(all_conds,1);$/;"	v
num_dims	lib/TrialData/Analysis/runDPCA.m	/^num_dims       =  15;$/;"	v
num_dims	lib/TrialData/Tools/dimReduce.m	/^num_dims        =  []; % how many dimensions, needed for PPCA, FA, etc$/;"	v
num_dirs	bumpcurl_analysis.m	/^    num_dirs = length(td_bl);$/;"	v
num_electrodes	lib/TrialData/util/remove_spike_artifacts.m	/^    num_electrodes = length(unique(unit_structure.Data.Spikes.Electrode));$/;"	v
num_epochs	exploreData.m	/^num_epochs = length(epoch_list);$/;"	v
num_epochs	plotBumpcurlTuning.m	/^num_epochs = length(epoch_list);$/;"	v
num_factors	bumpcurl_tensors.m	/^        num_factors = 10;$/;"	v
num_folds	bumpcurl_script.m	/^                num_folds = double(max(session_corrs.crossvalID(:,2)));$/;"	v
num_freqs	lib/TrialData/td_limblab/getLearningMetrics.m	/^                num_freqs = 3;$/;"	v
num_iter	lib/TrialData/Analysis/estimateDimensionality.m	/^num_iter        =  1000;$/;"	v
num_markers	bumpcurl_tensors.m	/^        num_markers = size(td(1).markers,2);$/;"	v
num_moves	lib/TrialData/td_limblab/getRWMovements.m	/^num_moves = sum(~isnan([trial_data.(go_cue_name)]));$/;"	v
num_neurons	bumpcurl_analysis.m	/^    num_neurons = 10;$/;"	v
num_neurons	bumpcurl_tensors.m	/^        num_neurons = length(td(1).S1_unit_guide);$/;"	v
num_repeats	bumpcurl_script.m	/^                num_repeats = double(max(session_corrs.crossvalID(:,1)));$/;"	v
num_rows	lib/TrialData/Plotting/visData.m	/^num_rows = length(plot_signals)*kin_rows + event_rows + num_arrays*spike_rows;$/;"	v
num_signals	lib/TrialData/DataProcessing/convertDataToTD.m	/^num_signals = sum(cellfun(@(x) length(x.name),signal_info));$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = 1;$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = length(signal_info.name);$/;"	v
num_timepoints	bumpcurl_tensors.m	/^        num_timepoints = num_bins_before+num_bins_after+1;$/;"	v
num_trials	bumpcurl_tensors.m	/^        num_trials = length(td);$/;"	v
num_trials_to_plot	lib/TrialData/Plotting/visData.m	/^num_trials_to_plot = length(trials_to_plot);$/;"	v
numeric_cols	bumpcurl_script.m	/^        numeric_cols = strcmpi(sepResults.neuron_eval_table.Properties.VariableDescriptions,'lin/;"	v
numeric_vals	bumpcurl_script.m	/^        numeric_vals = sepResults.neuron_eval_table(:,numeric_cols).Variables;$/;"	v
objectIndex	lib/TrialData/util/openNEV_td.m	/^            objectIndex = [0 '1' '2' '3' '4' '1' '2' '3' '4'];$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = [0 0];$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = pos_offset;$/;"	v
offset	lib/TrialData/util/openNSx_td.m	/^		offset = double((headerIDX-1)*ExtHeaderLength);$/;"	v
offset	plotTuningDistr.m	/^offset = glm_info.b(1,:);$/;"	v
offsetX	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    offsetX = 0.31;$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = og_idx(end); % get the last one$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = setdiff(find(~cellfun(@isempty,regexp(fn_cont_new,new_name,'ONCE'))),shift_idx)/;"	v
og_name	lib/TrialData/Tools/reorderTDfields.m	/^        og_name = fn_cont_new{the_val};$/;"	v
og_size	lib/TrialData/Tools/stretchSignals.m	/^        og_size = size(trial_data(trial).(time_vars{1}),1);$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = find(ds<thresh & (1:length(ds))'<mvt_peak & move_inds,1,'first');$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        on_idx = find(s > s_thresh & move_inds,1,'first');$/;"	v
onetime_warn	bumpcurl_script.m	/^        onetime_warn = warning('query','last'); $/;"	v
onset_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^onset_name       =  'movement_on';$/;"	v
onset_name	lib/TrialData/td_limblab/getRWMovements.m	/^onset_name         =  'movement_on';$/;"	v
openNEV_td	lib/TrialData/util/openNEV_td.m	/^function varargout = openNEV_td(varargin)$/;"	f
openNSx_td	lib/TrialData/util/openNSx_td.m	/^function varargout = openNSx_td(varargin)$/;"	f
opensimList	lib/TrialData/td_limblab/parseFileByTrial.m	/^    opensimList = opensim.Properties.VariableNames;$/;"	v
opensim_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        opensim_analog_idx = i;$/;"	v
opensim_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^opensim_analog_idx = 0;$/;"	v
opensim_idx	bumpcurl_analysis.m	/^    opensim_idx = find(contains(td(1).opensim_names,'_muscVel'));$/;"	v
operator <	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::operator <(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
operator <	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  HeapNode::operator <(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:int
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::operator =(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:void
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::operator =(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:void
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::operator =(double NewKeyVal)$/;"	f	class:HeapNode	typeref:typename:void
operator ==	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::operator ==(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
operator ==	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  HeapNode::operator ==(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:int
optionNames	lib/TrialData/td_limblab/td_dpca/dpca.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^optionNames = fieldnames(options);$/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca.m	/^options = struct('combinedParams', [],       ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^options = struct('combinedParams', [], ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^options = struct('combinedParams', [],      ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^options = struct('time',           [], ...   $/;"	v
options	lib/TrialData/util/lib/isomap/IsomapII.m	/^     options = struct('dims',1:10,'overlay',1,'comp',1,'display',1,'dijkstra',1,'verbose',1); $/;"	v
options	lib/TrialData/util/lib/isomap/isomap.m	/^     options = struct('dims',1:10,'overlay',1,'comp',1,'display',1,'verbose',1); $/;"	v
ord_seqTrain	lib/TrialData/Analysis/runGPFA.m	/^ord_seqTrain = seqTrain;$/;"	v
orthogonalize	lib/TrialData/util/orthogonalize.m	/^function [Xorth, Lorth, TT] = orthogonalize(X, L)$/;"	f
out	lib/TrialData/DataProcessing/processNEV.m	/^out = struct( ...$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = get_vars(trial_data,signals);$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = zeros(size(cat(1,trial_data.(fn{1})),1),size(signals,1));$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = ~~out;$/;"	v
out	lib/TrialData/Tools/getSigByTrial.m	/^out = zeros(size(trial_data(1).(signals{1,1}),1), ...$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^    out = [];$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^    out = struct();$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^out = struct();$/;"	v
out	lib/TrialData/util/minusPi2Pi.m	/^out = atan2(sin(in), cos(in));$/;"	v
out	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^out = struct( ...$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    out_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^out_dims     =  [];$/;"	v
out_params	lib/TrialData/Analysis/getPotentSpace.m	/^out_params = struct( ...$/;"	v
out_params	lib/TrialData/DataProcessing/loadTDfiles.m	/^out_params = [];$/;"	v
out_params	lib/TrialData/Tools/dimReduce.m	/^    out_params = struct();$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals      =  [];$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals   =  {}; % {'name',idx};$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals  =  [];$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals_name	lib/TrialData/td_limblab/addProcessedSignal.m	/^out_signals_name = '';$/;"	v
outputName	lib/TrialData/util/openNSx_td.m	/^outputName = ['NS' fext(4)];$/;"	v
output_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^    output_data = processor(input_data);$/;"	v
overWrite	lib/TrialData/util/openNEV_td.m	/^        overWrite = input('Would you like to overwrite (Y\/N)? ', 's');$/;"	v
overlay	lib/TrialData/util/lib/isomap/IsomapII.m	/^overlay = options.overlay; $/;"	v
overlay	lib/TrialData/util/lib/isomap/isomap.m	/^overlay = options.overlay; $/;"	v
p	lib/TrialData/Analysis/runDPCA.m	/^        p = valIdx(depthCount,:)==i;$/;"	v
pairwiseCorr	lib/TrialData/Analysis/pairwiseCorr.m	/^function [rho,sort_idx] = pairwiseCorr(trial_data,params)$/;"	f
paramPCA	lib/TrialData/td_limblab/BBDemoScript.m	/^paramPCA = struct('signals', 'S1_spikes');$/;"	v
param_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^param_events = setdiff(event_list,time_events);$/;"	v
params	lib/TrialData/Analysis/runDPCA.m	/^params = varargin{end}; if ~isstruct(params), error('Last input must be params.'); end$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = struct();$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = varargin{2};$/;"	v
params	lib/TrialData/Tools/dupeAndShift.m	/^            params = varargin{end};$/;"	v
params	lib/TrialData/Tools/dupeAndShift.m	/^params = [];$/;"	v
params	lib/TrialData/Tools/getLFPidx.m	/^            params = struct();$/;"	v
params	lib/TrialData/Tools/getLFPidx.m	/^        params = varargin{1};$/;"	v
params	lib/TrialData/td_limblab/parseFileByTrial.m	/^    params = struct();$/;"	v
params	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^params = 2:length(size(X));$/;"	v
params	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^    params = struct();$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    paramsubsets = options.combinedParams;$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^paramsubsets = subsets(params);$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^paramsubsets = subsets(params-1);$/;"	v
paramsubsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    paramsubsubsets = subsets(indRest);$/;"	v
parseFileByTrial	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial(data,params)$/;"	f
parseFileByTrial_cds	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial_cds(cds,params)$/;"	f
part_eval	bumpcurl_analysis.m	/^    part_eval = evalModel(td_ad,eval_params);$/;"	v
pas_counts	bumpcurl_script.m	/^            pas_counts = histcounts(pas_trials.S1_FR(:,neuronnum),[possible_FR;Inf]);$/;"	v
pas_idx	bumpcurl_script.m	/^            pas_idx = getTDidx(td,'bumpDir',dirs(dirnum),'ctrHoldBump',true,'rand',1);$/;"	v
pass	lib/TrialData/td_limblab/coord_test.m	/^    pass = false(4,1);$/;"	v
path	lib/TrialData/util/openNSx_td.m	/^    path  = [path '\/'];$/;"	v
patientTrigPacketID	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketID = 65532;$/;"	v
patientTrigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketIDIndices = find(PacketIDs == patientTrigPacketID);$/;"	v
pc	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^pc = dec2bin(1:2^d-1) - '0';$/;"	v
pc	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^pc = fliplr(pc(ind,:));$/;"	v
pcFields	lib/TrialData/util/openNEV_td.m	/^                            pcFields = fields(tempParsedCommand);$/;"	v
pca_algorithm	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_algorithm   =  'svd'; % algorithm for PCA$/;"	v
pca_algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^pca_algorithm      =  'svd';  % which PCA algorithm$/;"	v
pca_algorithm	lib/TrialData/Tools/dimReduce.m	/^pca_algorithm     = 'svd';  % algorithm for PCA$/;"	v
pca_array	lib/TrialData/Plotting/visData.m	/^pca_array         =   '';$/;"	v
pca_centered	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_centered    =  true;  % whether to center data$/;"	v
pca_centered	lib/TrialData/Analysis/getPotentSpace.m	/^pca_centered       =  true;   % whether to center data$/;"	v
pca_dims	lib/TrialData/Plotting/visData.m	/^pca_dims          =   1:3;$/;"	v
pca_economy	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_economy     =  false; % if num samples < degrees of freedom, will pad with zeros to keep out/;"	v
pca_economy	lib/TrialData/Tools/dimReduce.m	/^pca_economy       = false;  % if num samples < degrees of freedom, will pad with zeros to keep o/;"	v
pca_info	lib/TrialData/Analysis/getPotentSpace.m	/^pca_info = struct(        ...$/;"	v
pca_params	lib/TrialData/Analysis/getPotentSpace.m	/^pca_params = params;$/;"	v
pca_params	lib/TrialData/TrialData_tutorial.m	/^pca_params = struct( ...$/;"	v
pca_params	lib/TrialData/td_limblab/subspace_demo.m	/^pca_params = struct( ...$/;"	v
pdTable	lib/TrialData/td_limblab/BBDemoScript.m	/^pdTable= getTDPDs(trial_data_pca, paramsPDs);$/;"	v
peak_divisor	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_divisor        = 2;$/;"	v
peak_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_idx_offset  = 0;$/;"	v
peak_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_name        =  'peak_speed';$/;"	v
peak_name	lib/TrialData/td_limblab/getRWMovements.m	/^peak_name          =  'peak_speed';$/;"	v
peaks	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        peaks = [dds(1:end-1)>0 & dds(2:end)<0; 0];$/;"	v
plot3D_td	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^function plot3D_td(seq, xspec, varargin)$/;"	f
plotBumpcurlTuning	plotBumpcurlTuning.m	/^function plotBumpcurlTuning(trial_data)$/;"	f
plotTuningDistr	plotTuningDistr.m	/^function plotTuningDistr(trial_data)$/;"	f
plot_field	lib/animateBumpcurlTrials.m	/^            plot_field = td(i).(field);$/;"	v
plot_pca	lib/TrialData/Plotting/visData.m	/^    plot_pca = false;$/;"	v
plot_pca	lib/TrialData/Plotting/visData.m	/^plot_pca          =   false;$/;"	v
plot_signals	lib/TrialData/Plotting/visData.m	/^plot_signals      =   {'vel'};$/;"	v
plotnum	bumpcurl_analysis.m	/^                plotnum = (1+num_dirs)*(neuron_ctr-1)+dir_ctr;$/;"	v
plotnum	bumpcurl_analysis.m	/^            plotnum = (1+num_dirs)*(neuron_ctr);$/;"	v
point	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^point = 'hand';$/;"	v
point_idx	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    point_idx = cell(1,3);$/;"	v
point_idx	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    point_idx = repmat({point_idx},length(coord_postfix),1);$/;"	v
polynomial	lib/TrialData/Analysis/getModel.m	/^polynomial    =  0; % order of cascaded nonlinearity$/;"	v
pos	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    pos = trial_data(i).(start_idx_name);$/;"	v
pos	lib/TrialData/td_limblab/getTargetDirection.m	/^    pos = trial_data(i).pos;$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axBar, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axCum, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(cb, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(gca, 'Position');$/;"	v
pos_cols	lib/TrialData/Plotting/visData.m	/^pos_cols           =   2;        % how many columns for position plot$/;"	v
pos_location	lib/TrialData/Plotting/visData.m	/^pos_location       =   'right'; % if position plot is on 'left' or 'right'$/;"	v
pos_offset	lib/TrialData/Plotting/visData.m	/^pos_offset        =   [0, 0]; % offset to zero position$/;"	v
pos_offset	lib/TrialData/td_limblab/parseFileByTrial.m	/^pos_offset     =  [0,0];$/;"	v
pos_range	lib/TrialData/Plotting/visData.m	/^pos_range          =   [-9,9];   % range for 2-D position plot axes$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = floor(num_rows\/2);$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = num_rows;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = 0;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = time_cols;$/;"	v
possible_FR	bumpcurl_script.m	/^        possible_FR = unique(session_trials.S1_FR);$/;"	v
possible_metrics	lib/TrialData/Analysis/evalModel.m	/^possible_metrics = {'pr2','vaf','r2','r'};$/;"	v
postprocess	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^function [estParams, seqTrain, seqTest] = postprocess(ws, varargin)$/;"	f
pr2_winners	bumpcurl_script.m	/^                    pr2_winners = compareEncoderMetrics(session_evals,struct(...$/;"	v
pr2_winners	bumpcurl_script.m	/^                pr2_winners = compareEncoderMetrics(session_evals,struct(...$/;"	v
prctile_cutoff	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_cutoff  =  99.5;$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^        prctile_dist    =  get_master_dist();$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_dist = [ ...$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^				precisionType = '*int16=>int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*short=>short';$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i}(3:end);$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i};$/;"	v
predict_kalman	lib/TrialData/util/predict_kalman.m	/^function [STATEnew,Vnew,VVnew] = predict_kalman(kf_model,OBSERVATIONS,STATE0,V0)$/;"	f
preserveSign	lib/TrialData/util/angleDiff.m	/^    preserveSign = true;$/;"	v
processNEV	lib/TrialData/DataProcessing/processNEV.m	/^function out = processNEV(filename,signal_info)$/;"	f
processNSx	lib/TrialData/DataProcessing/processNSx.m	/^function out = processNSx(filename,signal_info)$/;"	f
process_emg	lib/TrialData/util/process_emg.m	/^function emg_data = process_emg(data,params)$/;"	f
process_lfp	lib/TrialData/util/process_lfp.m	/^function [lfp_data,t_fft] = process_lfp(data,t,params)$/;"	f
processor	lib/TrialData/td_limblab/addProcessedSignal.m	/^processor = [];$/;"	v
r	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^r = [5 48 97]\/256;       %# end$/;"	v
r	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    r     = rank(cX);$/;"	v
r	lib/TrialData/util/circular_mean.m	/^r = sum(w.*exp(1i*alpha),dim);$/;"	v
r2	lib/TrialData/util/compute_r2.m	/^r2 = zeros(numSigs,1);$/;"	v
r2	lib/TrialData/util/lib/isomap/IsomapII.m	/^     r2 = 1-corrcoef(reshape(real(Isomap_L2_distance(Y.coords{di}, Y.coords{di}(:,land_ind))),N*/;"	v
r2	lib/TrialData/util/lib/isomap/isomap.m	/^         r2 = 1-corrcoef(reshape(real(L2_distance(Y.coords{di}, Y.coords{di})),N^2,1),D).^2; $/;"	v
r2_glm	lib/TrialData/td_limblab/BBDemoScript.m	/^r2_glm = evalModel(trial_data_glm, params);$/;"	v
ranges	lib/TrialData/Tools/removeBadTrials.m	/^ranges         = [];$/;"	v
rcb_b	lib/TrialData/Tools/convBasisFunc.m	/^rcb_b         =  [];$/;"	v
rcb_hpeaks	lib/TrialData/Tools/convBasisFunc.m	/^rcb_hpeaks    =  [];$/;"	v
rcb_n	lib/TrialData/Tools/convBasisFunc.m	/^rcb_n         =  [];$/;"	v
reach_distance	lib/TrialData/td_limblab/getTargetDirection.m	/^reach_distance  =  8; % cm$/;"	v
readSize	lib/TrialData/util/openNSx_td.m	/^    readSize                   = double(ChannelCount * ExtHeaderLength);$/;"	v
readTime	lib/TrialData/util/openNEV_td.m	/^                readTime = [temp(1), temp(end)];$/;"	v
read_waveforms	lib/TrialData/DataProcessing/processNEV.m	/^read_waveforms   = false; % (not implemented) whether to include waveforms for spikes. Big file /;"	v
recenter_for_proj	lib/TrialData/Tools/dimReduce.m	/^recenter_for_proj = false;  % whether to recenter data before projecting into PC space$/;"	v
reconfigPacketID	lib/TrialData/util/openNEV_td.m	/^reconfigPacketID = 65531;$/;"	v
reconfigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^reconfigPacketIDIndices    = find(PacketIDs == reconfigPacketID);$/;"	v
redBlue256	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^redBlue256 = [c1;c2];$/;"	v
rejection_num_chans	lib/TrialData/DataProcessing/processNEV.m	/^rejection_num_chans = 10;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = 3;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = varargin{2};$/;"	v
rejection_samples	lib/TrialData/util/remove_spike_artifacts.m	/^rejection_samples = rejection_window*30000;$/;"	v
rejection_window	lib/TrialData/DataProcessing/processNEV.m	/^rejection_window = 0.0005;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = 0.001;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = varargin{3};  % in seconds$/;"	v
reload_NEV	lib/TrialData/DataProcessing/processNEV.m	/^reload_NEV       = false;$/;"	v
removeBadNeurons	lib/TrialData/Tools/removeBadNeurons.m	/^function [trial_data,bad_units] = removeBadNeurons(trial_data,params)$/;"	f
removeBadTrials	lib/TrialData/Tools/removeBadTrials.m	/^function [trial_data,bad_trials] = removeBadTrials(trial_data,params)$/;"	f
remove_artifacts	lib/TrialData/DataProcessing/processNEV.m	/^remove_artifacts = false; % whether to remove the artifacts$/;"	v
remove_common_avg	lib/TrialData/util/process_lfp.m	/^remove_common_avg =  true;     % whether to do common average referencing$/;"	v
remove_incomplete	lib/TrialData/td_limblab/getRWMovements.m	/^remove_incomplete  =  false;$/;"	v
remove_nan_idx	lib/TrialData/Tools/removeBadTrials.m	/^remove_nan_idx = false;$/;"	v
remove_spike_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^function unit_structure = remove_spike_artifacts(varargin)$/;"	f
remove_time_avg	lib/TrialData/util/process_lfp.m	/^remove_time_avg   =  true;     % whether to center  data in time$/;"	v
reorderTDfields	lib/TrialData/Tools/reorderTDfields.m	/^function trial_data = reorderTDfields(trial_data)$/;"	f
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = (1:length(fn_cont_new))';$/;"	v
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = [reorder_idx(1:og_idx); the_val; reorder_idx(og_idx+1:end)];$/;"	v
resamp_vec	lib/TrialData/util/resample_signals.m	/^resamp_vec = ones(size(data,1),1);$/;"	v
resamp_vec	lib/TrialData/util/resample_signals.m	/^resamp_vec = upsample(downsample(resamp_vec,Q),P);$/;"	v
resample_signals	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = resample_signals(data,var_list,bin_size,start_time,end_time)$/;"	f
resample_signals	lib/TrialData/util/resample_signals.m	/^function [dataResampled,ty] = resample_signals(data,tx,params)$/;"	f
result	lib/TrialData/Analysis/runGPFA.m	/^result = neuralTraj_td(runIdx, dat, save_dir, 'method', method, 'xDim', xDim,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        result = gpfaEngine_td(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        result = twoStageEngine_matt(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    result = [];$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^result = [];$/;"	v
return_empty	lib/TrialData/Tools/splitTD.m	/^return_empty       = false; % if true will return any trial that does not have a split idx$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(1:bounds{2});$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(end-(bounds{2}-1):end);$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx( 1+floor(bounds(1)*length(return_idx)) : floor(bounds(2)*len/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx(bounds(1):bounds(2));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^    return_idx = return_idx(temp(1:n));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^return_idx = find(idx);$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = rho(sort_idx,sort_idx);$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = temp1 + temp2;$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^rho = method(data).*(-1*eye(size(data,2))+ones(size(data,2)));$/;"	v
roundedD	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    roundedD = floor(d);$/;"	v
row	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        row = find(margRowSeq == m, 1);$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^            row_tally = row_tally + traj_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + kin_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + spike_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = 0;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = row_tally + event_rows;$/;"	v
runDPCA	lib/TrialData/Analysis/runDPCA.m	/^function [trial_data, dPCA_info] = runDPCA(trial_data,varargin)$/;"	f
runDir	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    runDir = sprintf([directory '\\\\mat_resultsgpfa\\\\run%s'], runIdx);$/;"	v
runGPFA	lib/TrialData/Analysis/runGPFA.m	/^function [trial_data, gpfa_out] = runGPFA(trial_data, params)$/;"	f
runIdx	lib/TrialData/Analysis/runGPFA.m	/^runIdx = ['-' [arrays{:}]];$/;"	v
run_func	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,out_params] = run_func(trial_data,funcCall)$/;"	f
run_through_error	lib/TrialData/DataProcessing/convertDataToTD.m	/^run_through_error = false; % false: breaks on error in signal processing$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^    rw_td = getMoveOnsetAndPeak(rw_td,struct( ...$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^rw_td = reorderTDfields(rw_td);$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^rw_td = repmat(struct(),1,num_moves);$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                    s = s_temp;$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                s = rmfield(s,{'resid','residp','residd','resida','wts'});$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^s                    =  [];        %    provided as a params input$/;"	v
s	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    s = getSig(trial_data(trial),which_field);$/;"	v
s	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    s = subplot(4,4,options.legendSubplot);$/;"	v
s1	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    s1 = warning('error','MATLAB:singularMatrix');$/;"	v
s1PCADown	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCADown = cat(1,downMove.S1_pca);$/;"	v
s1PCARight	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCARight = cat(1, rightMove.S1_pca);$/;"	v
s1PCAUp	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCAUp = cat(1, upMove.S1_pca);$/;"	v
s2	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    s2 = warning('error','MATLAB:nearlySingularMatrix');$/;"	v
s_thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^s_thresh         =  10;$/;"	v
samples	lib/TrialData/Tools/stretchSignals.m	/^        samples = params;$/;"	v
samples	lib/TrialData/Tools/stretchSignals.m	/^samples    =  100;$/;"	v
samprate	lib/TrialData/td_limblab/parseFileByTrial.m	/^    samprate = 1\/mode(diff(emg.t));$/;"	v
samprate	lib/TrialData/util/process_emg.m	/^samprate        =  [];$/;"	v
samprate	lib/TrialData/util/process_lfp.m	/^    samprate = samprate\/downsample_fac;$/;"	v
samprate	lib/TrialData/util/process_lfp.m	/^samprate          =  [];       % sampling rate of data$/;"	v
samprate	lib/TrialData/util/resample_signals.m	/^samprate        =  [];$/;"	v
save_NEV_mat	lib/TrialData/DataProcessing/processNEV.m	/^save_NEV_mat     = false;$/;"	v
save_dir	lib/TrialData/Analysis/runGPFA.m	/^save_dir    =  [];$/;"	v
scale	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    scale = exp(2*sum(log(diag(chol(cX))))\/xDim);$/;"	v
scale	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    scale = geomean(e(1:r));$/;"	v
scalingFactor	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            scalingFactor = (A(:)'*B(:))\/(B(:)'*B(:));$/;"	v
score_in	lib/TrialData/Analysis/getPotentSpace.m	/^score_in = pca_info_in.scores;$/;"	v
score_out	lib/TrialData/Analysis/getPotentSpace.m	/^score_out = pca_info_out.scores;$/;"	v
scores	lib/TrialData/Tools/dimReduce.m	/^            scores = Y.coords{end}';$/;"	v
scores	lib/TrialData/Tools/dimReduce.m	/^            scores = info_out.scores;$/;"	v
scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^scree_noise         = zeros(size(eigenv_noise,1),num_iter);$/;"	v
screenNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            screenNames = {sortedUnits.label};$/;"	v
sd	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            sd = -rms(d);$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^        segmentCount = segmentCount + 1;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 0;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 1;$/;"	v
segmentsThatAreZero	lib/TrialData/util/openNSx_td.m	/^    segmentsThatAreZero = find(NSx.MetaTags.DataPoints == 0);$/;"	v
sepResults	bumpcurl_script.m	/^        sepResults = actpasSep(td,struct(...$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    seq = seq(trialsToKeep);$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  seq = [];$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^seq  = getSeq_td(dat, binWidth, extraOpts{:});$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth_fast(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    seqTest       = seq(testTrialIdx);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');    $/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.seqTest, Xorth, 'xorth');            $/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  seqTest   = [];$/;"	v
seqTrain	lib/TrialData/Analysis/runGPFA.m	/^seqTrain = ord_seqTrain;$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    seqTrain      = seq(trainTrialIdx);$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, X, 'xorth');$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, Xorth, 'xorth');    $/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.seqTrain, Xorth, 'xorth');$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  seqTrain  = [];$/;"	v
seqTrainCut	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^    seqTrainCut = cutTrials(seqTrain, 'segLength', Inf);$/;"	v
seqTrainCut	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^seqTrainCut = cutTrials(seqTrain, extraOpts{:});$/;"	v
session_dates	bumpcurl_script.m	/^                session_dates = unique(monkey_evals.date);$/;"	v
session_dates	bumpcurl_script.m	/^            session_dates = unique(monkey_corrs.date);$/;"	v
session_dates	bumpcurl_script.m	/^            session_dates = unique(monkey_evals.date);$/;"	v
session_dates	bumpcurl_script.m	/^        session_dates = unique(monkey_evals.date);$/;"	v
session_trials	bumpcurl_script.m	/^        session_trials = neuronAverage(sepResults.trial_table,struct(...$/;"	v
sfr_noise_diff	lib/TrialData/Analysis/estimateDimensionality.m	/^    sfr_noise_diff  = (sfr_noise1 - sfr_noise2)\/sqrt(2*min(nbr_trials));$/;"	v
sg	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg = trial_data(1).([fn_array{iArray} '_unit_guide']);$/;"	v
sg	lib/TrialData/td_limblab/parseFileByTrial.m	/^sg = zeros(length(unit_idx),2);$/;"	v
sg_new	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg_new = [elecs, zeros(length(elecs),1)];$/;"	v
shift_idx	lib/TrialData/Tools/reorderTDfields.m	/^        shift_idx = find(~cellfun(@isempty,regexp(fn_cont_new,shift_idx_all{i},'ONCE')));$/;"	v
shift_idx_all	lib/TrialData/Tools/reorderTDfields.m	/^shift_idx_all = fn_cont(~cellfun(@isempty,regexp(fn_cont,'_shift','ONCE')));$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig  = sig - repmat(m,size(sig,1),1);$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = 2 * sig.*sig;$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = abs(sqrt(sig));$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = sig(:,signals{iSig,2});$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = trial_data(trial).(signals{iSig,1});$/;"	v
sig_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^sig_data = repmat(struct('type',[],'meta',[],'name',[],'duration',[],'samprate',[],'labels',[],'/;"	v
sig_name	lib/TrialData/Tools/convBasisFunc.m	/^                sig_name = sig_name(5:end);$/;"	v
sig_name	lib/TrialData/Tools/convBasisFunc.m	/^            sig_name = signals{iSig,1};$/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^        sig_name = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^sig_name          = '';     % output will be in field "SIG_NAMES_ALGORITHM". Defaults to concate/;"	v
sig_name_in	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_in = cellfun(@(x) strrep(x,'_spikes',''),in_signals(:,1),'uni',0);$/;"	v
sig_name_out	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_out = cellfun(@(x) strrep(x,'_spikes',''),out_signals(:,1),'uni',0);$/;"	v
sig_names	lib/TrialData/Tools/addCorrelatedNoise.m	/^sig_names = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_seps	bumpcurl_script.m	/^                    sig_seps = avg_pR2.S1_FR_indiv_sep_CI_lo > 0.5;$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = [signals{:,1}];$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = signals{1,1};$/;"	v
signal	lib/TrialData/Tools/getDifferential.m	/^    signal = signals{iSig,1};$/;"	v
signalID	bumpcurl_script.m	/^            signalID = session_avg.signalID;$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = repmat({'all'},length(signals),1);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = signals(2);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = {1:size(trial_data(1).(signals{1}),2)};$/;"	v
signal_info	lib/TrialData/DataProcessing/convertDataToTD.m	/^    signal_info = varargin{1};$/;"	v
signal_info	lib/TrialData/DataProcessing/initSignalStruct.m	/^signal_info = struct( ...$/;"	v
signal_means	lib/TrialData/Tools/centerSignals.m	/^signal_means = cell(1,size(signals,1));$/;"	v
signal_name	bumpcurl_analysis.m	/^    signal_name = 'opensim';$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals         =  [];$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals          =  [];$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/runDPCA.m	/^signals        =  [];$/;"	v
signals	lib/TrialData/Analysis/runDPCA.m	/^signals        =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals         =  {};$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals = check_signals(td(1),signals);$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^signals      =  getTDfields(trial_data,'time');$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^signals     =  check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/convBasisFunc.m	/^signals       =  getTDfields(trial_data,'time'); % default to all time signals$/;"	v
signals	lib/TrialData/Tools/convBasisFunc.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals         =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = signals(:,1); % we don't need the idx$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = {varargin{1:2:end}};$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals     =  check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals  =  ''; % signal to process$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^    signals = params;$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals      =  '';$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^signals      =  ''; % which signals to use$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getSig.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getSigByTrial.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals         =  []; $/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^    signals = getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals  =  '';$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = signals(:,1); % don't need the idx if they exist$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = signals(:,1); % you don't need the idx if they exist, just do it for them all$/;"	v
signals	lib/TrialData/td_limblab/dPCA_demo.m	/^signals = {'PMd_spikes', 'all'; 'M1_spikes','all'};$/;"	v
signals	lib/TrialData/util/subfcn/check_field_extra.m	/^    signals = {''};$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^        signals = signals(1);$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^    signals = [signals, signal_idx];$/;"	v
signifTrace	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        signifTrace = [];$/;"	v
signifTrace	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        signifTrace = options.componentsSignif(cc,:);$/;"	v
sincos	lib/TrialData/td_limblab/getLearningMetrics.m	/^                sincos = [sin(theta'*(1:num_freqs)) cos(theta'*(1:num_freqs))];$/;"	v
single_eval	bumpcurl_analysis.m	/^        single_eval = squeeze(ad_eval(:,i,:));$/;"	v
single_eval	bumpcurl_analysis.m	/^        single_eval = squeeze(wo_eval(:,i,:));$/;"	v
size_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^size_comps = size_comps(comp_order(end:-1:1)); $/;"	v
size_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^size_comps = sum((repmat(firsts,n_comps,1)==((1:n_comps)'*ones(1,N)))'); $/;"	v
size_comps	lib/TrialData/util/lib/isomap/isomap.m	/^size_comps = n_connect(comps);     %% size of each connected component$/;"	v
size_comps	lib/TrialData/util/lib/isomap/isomap.m	/^size_comps = size_comps(comp_order(end:-1:1)); $/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = inputArgument;$/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
smoothSignals	lib/TrialData/Tools/smoothSignals.m	/^function trial_data = smoothSignals(trial_data,params)$/;"	f
smooth_data	lib/TrialData/util/smooth_data.m	/^function data_smooth = smooth_data(data,dt,kernel_SD)$/;"	f
softNormalize	lib/TrialData/Tools/softNormalize.m	/^function trial_data = softNormalize(trial_data,params)$/;"	f
sort_idx	exploreData.m	/^sort_idx = find(td(1).S1_unit_guide(:,2));$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cat(1,temp{:});$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cluster_rho(rho);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = 1:size(rho,2);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = [sort_idx; idx(I)];$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^sort_idx = [];$/;"	v
sort_idx	plotTuningDistr.m	/^sort_idx = find(td(1).S1_unit_guide(:,2));$/;"	v
sortedUnits	lib/TrialData/td_limblab/parseFileByTrial.m	/^            sortedUnits = chanNames(find(~ismember([chanNames.ID],exclude_units) & strcmpi({chan/;"	v
speed1	lib/TrialData/td_limblab/BBDemoScript.m	/^speed1 = cat(2, trial_data_movement.speed);$/;"	v
sph	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    sph = [az el r];$/;"	v
spike_method	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_method    = 'threshold'; % 'threshold', later: 'template'?$/;"	v
spike_rows	lib/TrialData/Plotting/visData.m	/^spike_rows         =   4;        % how many rows for spike markers$/;"	v
spike_threshold	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_threshold = 3;   % x RMS$/;"	v
spike_times	bumpcurl_script.m	/^                    spike_times = timevec(spikes(neuronnum,:)>0);$/;"	v
spikes	bumpcurl_analysis.m	/^    spikes = cat(1,td_bl.S1_spikes);$/;"	v
spikes	bumpcurl_analysis.m	/^    spikes = repmat(cat(1,td_bl.S1_spikes),2,1);$/;"	v
spikes	bumpcurl_script.m	/^                spikes = getSig(td_temp(trialnum),'S1_spikes')';$/;"	v
spikes	bumpcurl_script.m	/^                spikes = td(trialnum).(sprintf('%s_spikes',arrayname));$/;"	v
spikes	bumpcurl_script.m	/^            spikes = td(trialnum).(sprintf('%s_spikes',arrayname));$/;"	v
spikes	lib/TrialData/Tools/addFiringRates.m	/^            spikes = trial_data(trial).([array '_spikes']);$/;"	v
spikes_are_spikes	lib/TrialData/Tools/binTD.m	/^spikes_are_spikes = true(1,length(fn_spikes));$/;"	v
spiking_chans	lib/TrialData/DataProcessing/processNEV.m	/^spiking_chans    = 1:96;$/;"	v
spiking_chans	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spiking_chans   = 1:96;$/;"	v
spiking_inputs	lib/TrialData/td_limblab/subspace_demo.m	/^spiking_inputs = {'M1_spikes'};$/;"	v
splitDigiValues	lib/TrialData/util/openNEV_td.m	/^            splitDigiValues = regexp(DigiValues(2:end), '*', 'split')';$/;"	v
splitTD	lib/TrialData/Tools/splitTD.m	/^function td_s = splitTD(trial_data,params)$/;"	f
split_idx	lib/TrialData/Tools/splitTD.m	/^    split_idx = td.(split_idx_name);$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^        split_idx_name = params;$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^split_idx_name     =  'idx_trial_start';$/;"	v
sqrtTransform	lib/TrialData/Tools/sqrtTransform.m	/^function trial_data = sqrtTransform(trial_data,params)$/;"	f
sqrt_transform	lib/TrialData/Tools/dimReduce.m	/^sqrt_transform    = false;  % square root transform before reduction (projections don't have it)$/;"	v
ss	lib/TrialData/util/predict_kalman.m	/^    ss = size(V0,1);$/;"	v
startEps	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^startEps      = 1e-3;$/;"	v
startTau	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^startTau      = 100; % in msec$/;"	v
start_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        start_idx = [0 cellfun(@length,neurons)];$/;"	v
start_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx        =  'idx_go_cue';$/;"	v
start_idx_name	lib/TrialData/td_limblab/getRWTargetDirection.m	/^start_idx_name = 'cursor_start';$/;"	v
start_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx_offset = 0;$/;"	v
start_name	lib/TrialData/Tools/splitTD.m	/^start_name         =  'idx_trial_start';$/;"	v
start_name	lib/TrialData/td_limblab/getRWMovements.m	/^start_name         =  'idx_trial_start';$/;"	v
start_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        start_point = 1;$/;"	v
start_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        start_point = trial_data(trial).(start_idx);$/;"	v
stats	lib/TrialData/Tools/dimReduce.m	/^            stats = [];$/;"	v
str1	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str1 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str1	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str1 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str2	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str2 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str2	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str2 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str3	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str3 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
str3	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str3 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
stretchSignals	lib/TrialData/Tools/stretchSignals.m	/^function trial_data = stretchSignals(trial_data,params)$/;"	f
stripSpikeSorting	lib/TrialData/Tools/stripSpikeSorting.m	/^function trial_data = stripSpikeSorting(trial_data)$/;"	f
strip_sort	lib/TrialData/DataProcessing/processNEV.m	/^strip_sort       = false;  % whether to ignore unit sort codes$/;"	v
subB	lib/TrialData/util/lib/isomap/IsomapII.m	/^     subB = -.5*(D.^2 - sum(D'.^2)'*ones(1,nl)\/nl - ones(N,1)*sum(D.^2)\/N+sum(sum(D.^2))\/(N*n/;"	v
subplot_grid	lib/TrialData/Plotting/visData.m	/^subplot_grid = repmat((0:num_rows-1)'*num_cols,1,num_cols) + repmat(1:num_cols,num_rows,1);$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        subplots = [subplots (i-1)*4+2:(i-1)*4+2 + length(moreComponents) - 1];$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        subplots = subplots(1:numCompToShow);$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    subplots = [2 3 4 6 7 8 10 11 12 14 15 16];$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    subplots = [];$/;"	v
subsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function S = subsets(X)$/;"	f
subtractConditionMean	lib/TrialData/Tools/subtractConditionMean.m	/^function trial_data = subtractConditionMean(trial_data,params)$/;"	f
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                t = t(idx_keep);$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            t = t(idx_keep);$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        t = t';$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    t = file_data_temp.t;$/;"	v
t	lib/TrialData/Tools/binTD.m	/^    t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/Tools/getTDfields.m	/^        t = 0;$/;"	v
t	lib/TrialData/Tools/trimTD.m	/^    t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/util/circular_mean.m	/^  t = circular_confmean(alpha,0.05,w,[],dim);$/;"	v
t	lib/TrialData/util/openNEV_td.m	/^t                         = double(typecast(BasicHeader(29:44), 'uint16'));$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    	t                          = dir([path fname]);$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    t                          = double(typecast(BasicHeader(287:302), 'uint16'));$/;"	v
t	lib/TrialData/util/process_lfp.m	/^    t = decimate(t,downsample_fac);$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^            t1 = trial_data(iTrial).(time_window{1,1})+time_window{1,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^            t2 = trial_data(iTrial).(time_window{2,1})+time_window{2,2};$/;"	v
tId	lib/TrialData/Analysis/runGPFA.m	/^    tId = seqTrain(tr).trialId;$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^        tRawData  = fread(FID, [Trackers.countPacketBytes Trackers.readPackets(2)], ...$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^    tRawData  = fread(FID, [10 Trackers.countDataPacket], '10*uint8=>uint8', Trackers.countPacke/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    t_bin = (0:bin_size:sig_data(count).duration)';$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^        t_bin = 1:num_bins:t(end)+1;$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^        t_bin = [1 t(end)+1];$/;"	v
t_bin	lib/TrialData/td_limblab/parseFileByTrial.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        t_bin_temp = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = 1+idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = ceil(trial_data(trial).(idx_end{1}) + idx_end{2});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = ceil(trial_data(trial).(idx_end{1}));$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = int32(idx_end{1});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = length(t);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = size(trial_data(trial).(fn_time{1}),1) + idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = size(trial_data(trial).(fn_time{1}),1);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = t_end(end);$/;"	v
t_end	lib/TrialData/td_limblab/parseFileByTrial.m	/^        t_end = cds_bin.trials.endTime(iTrial) + extra_time(2);$/;"	v
t_fft	lib/TrialData/util/process_lfp.m	/^t_fft = t_fft + t(1);$/;"	v
t_fft	lib/TrialData/util/process_lfp.m	/^t_fft = t_fft\/samprate;$/;"	v
t_fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_fn = fn(cellfun(@(x) ~isempty(x),strfind(fn,'_t')));$/;"	v
t_lengths	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_lengths = cellfun(@(x) size(trial_data.(x),1),t_fn);$/;"	v
t_max	lib/TrialData/Tools/splitTD.m	/^    t_max = size(td.(fn_time{1}),1);$/;"	v
t_min	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_min = min(t_lengths);$/;"	v
t_new	lib/TrialData/Tools/trimTD.m	/^        t_new = t_start:t_end;$/;"	v
t_poly	lib/TrialData/util/resample_signals.m	/^    t_poly = tx(~nanners);$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = 1+idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = 1;$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}) + idx_start{2});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}));$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = int32(idx_start{1});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = size(trial_data(trial).(fn_time{1}),1) + idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = t_start(1);$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^        t_start = 1;$/;"	v
t_start	lib/TrialData/td_limblab/parseFileByTrial.m	/^        t_start = cds_bin.trials.startTime(iTrial) - extra_time(1);$/;"	v
t_total	lib/TrialData/Tools/getSig.m	/^            t_total = t_total + size(trial_data(trial).(fn{1}),1);$/;"	v
t_total	lib/TrialData/Tools/getSig.m	/^        t_total = 0;$/;"	v
tail	lib/animateBumpcurlTrials.m	/^            tail = max(1,tail);$/;"	v
tail	lib/animateBumpcurlTrials.m	/^            tail = timeCtr-tail_length:timeCtr;$/;"	v
targ	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ	lib/TrialData/td_limblab/getTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ_angs	lib/TrialData/td_limblab/parseFileByTrial.m	/^            targ_angs = [pi\/2, pi\/4, 0, -pi\/4, -pi\/2, -3*pi\/4, pi, 3*pi\/4];$/;"	v
target_distance	lib/TrialData/Plotting/visData.m	/^target_distance   =   8; % distance of outer targets in cm$/;"	v
target_pos_name	lib/TrialData/td_limblab/getRWTargetDirection.m	/^target_pos_name = 'target_center';$/;"	v
target_size	lib/TrialData/Plotting/visData.m	/^target_size       =   2; % target size in cm$/;"	v
tcs	lib/TrialData/td_limblab/getNeuronTuning.m	/^        tcs = regressTuningCurves(fr,covar,{'none'},'doparallel',false);$/;"	v
td	bumpcurl_analysis.m	/^    td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime'));$/;"	v
td	bumpcurl_analysis.m	/^    td = getSpeed(td);$/;"	v
td	bumpcurl_analysis.m	/^    td = removeBadTrials(td,struct('remove_nan_idx',false));$/;"	v
td	bumpcurl_script.m	/^        td = addFiringRates(td,struct('array',arrayname));$/;"	v
td	bumpcurl_script.m	/^        td = binTD(td,'average');$/;"	v
td	bumpcurl_script.m	/^        td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	bumpcurl_script.m	/^        td = getDifferential(td,struct('signals','vel_norm','alias','dvel_norm'));$/;"	v
td	bumpcurl_script.m	/^        td = getMoveOnsetAndPeak(td,struct(...$/;"	v
td	bumpcurl_script.m	/^        td = getNorm(td,struct('signals','vel','field_extra','_norm'));$/;"	v
td	bumpcurl_script.m	/^        td = load(fullfile(dataroot,'td-library',[filenames{filenum}]));$/;"	v
td	bumpcurl_script.m	/^        td = removeBadNeurons(td,struct(...$/;"	v
td	bumpcurl_script.m	/^        td = reorderTDfields(td);$/;"	v
td	bumpcurl_script.m	/^        td = splitTD(...$/;"	v
td	bumpcurl_script.m	/^        td = td(~biggers);$/;"	v
td	bumpcurl_script.m	/^        td = td(~nanners);$/;"	v
td	bumpcurl_script.m	/^        td = td.trial_data;$/;"	v
td	bumpcurl_script.m	/^        td = trial_data_cell{filenum};$/;"	v
td	bumpcurl_script.m	/^        td = trimTD(td,{'idx_movement_on',-50},{'idx_movement_on',60});$/;"	v
td	bumpcurl_script.m	/^        td = trimTD(td,{'idx_movement_on',0},{'idx_movement_on',11});$/;"	v
td	bumpcurl_tensors.m	/^        td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	bumpcurl_tensors.m	/^        td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime','/;"	v
td	bumpcurl_tensors.m	/^        td = removeBadTrials(td,struct('remove_nan_idx',false));$/;"	v
td	bumpcurl_tensors.m	/^        td = smoothSignals(td,struct('signals','markers'));$/;"	v
td	bumpcurl_tensors.m	/^        td= trimTD(td,struct('idx_start',{{'idx_movement_on',-num_bins_before}},'idx_end',{{'idx/;"	v
td	exploreData.m	/^td = getDPCA(td,blocks,'bumpDir',struct('signals',{{'S1_spikes',sort_idx}},'do_plot',true,'num_d/;"	v
td	exploreData.m	/^td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime'));$/;"	v
td	exploreData.m	/^td = getSpeed(td);$/;"	v
td	exploreData.m	/^td = removeBadTrials(td,struct('remove_nan_idx',false));$/;"	v
td	exploreData.m	/^td = smoothSignals(td,struct('signals','S1_spikes','sqrt_transform',true));$/;"	v
td	exploreData.m	/^td = smoothSignals(td,struct('signals',{'S1_spikes'},'sqrt_transform',true,'do_smoothing',true,'/;"	v
td	exploreData.m	/^td = trialAverage(td,{'bumpDir','epoch'});$/;"	v
td	exploreData.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',15});$/;"	v
td	exploreData.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',30});$/;"	v
td	lib/TrialData/Analysis/estimateDimensionality.m	/^td = trialAverage(trial_data,condition);$/;"	v
td	lib/TrialData/Analysis/getNoiseCovar.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/addCorrelatedNoise.m	/^td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/addFiringRates.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/appendTDs.m	/^        td = varargin{i};$/;"	v
td	lib/TrialData/Tools/catTDs.m	/^        td = varargin{iTD};$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = smoothSignals(td,struct('signals',{signals},'width',width));$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = sqrtTransform(td,signals);$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^    td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/removeBadNeurons.m	/^        td = trimTD(trial_data(use_trials),fr_window(1,:),fr_window(2,:));$/;"	v
td	lib/TrialData/Tools/removeBadTrials.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/splitTD.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/subtractConditionMean.m	/^td = trial_data(cond_idx);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = binTD(td,2);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = dupeAndShift(td,'M1_spikes',-(1:10),'PMd_spikes',-(1:10));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = getModel(td,model_params);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = getNorm(td,struct('signals','vel','norm_name','speed'));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = removeBadNeurons(td,struct('min_fr',0.5));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = removeBadTrials(td);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = smoothSignals(td,struct('signals',{{'M1_spikes','PMd_spikes'}},'width',0.1));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = splitTD(td,struct( ...$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = td_store;$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = trial_data;$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = trimTD(td, {'idx_target_on',-5},'idx_trial_end');$/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = removeBadNeurons(trial_data,struct('min_fr',1,'do_shunt_check',false));$/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = removeBadTrials(td,struct('ranges',{{'idx_go_cue','idx_movement_on',[5 50];'idx_movement_on/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = smoothSignals(td,struct('signals',{signals},'sqrt_transform',true,'do_smoothing',true,'kern/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = trimTD(td,{'idx_movement_on',-20},{'idx_movement_on',50});$/;"	v
td	lib/TrialData/td_limblab/getRWMovements.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = binTD(td,n_bins);$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = trialAverage(td,'target_direction');$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = trimTD(trial_data,{'idx_movement_on',-50},{'idx_movement_on',70});$/;"	v
td	lib/animateBumpcurlTrials.m	/^td = trial_data;$/;"	v
td	lib/estimateBumpFromPCA.m	/^td = smoothSignals(td,struct('signals','S1_spikes','sqrt_transform',true));$/;"	v
td	lib/estimateBumpFromPCA.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',15});$/;"	v
td	plotBumpcurlTuning.m	/^td = trialAverage(td,{'bumpDir','epoch'});$/;"	v
td	plotBumpcurlTuning.m	/^td = truncateAndBin(td,nbins,{'idx_bumpTime',0},{'idx_bumpTime',nbins*2});$/;"	v
td	plotTuningDistr.m	/^td = truncateAndBin(td,4,{'idx_bumpTime',0},{'idx_bumpTime',12});$/;"	v
td1	exploreData.m	/^td1 = trimTD(td,{'idx_movement_on',0},{'idx_peak_speed',0});$/;"	v
td2	exploreData.m	/^td2 = trimTD(td,{'idx_movement_on',0},{'idx_endTime',0});$/;"	v
td_act	bumpcurl_tensors.m	/^            td_act = td_act(~nanners);$/;"	v
td_ad	bumpcurl_analysis.m	/^    td_ad = binTD(td_ad,5);$/;"	v
td_ad	bumpcurl_analysis.m	/^    td_ad = trimTD(td_ad,{'idx_goCueTime',0},{'idx_endTime',0});$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = binTD(td_bl,15);$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = binTD(td_bl,5);$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = trialAverage(td_bl,'bumpDir');$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = trimTD(td_bl,{'idx_bumpTime',0},{'idx_bumpTime',15});$/;"	v
td_fn_prefix	lib/TrialData/Analysis/evalModel.m	/^td_fn_prefix     =  '';    % prefix for fieldname$/;"	v
td_fn_prefix	lib/TrialData/Analysis/getModel.m	/^td_fn_prefix         =  '';        % name prefix for trial_data field$/;"	v
td_j	lib/TrialData/Tools/joinTrials.m	/^td_j = reorderTDfields(td_j);$/;"	v
td_j	lib/TrialData/Tools/joinTrials.m	/^td_j = struct();$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = binTD(td_move,n_bins);$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = trialAverage(td_move,'target_direction');$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = trimTD(trial_data,{'idx_movement_on',10},{'idx_movement_on',40});$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^            td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^td_params = struct( ...$/;"	v
td_params	lib/TrialData/td_limblab/parseFileByTrial.m	/^td_params = struct( ...$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = binTD(td_prep,n_bins);$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = trialAverage(td_prep,'target_direction');$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = trimTD(trial_data,{'idx_go_cue',-30},{'idx_go_cue',0});$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = reorderTDfields(td_s);$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = trial_data(1);$/;"	v
td_store	lib/TrialData/TrialData_tutorial.m	/^td_store = td;$/;"	v
td_td_move	lib/TrialData/TrialData_tutorial.m	/^td_td_move   = dimReduce(td_store,setfield(pca_params,'w',pca_move.w));$/;"	v
td_td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_td_move   = dimReduce(td,setfield(pca_params,'w',pca_move.w));$/;"	v
td_td_prep	lib/TrialData/TrialData_tutorial.m	/^td_td_prep   = dimReduce(td_store,setfield(pca_params,'w',pca_prep.w));$/;"	v
td_td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_td_prep   = dimReduce(td,setfield(pca_params,'w',pca_prep.w));$/;"	v
td_temp	bumpcurl_script.m	/^            td_temp = td([act_idx pas_idx]);$/;"	v
td_test	lib/TrialData/td_limblab/coord_test.m	/^        td_test = addCoordPoint2TD(trial_data,struct('method',method{i},'point','hand','coord','/;"	v
td_true	lib/TrialData/td_limblab/coord_test.m	/^        td_true = addCylHand2TD(trial_data,method{i});$/;"	v
td_true	lib/TrialData/td_limblab/coord_test.m	/^        td_true = addSphereHand2TD(trial_data,method{i});$/;"	v
td_unav	plotBumpcurlTuning.m	/^td_unav = truncateAndBin(td,4,{'idx_bumpTime',0},{'idx_bumpTime',12});$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = binTD(td_wo,15);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = binTD(td_wo,5);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = getModel(td_wo,bl_linmodel);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = getModel(td_wo,bl_nnmodel);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = trimTD(td_wo,{'idx_bumpTime',0},{'idx_bumpTime',15});$/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^            temp = trial_data(trial).(signals{i,1});$/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^        temp = trial_data(trial).(signal);$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^        temp = cell(1,size(signals,1));$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp = cat(1,trial_data.(signals{i,1}));$/;"	v
temp	lib/TrialData/Analysis/runDPCA.m	/^        temp = varargin;$/;"	v
temp	lib/TrialData/Analysis/runDPCA.m	/^    temp = cat(dim,val{:});$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^        temp = [temp, trial_data(iTrial).([arrays '_spikes'])];$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^    temp = [];$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^            temp = temp';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = find(sig_data(idx(iSig)).data)';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = trial_data.(fn{iName});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^                temp = signal_info.(fn{i});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^temp = signal_info.type;$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp(int16(temp) > 0);$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp_text(iText,:);$/;"	v
temp	lib/TrialData/DataProcessing/processNSx.m	/^    temp = uint16(labels{i});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = t(temp);$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^        temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^        temp = trial_data(trial).(fn_spikes{iArray});$/;"	v
temp	lib/TrialData/Tools/centerSignals.m	/^        temp = getSig(trial_data(trial),signals(iSig,:));$/;"	v
temp	lib/TrialData/Tools/convBasisFunc.m	/^                        temp =  flipud(conv(flipud(data(:,i)),b(:,iFunc),'full'));$/;"	v
temp	lib/TrialData/Tools/convBasisFunc.m	/^                        temp = conv(data(:,i),b(:,iFunc),'full');$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = temp  - max_shift;$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = trial_data(trial).(fn_idx{k});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = trial_data(trial).(fn_time{k});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^        temp = trial_data(trial).(the_field);$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        temp = s; temp(~move_inds) = 0;$/;"	v
temp	lib/TrialData/Tools/getSigByTrial.m	/^    temp = cat(3,trial_data.(signals{iSig,1}));$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randi(n,[1,n]);$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randperm(length(return_idx));$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/reorderTDfields.m	/^    temp = trial_data(1).(fn{idx_idx(i)});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                            temp = td.(linked_fields{i});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                            temp = temp(idx);$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                        temp = NaN;$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = td.(fn_idx{i});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = td.(fn_time{i});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = temp(temp >= idx_start & temp < idx_end) - idx_start + 1;$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^            temp = temp';$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^        temp = interp1(1:size(temp,1),temp,linspace(1,size(temp,1),samples));$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^        temp = trial_data(trial).(time_vars{iVar});$/;"	v
temp	lib/TrialData/Tools/stripSpikeSorting.m	/^            temp = trial_data(trial).([fn_array{iArray} '_spikes']);$/;"	v
temp	lib/TrialData/Tools/trialAverage.m	/^    temp = cellfun(@(x) 1:length(x),cond_vals,'Uni',0);$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^                    temp = temp_padded;$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^            temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^            temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/Tools/upsampleTD.m	/^        temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/TrialData_tutorial.m	/^    temp = td_td_move(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/TrialData_tutorial.m	/^    temp = td_td_prep(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                temp = trial_data(bl_idx(iTrial)).vel;$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = [interp1(1:length(idx),temp(idx,1),linspace(1,length(idx),corr_samples))', ../;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = trial_data(iTrial).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = trial_data(iTrial).vel;$/;"	v
temp	lib/TrialData/td_limblab/getNeuronTuning.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/td_limblab/getRWMovements.m	/^                temp = td.(fn_time{i});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.emg.(fn{muscle});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.markers.(fn{entry});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.opensim.(fn{entry});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp = cds_bin.trials.(event_list{e});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp = temp(iTrial,:);$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^        temp = find(histcounts(all_events(:,i),t_bin));$/;"	v
temp	lib/TrialData/td_limblab/subspace_demo.m	/^    temp = td_td_move(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/td_limblab/subspace_demo.m	/^    temp = td_td_prep(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^                temp = str2num(temp);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^            temp = varargin{i};$/;"	v
temp	lib/TrialData/util/openNSx_td.m	/^        temp = inputArgument;$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = 2*temp.*temp;$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = filtfilt(bhigh,ahigh,double(data(data_idx,:)));$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = filtfilt(blow,alow,temp);$/;"	v
temp	lib/TrialData/util/process_lfp.m	/^        temp = mean(data_fft(idx_freq,:),1)';$/;"	v
temp	lib/TrialData/util/process_lfp.m	/^    temp              = filtfilt(B,A,data(data_idx,:));$/;"	v
temp	lib/TrialData/util/resample_signals.m	/^temp = resample(dataDetrend,P,Q);$/;"	v
temp	lib/TrialData/util/subfcn/get_vars.m	/^    temp = cat(1,trial_data.(signals{iSig,1}));$/;"	v
temp	plotBumpcurlTuning.m	/^    temp = cat(1,td_epoch.S1_spikes)\/0.15;$/;"	v
temp1	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp1 = temp1.\/repmat(max(rho),size(rho,1),1);$/;"	v
temp1	lib/TrialData/util/checkUnitGuides.m	/^    temp1 = varargin{i-1};$/;"	v
temp2	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp2 = -temp2.\/repmat(min(rho),size(rho,1),1);$/;"	v
temp2	lib/TrialData/util/checkUnitGuides.m	/^    temp2 = varargin{i}; $/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^    tempClassOrReason = uint8(tRawData(7,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^tempClassOrReason = [];$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = tRawData(9:10,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = typecast(tempDigiVals(:), 'uint16');$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = uint16(tRawData(9,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^tempDigiVals = [];$/;"	v
temp_adjust	lib/TrialData/Tools/binTD.m	/^            temp_adjust = zeros(size(temp));$/;"	v
temp_adjust	lib/TrialData/Tools/trimTD.m	/^                temp_adjust = zeros(size(temp));$/;"	v
temp_conv	lib/TrialData/Tools/convBasisFunc.m	/^            temp_conv = zeros(size(data,1),size(data,2)*size(b,2));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^                    temp_data = cat(1,trial_data(trial).(signals{iSig,1}));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^        temp_data = cat(1,td.(signals{i,1}));$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^                temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp_err = angleDiff(minusPi2Pi(trial_data(iTrial).target_direction), ...$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp_err = median(curvature(temp(t1:t2,:)));$/;"	v
temp_fr	lib/TrialData/Analysis/runDPCA.m	/^        temp_fr = cat(3,trial_data(all_trials).(signals{n,1}));$/;"	v
temp_fr	lib/TrialData/Analysis/runDPCA.m	/^        temp_fr = temp_fr(:,signals{n,2},:);$/;"	v
temp_guide	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                temp_guide = [temp_guide; ...$/;"	v
temp_guide	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_guide = [];$/;"	v
temp_idx	lib/TrialData/Tools/reorderTDfields.m	/^        temp_idx = strcmpi(fn_cont,fn_cont_new{i});$/;"	v
temp_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp_idx = ismember(array_alias(:,1),arrays{array});$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^                    temp_idx = intersect(artifacts,find(unit_index == iUnit));$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^            temp_idx = intersect(actual_spikes,find(unit_index == iUnit));$/;"	v
temp_idx	plotBumpcurlTuning.m	/^    temp_idx = 1:2:size(temp,1); % only index first bins$/;"	v
temp_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^    temp_label = which_label{1};$/;"	v
temp_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    temp_name = event_alias{alias_idx,2};$/;"	v
temp_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp_name = event_list{e};$/;"	v
temp_padded	lib/TrialData/Tools/trimTD.m	/^                    temp_padded = zeros(t_end,size(temp,2));$/;"	v
temp_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_params = params;$/;"	v
temp_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_params = signal_info{iFile}.params;$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                    temp_proj = temp_proj'; % that code uses dimensions as rows$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                temp_proj = (data - repmat(mu,size(data,1),1)) * w;$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                temp_proj = scores(count+1:count+N,:);$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = NaN(size(temp,1)+max_shift,size(temp,2)*(1+n_shifts));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = NaN(size(temp,1),size(temp,2)*(1+n_shifts));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = temp_shift(1:end-max_shift,:);$/;"	v
temp_text	lib/TrialData/DataProcessing/processNEV.m	/^        temp_text = reshape( ...$/;"	v
temp_us	lib/TrialData/Tools/upsampleTD.m	/^        temp_us = zeros(size(temp,1)*upsample_factor,size(temp,2));$/;"	v
test	lib/TrialData/td_limblab/coord_test.m	/^        test = getSig(td_test,'cyl_hand_pos');$/;"	v
test	lib/TrialData/td_limblab/coord_test.m	/^        test = getSig(td_test,'sph_hand_pos');$/;"	v
testMask	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    testMask = false(1, N);$/;"	v
testTrialIdx	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    testTrialIdx  = tr(testMask);$/;"	v
test_idx	lib/TrialData/TrialData_tutorial.m	/^test_idx = 1:10;$/;"	v
tgt_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^tgt_idx = cellfun(@(x) getTDidx(trial_data,condition,x),num2cell(unique([trial_data.(condition)]/;"	v
tgt_pos	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    tgt_pos = trial_data(i).(target_pos_name);$/;"	v
tgt_pos	lib/TrialData/td_limblab/getTargetDirection.m	/^    tgt_pos = repmat([reach_distance*cos(trial_data(i).target_direction), reach_distance*sin(tri/;"	v
the_field	lib/TrialData/Tools/dupeAndShift.m	/^        the_field  = signals{j};$/;"	v
the_shifts	lib/TrialData/Tools/dupeAndShift.m	/^        the_shifts = all_shifts{j};$/;"	v
the_shifts_new	lib/TrialData/Tools/dupeAndShift.m	/^            the_shifts_new  = sort(-the_shifts);$/;"	v
the_val	lib/TrialData/Tools/reorderTDfields.m	/^        the_val = shift_idx;$/;"	v
theta	lib/TrialData/td_limblab/getLearningMetrics.m	/^                theta = [bl_trials.target_direction];$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = minusPi2Pi(theta);$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = round(theta.\/angle_bin_size).*angle_bin_size;$/;"	v
theta	lib/TrialData/util/compute_pseudo_R2.m	/^    theta = var(Y).\/mean(Y);$/;"	v
theta	plotBumpcurlTuning.m	/^        theta = linspace(-pi,pi,100);$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = 1e-10;$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = options.lambda(margNums(i));$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = options.lambda;$/;"	v
thisMarg	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisMarg = [];$/;"	v
thisMarg	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisMarg = options.whichMarg(cc);$/;"	v
thisVar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisVar = [];$/;"	v
thisVar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisVar = options.explainedVar.componentVar(cc);$/;"	v
thisYlim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisYlim = options.ylims(options.whichMarg(cc));$/;"	v
thisYlim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisYlim = options.ylims;$/;"	v
thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                thresh = absolute_acc_thresh;$/;"	v
thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                thresh = ds(mvt_peak)\/peak_divisor; % Threshold is max of acceleration peak div/;"	v
time	lib/TrialData/Analysis/runDPCA.m	/^time            = (1:T)*trial_data(1).bin_size;$/;"	v
time	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    time = 1:size(data, ndims(data));$/;"	v
timeSplitsBeg	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    timeSplitsBeg = [1 options.timeSplits];$/;"	v
timeSplitsEnd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    timeSplitsEnd = [options.timeSplits-1 size(X, length(size(X)))];$/;"	v
time_cols	lib/TrialData/Plotting/visData.m	/^time_cols          =   3;        % how many columns for time-variable plots$/;"	v
time_event_exc_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    time_event_exc_idx = time_event_exc_idx | contains(fn,time_event_exceptions{exc});$/;"	v
time_event_exc_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_event_exc_idx = false(size(fn));$/;"	v
time_event_exceptions	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_event_exceptions = {'ctrHold'};$/;"	v
time_events	lib/TrialData/Analysis/runDPCA.m	/^time_events     = 1;$/;"	v
time_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_events = union({'startTime','endTime'},extra_time_events);$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = 0;$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = pos_cols;$/;"	v
time_vars	lib/TrialData/Tools/stretchSignals.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_vars	lib/TrialData/Tools/trialAverage.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_window	lib/TrialData/td_limblab/getLearningMetrics.m	/^time_window = {'idx_movement_on',0; 'idx_peak_speed',0};$/;"	v
timestamps	lib/TrialData/util/remove_spike_artifacts.m	/^    timestamps = double(unit_structure.Data.Spikes.TimeStamp)';$/;"	v
timevec	bumpcurl_script.m	/^                timevec = ((1:size(spikes,2))-td_temp(trialnum).idx_movement_on)*td_temp(trialnu/;"	v
timevec	bumpcurl_script.m	/^            timevec = ((1:length(td(trial).vel_norm))-td(trial).idx_movement_on)*td(trial).bin_s/;"	v
timevec	lib/TrialData/Tools/joinTrials.m	/^        timevec = trial_data(trialnum).(fn_time{1});$/;"	v
tmp	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^        tmp = randperm(neuronsConditions(i), 2);$/;"	v
tmp	lib/TrialData/util/lib/isomap/IsomapII.m	/^         tmp = zeros(10,N); $/;"	v
toDisplayMargNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        toDisplayMargNames = 1;$/;"	v
toDisplayMargNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^toDisplayMargNames = 0;$/;"	v
toFlip	lib/TrialData/td_limblab/td_dpca/dpca.m	/^toFlip = find(sum(sign(V))<0);$/;"	v
toKeep	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        toKeep = [toKeep components(order(1:nc))];$/;"	v
toKeep	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    toKeep = [];$/;"	v
toSkip	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                        toSkip = 1;$/;"	v
toSkip	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^            toSkip = 0;$/;"	v
tol	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tol = 1e-6;$/;"	v
tol	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  tol        = 1e-8; $/;"	v
top	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    top = pos(2)+pos(4);$/;"	v
totalVar	lib/TrialData/td_limblab/td_dpca/dpca.m	/^totalVar = sum(X(:).^2);$/;"	v
tr	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    tr            = randperm(N);$/;"	v
trFFT	lib/TrialData/util/process_lfp.m	/^function [data_fft,freq,window_centers]=trFFT( ...$/;"	f
trackingPacketID	lib/TrialData/util/openNEV_td.m	/^trackingPacketID = 65533;$/;"	v
trackingPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^trackingPacketIDIndices    = find(PacketIDs == trackingPacketID);$/;"	v
trainMask	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    trainMask = ~testMask;$/;"	v
trainTrialIdx	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    trainTrialIdx = tr(trainMask);$/;"	v
train_func	lib/TrialData/Analysis/getModel.m	/^train_func           =  'trainlm'; % training function for neural net$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^    train_idx = getTDidx(trial_data,train_idx{:});$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^train_idx     =  1:length(trial_data);$/;"	v
train_idx	lib/TrialData/TrialData_tutorial.m	/^train_idx = 11:length(td);$/;"	v
train_kalman	lib/TrialData/util/train_kalman.m	/^function kf_model = train_kalman(X,Y,Z)$/;"	f
traj_rows	lib/TrialData/Plotting/visData.m	/^traj_rows          =   3;        % how many rows for time-varying trajectory plots$/;"	v
trial	lib/TrialData/Plotting/visData.m	/^    trial = trials_to_plot(tr_idx); % Use tr_num from here down$/;"	v
trialAverage	lib/TrialData/Tools/trialAverage.m	/^function [avg_data,cond_idx] = trialAverage(trial_data, params)$/;"	f
trial_colors	bumpcurl_tensors.m	/^        trial_colors = dir_colors(dir_idx,:);$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_data = trimTD(trial_data,trim_idx(1,:),trim_idx(2,:));$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/evalModel.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getModel.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getNoiseCovar.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getNoiseCovar.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/getPotentSpace.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_data  =  trial_data(trial_idx);$/;"	v
trial_data	lib/TrialData/Analysis/runDPCA.m	/^trial_data     =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/runGPFA.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^            trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^    trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = rmfield(trial_data,t_fn);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = trim_time(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^                trial_data = f(trial_data,funcCall{2:end});$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^        trial_data = f(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/addCorrelatedNoise.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/addFiringRates.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/binTD.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/centerSignals.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/convBasisFunc.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/convBasisFunc.m	/^trial_data = reorderTDfields(trial_data);/;"	v
trial_data	lib/TrialData/Tools/dimReduce.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/dupeAndShift.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/dupeAndShift.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getCommonUnits.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getDifferential.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getDifferential.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getEnvelope.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getLFPidx.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getNorm.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getSig.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getSigByTrial.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getTDfields.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^        trial_data = trial_data';$/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^trial_data = trial_data(return_idx);$/;"	v
trial_data	lib/TrialData/Tools/joinTrials.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadNeurons.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadTrials.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadTrials.m	/^trial_data = trial_data(~bad_idx);/;"	v
trial_data	lib/TrialData/Tools/reorderTDfields.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/reorderTDfields.m	/^trial_data = orderfields(trial_data,master_idx);$/;"	v
trial_data	lib/TrialData/Tools/smoothSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/softNormalize.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/splitTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/sqrtTransform.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/stretchSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/stripSpikeSorting.m	/^    trial_data = rmfield(trial_data,'temp_spikes');$/;"	v
trial_data	lib/TrialData/Tools/stripSpikeSorting.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/subtractConditionMean.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/trialAverage.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/trimTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/upsampleTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/zscoreSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = binTD(trial_data,5);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = getMoveOnsetAndPeak(trial_data, params);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = getSpeed(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = removeBadNeurons(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = trialAverage(trial_data_pca, 'target_direction');$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = trial_data(~isnan([trial_data.target_direction]));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','marker_vel','alias','marker_ac/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','markers','alias','marker_vel')/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','marker_vel'));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','markers'));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    trial_data = addProcessedSignal(trial_data,struct('in_signals',{{cart_names{postfix_ctr},poi/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/getRWTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/getTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = repmat(struct(),1,length(idx_trials));$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = trial_data(~cellfun(@isempty,{trial_data.(fn{1})}));$/;"	v
trial_data	lib/TrialData/td_limblab/subspace_demo.m	/^trial_data = smoothSignals(trial_data,struct( ...$/;"	v
trial_data_butter	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_butter= parseFileByTrial(cds);$/;"	v
trial_data_cell	bumpcurl_script.m	/^    trial_data_cell = cell(1,length(filenames));$/;"	v
trial_data_events	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_events = getTDfields(trial_data, 'idx');$/;"	v
trial_data_movement	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_movement = trimTD(trial_data, {'idx_movement_on', 0}, {'idx_movement_on', 6});$/;"	v
trial_data_noBumps	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_noBumps = removeBadTrials(trial_data);$/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = getPCA(trial_data_movement, paramPCA); $/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = removeBadNeurons(trial_data_pca);$/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = smoothSignals(trial_data_pca, struct('signals', 'S1_pca'));$/;"	v
trial_data_premovement	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_premovement = trimTD(trial_data, {'idx_movement_on', -5}, {'idx_movement_on', -2});$/;"	v
trial_data_ts	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_ts = parseFileByTrial(cds, paramsCDS);$/;"	v
trial_dirs	bumpcurl_tensors.m	/^        trial_dirs = cat(1,td.target_direction);$/;"	v
trial_event_colors	lib/TrialData/Plotting/visData.m	/^trial_event_colors =   parula(size(event_db,1)); % use default matlab colors$/;"	v
trial_idx	lib/TrialData/Analysis/evalModel.m	/^trial_idx        =  [1 length(trial_data)];$/;"	v
trial_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_idx        =  1:length(trial_data);$/;"	v
trial_nbrs	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_nbrs    	= randperm(min(nbr_trials),2);$/;"	v
trial_num	bumpcurl_analysis.m	/^    trial_num = eval_params.trial_idx(1:end-1);$/;"	v
trial_results	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_results  =  {'R'};$/;"	v
trials	lib/TrialData/Analysis/evalModel.m	/^        trials = trial_idx(i):trial_idx(i+1)-1;$/;"	v
trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^trials = cds.trials;$/;"	v
trialsToKeep	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    trialsToKeep = ([seq.T] > 0);$/;"	v
trials_to_plot	lib/TrialData/Plotting/visData.m	/^trials_to_plot    =   1;$/;"	v
trig_ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            trig_ts = find([0; diff(data > trigger_thresh) > 0])\/sig_data(count/;"	v
trigger_thresh	lib/TrialData/DataProcessing/convertDataToTD.m	/^trigger_thresh  =  1;     % to identify time$/;"	v
trimTD	lib/TrialData/Tools/trimTD.m	/^function trial_data = trimTD(trial_data,varargin)$/;"	f
trim_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^trim_idx        =  {};   % can trim data in here {'idx',val;'idx',val}$/;"	v
trim_idx	lib/TrialData/Analysis/getPotentSpace.m	/^trim_idx           =  {};     % can trim in Machens method ONLY$/;"	v
trim_time	lib/TrialData/DataProcessing/convertDataToTD.m	/^function trial_data = trim_time(trial_data)$/;"	f
true_neur_num	bumpcurl_analysis.m	/^            true_neur_num = num_neurons*(fignum-1)+neuron_ctr;$/;"	v
truth	lib/TrialData/td_limblab/coord_test.m	/^        truth = getSig(td_true,'cyl_hand_pos');$/;"	v
truth	lib/TrialData/td_limblab/coord_test.m	/^        truth = getSig(td_true,'sphere_hand_pos');$/;"	v
ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^    ts = units{unit_idx(unit)};$/;"	v
ts	lib/TrialData/td_limblab/parseFileByTrial.m	/^    ts = units(unit_idx(unit)).spikes.ts;$/;"	v
twoStageEngine_td	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^function result = twoStageEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
twod	lib/TrialData/util/lib/isomap/IsomapII.m	/^     twod = find(dims==2); $/;"	v
twod	lib/TrialData/util/lib/isomap/isomap.m	/^     twod = find(dims==2); $/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^            tx = tx(tx<end_time);$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^            tx = tx(tx>start_time);$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = [start_time; tx];$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = [tx;end_time];$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = data.t;$/;"	v
tx	lib/TrialData/util/resample_signals.m	/^    tx = tx';$/;"	v
typ	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  typ        = 'fa';$/;"	v
typ	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^typ           = 'fa';$/;"	v
u	lib/TrialData/Analysis/pairwiseCorr.m	/^u = unique(c);$/;"	v
u	lib/TrialData/Analysis/runDPCA.m	/^            u = num2cell(unique([trial_data.(varargin{i})]));$/;"	v
u	lib/TrialData/Analysis/runDPCA.m	/^            u = unique({trial_data.(varargin{i})});$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique([trial_data(cond_idx{trial}).(fn_meta{f})]);$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique(cat(1,trial_data(cond_idx{trial}).(fn_meta{f})),'rows');$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^            u = unique({trial_data(cond_idx{trial}).(fn_meta{f})});$/;"	v
ubumpDirs	lib/estimateBumpFromPCA.m	/^ubumpDirs = sort(unique([td.bumpDir]));$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = num2cell(unique([trial_data.(conditions{iCond})]));$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = unique({trial_data.(conditions{iCond})});$/;"	v
ul	lib/TrialData/util/circular_mean.m	/^  ul = mu + t;$/;"	v
uni	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        uni = unique(options.whichMarg);$/;"	v
unique_bin_sizes	lib/TrialData/util/subfcn/check_td_quality.m	/^    unique_bin_sizes = unique([trial_data.bin_size]);$/;"	v
unit_ids	bumpcurl_script.m	/^            unit_ids = td(1).([arrayname '_unit_guide']);$/;"	v
unit_ids	bumpcurl_script.m	/^        unit_ids = td(1).([arrayname '_unit_guide']);$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx & NEV.Data.Spikes.Unit == found_units(iUnit);$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx;$/;"	v
unit_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    unit_idx = cell(1,length(arrays));$/;"	v
unit_structure	lib/TrialData/util/remove_spike_artifacts.m	/^    unit_structure = varargin{1};$/;"	v
unsorted_units	bumpcurl_script.m	/^        unsorted_units = (unit_ids(:,2)==0);$/;"	v
upp	bumpcurl_script.m	/^                upp = tinv(1-alpha\/2,num_folds*num_repeats-1);$/;"	v
upsampleTD	lib/TrialData/Tools/upsampleTD.m	/^function trial_data = upsampleTD(trial_data,params)$/;"	f
upsample_factor	lib/TrialData/Tools/upsampleTD.m	/^        upsample_factor = params;$/;"	v
upsample_factor	lib/TrialData/Tools/upsampleTD.m	/^upsample_factor = 2;$/;"	v
useColor	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    useColor = [ linspace(1,0,floor(min(length(seq),nPlotMax)\/2))', linspace(0,1,floor(min(leng/;"	v
useColor	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^useColor = 0.2 * [1 1 1]; % gray$/;"	v
useRad	lib/TrialData/util/angleDiff.m	/^        useRad = true;$/;"	v
useSqrt	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  useSqrt = true;$/;"	v
use_array_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    use_array_name = array_alias{temp_idx,2};$/;"	v
use_array_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            use_array_name = arrays{array};$/;"	v
use_bl_ref	lib/TrialData/td_limblab/getLearningMetrics.m	/^use_bl_ref = true;$/;"	v
use_dijk	lib/TrialData/util/lib/isomap/IsomapII.m	/^use_dijk = options.dijkstra;$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/getNoiseCovar.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^use_trials   =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/addCorrelatedNoise.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/centerSignals.m	/^    use_trials = 1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/centerSignals.m	/^use_trials   =  [];$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^            use_trials = trial_idx;$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^use_trials      =  1:length(trial_data);$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = inputArgument;$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^            userRequestedChannels = NSx.MetaTags.ChannelID(userRequestedChanRow);$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^        userRequestedChannels = NSx.MetaTags.ChannelID;$/;"	v
usincos	lib/TrialData/td_limblab/getLearningMetrics.m	/^                usincos = [sin(utheta'*(1:num_freqs)) cos(utheta'*(1:num_freqs))];$/;"	v
utheta	lib/TrialData/td_limblab/getLearningMetrics.m	/^utheta = unique([trial_data.target_direction]);$/;"	v
utheta	lib/TrialData/util/bin_angles.m	/^    utheta = unique(theta);$/;"	v
v	lib/TrialData/Tools/reorderTDfields.m	/^v = zeros(1,length(idx_idx));$/;"	v
vaf_s	lib/TrialData/TrialData_tutorial.m	/^vaf_s = compute_vaf(y_sp,y_sp_pred);$/;"	v
vaf_x	lib/TrialData/TrialData_tutorial.m	/^vaf_x = compute_vaf(x_vel,x_vel_pred);$/;"	v
vaf_y	lib/TrialData/TrialData_tutorial.m	/^vaf_y = compute_vaf(y_vel,y_vel_pred);$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^            val = [val,length(intersect(varargin{i:i+1}))];$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = [val,length(varargin{1})];$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = cat(3,val{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = loop_me_twice(length(size(val{1})),[],val,valIdx,0,idx_vals{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = loops_all_the_way_down(val,temp{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^    val = [val {fr'}];$/;"	v
val	lib/TrialData/util/lib/isomap/IsomapII.m	/^     val = beta.^(1\/2); $/;"	v
val	lib/TrialData/util/lib/isomap/IsomapII.m	/^val = real(diag(val(sorth,sorth))); $/;"	v
val	lib/TrialData/util/lib/isomap/isomap.m	/^val = real(diag(val(sorth,sorth))); $/;"	v
valCat	lib/TrialData/Analysis/runDPCA.m	/^        valCat = loop_me_twice(dim+1,valCat,val(p),valIdx(:,p),depthCount,varargin{2:end});$/;"	v
valCat	lib/TrialData/Analysis/runDPCA.m	/^    valCat = cat(dim+1,temp,valCat);$/;"	v
valIdx	lib/TrialData/Analysis/runDPCA.m	/^    valIdx = [valIdx, depthCount];$/;"	v
varFloor	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  varFloor = minVarFrac * diag(cX);  $/;"	v
var_corrs	bumpcurl_script.m	/^                var_corrs = var(session_corrs{:,cols});$/;"	v
varargin	lib/TrialData/DataProcessing/initSignalStruct.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/appendTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/catTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/dupeAndShift.m	/^            varargin = varargin(1:end-1);$/;"	v
varargin	lib/TrialData/Tools/dupeAndShift.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/getTDidx.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/util/checkUnitGuides.m	/^    varargin = varargin{1};$/;"	v
vars	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^vars  = who;$/;"	v
vars	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^vars  = who;$/;"	v
vars	lib/TrialData/util/assignParams.m	/^vars = fieldnames(params);$/;"	v
vec	lib/TrialData/util/lib/isomap/IsomapII.m	/^     vec = subB*alpha*inv(val); $/;"	v
vec	lib/TrialData/util/lib/isomap/IsomapII.m	/^vec = vec(:,sorth); $/;"	v
vec	lib/TrialData/util/lib/isomap/isomap.m	/^vec = vec(:,sorth); $/;"	v
vel_or_pos	lib/TrialData/td_limblab/getLearningMetrics.m	/^vel_or_pos = 'vel';$/;"	v
velocity	lib/TrialData/td_limblab/BBDemoScript.m	/^velocity = get_vars(trial_data_movement, {'vel',1:2});$/;"	v
velocity2	lib/TrialData/td_limblab/BBDemoScript.m	/^velocity2 = cat(1, trial_data_movement.vel);$/;"	v
verbose	lib/TrialData/Analysis/estimateDimensionality.m	/^verbose         =  false;$/;"	v
verbose	lib/TrialData/Analysis/evalModel.m	/^verbose          =  false;$/;"	v
verbose	lib/TrialData/Analysis/getModel.m	/^verbose              =  false;$/;"	v
verbose	lib/TrialData/Analysis/getNoiseCovar.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Analysis/getPotentSpace.m	/^verbose            =  false;$/;"	v
verbose	lib/TrialData/Analysis/pairwiseCorr.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Analysis/runDPCA.m	/^verbose        =  false;$/;"	v
verbose	lib/TrialData/Analysis/runGPFA.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/DataProcessing/convertDataToTD.m	/^verbose         = false;$/;"	v
verbose	lib/TrialData/Plotting/visData.m	/^verbose           =    false;$/;"	v
verbose	lib/TrialData/Tools/addCorrelatedNoise.m	/^verbose         = false;$/;"	v
verbose	lib/TrialData/Tools/addFiringRates.m	/^verbose       = false;$/;"	v
verbose	lib/TrialData/Tools/centerSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/convBasisFunc.m	/^verbose       =  false;$/;"	v
verbose	lib/TrialData/Tools/dimReduce.m	/^verbose           = false;$/;"	v
verbose	lib/TrialData/Tools/getDifferential.m	/^verbose  =  false;$/;"	v
verbose	lib/TrialData/Tools/getEnvelope.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^verbose             = false;$/;"	v
verbose	lib/TrialData/Tools/getNorm.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/joinTrials.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/removeBadNeurons.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/removeBadTrials.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/smoothSignals.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/softNormalize.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/splitTD.m	/^verbose            =  false;$/;"	v
verbose	lib/TrialData/Tools/sqrtTransform.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/stretchSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/subtractConditionMean.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/trialAverage.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/trimTD.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/zscoreSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  verbose    = false;$/;"	v
verbose	lib/TrialData/util/lib/isomap/IsomapII.m	/^verbose = options.verbose; $/;"	v
verbose	lib/TrialData/util/lib/isomap/isomap.m	/^verbose = options.verbose; $/;"	v
videoSyncPacketID	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketID = 65534;$/;"	v
videoSyncPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketIDIndices   = find(PacketIDs == videoSyncPacketID);$/;"	v
visData	lib/TrialData/Plotting/visData.m	/^function [ ] = visData( trial_data, params )$/;"	f
w	lib/TrialData/Tools/dimReduce.m	/^            w = iso_info;$/;"	v
w	lib/TrialData/Tools/dimReduce.m	/^w                 = [];     % w is used to know if params was info_out (e.g. whether to recomput/;"	v
w	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^w = [.95 .95 .95];       %# middle$/;"	v
w	lib/TrialData/util/circular_mean.m	/^	w = ones(size(alpha));$/;"	v
w_in	lib/TrialData/Analysis/getPotentSpace.m	/^w_in = pca_info_in.w;$/;"	v
w_out	lib/TrialData/Analysis/getPotentSpace.m	/^w_out = pca_info_out.w;$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = [whichMarg i*ones(1, nc)];$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = margNums(whichMarg);$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = whichMarg(order(1:L));$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = whichMarg(toKeep);$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^whichMarg = [];$/;"	v
which_field	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_field      = {'vel_norm',1};$/;"	v
which_file	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_file    = signal_info{iFile}.filename;$/;"	v
which_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_label = signal_info{iFile}.label{iSig};$/;"	v
which_marg	lib/TrialData/Analysis/runDPCA.m	/^which_marg = [];$/;"	v
which_method	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_method     =  'peak';$/;"	v
which_method	lib/TrialData/util/compute_r2.m	/^    which_method = 'corr';$/;"	v
which_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^which_metric = 'angle';$/;"	v
which_name	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_name = signal_info{iFile}.name{iSig};$/;"	v
which_operation	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_operation = signal_info{iFile}.operation{iSig};$/;"	v
which_routine	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_routine = signal_info{iFile}.routine;$/;"	v
which_type	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_type = signal_info{iFile}.type{iSig};$/;"	v
width	lib/TrialData/Tools/dimReduce.m	/^width             = 0.05;   %   gaussian kernel s.d. for smoothing$/;"	v
width	lib/TrialData/Tools/smoothSignals.m	/^    width = params.kernel_SD;$/;"	v
width	lib/TrialData/Tools/smoothSignals.m	/^width           =  0.05;$/;"	v
win	lib/TrialData/td_limblab/getNeuronTuning.m	/^win        =  params.window;$/;"	v
win_func	lib/TrialData/util/process_lfp.m	/^win_func =  win_func.\/norm(win_func);$/;"	v
win_func	lib/TrialData/util/process_lfp.m	/^win_func = fft_win_fun(fft_window_size);$/;"	v
window_centers	lib/TrialData/util/process_lfp.m	/^window_centers = cat(2, ...$/;"	v
window_centers	lib/TrialData/util/process_lfp.m	/^window_centers = window_size:step:size(data,1);$/;"	v
wo_color	plotBumpcurlTuning.m	/^wo_color = colormap('winter');$/;"	v
wo_dir	bumpcurl_analysis.m	/^    wo_dir = atan2(wo_vel(:,2),wo_vel(:,1));$/;"	v
wo_dir_lmpred	bumpcurl_analysis.m	/^    wo_dir_lmpred = atan2(wo_lmvel_pred(:,2),wo_lmvel_pred(:,1));$/;"	v
wo_dir_nnpred	bumpcurl_analysis.m	/^    wo_dir_nnpred = atan2(wo_nnvel_pred(:,2),wo_nnvel_pred(:,1));$/;"	v
wo_eval	bumpcurl_analysis.m	/^    wo_eval = evalModel(td_wo,eval_params);$/;"	v
wo_idx	bumpcurl_analysis.m	/^    wo_idx = getTDidx(td,'epoch','WO');$/;"	v
wo_idx	exploreData.m	/^wo_idx = getTDidx(td,'epoch','WO');$/;"	v
wo_idx	plotBumpcurlTuning.m	/^wo_idx = floor(linspace(1,length(wo_color),3));$/;"	v
wo_lmvel_pred	bumpcurl_analysis.m	/^    wo_lmvel_pred = cat(1,td_wo.linmodel_vel_from_spikes);$/;"	v
wo_nnvel_pred	bumpcurl_analysis.m	/^    wo_nnvel_pred = cat(1,td_wo.nn_vel_from_spikes);$/;"	v
wo_vel	bumpcurl_analysis.m	/^    wo_vel = cat(1,td_wo.vel);$/;"	v
wrap_func	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    wrap_func = @cart2pol_wrap;$/;"	v
wrap_func	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    wrap_func = @cart2sph_wrap;$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^        x  = get_vars(trial_data(trial),in_signals);$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^    x = get_vars(trial_data(train_idx),in_signals);$/;"	v
x	lib/TrialData/Analysis/getPotentSpace.m	/^    x = score_in(:,1:in_dims);$/;"	v
x	lib/TrialData/td_limblab/parseFileByTrial.m	/^        x = data.(var_list{var});$/;"	v
x	lib/TrialData/util/subfcn/get_vars.m	/^x = zeros(size(cat(1,trial_data.(signals{1,1})),1),sum(cellfun(@(x) length(x),idx)));$/;"	v
x	lib/curvature.m	/^    x = c(:,1);$/;"	v
x	lib/curvature.m	/^    x = varargin{1};$/;"	v
xDim	lib/TrialData/Analysis/runGPFA.m	/^xDim        =  8;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^xDim          = 8;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/util/orthogonalize.m	/^  xDim = size(L, 2);$/;"	v
x_center	lib/TrialData/Plotting/visData.m	/^    x_center = target_distance*cos(trial_data(trial).target_direction);$/;"	v
x_vel	lib/TrialData/TrialData_tutorial.m	/^x_vel = getSig(td(test_idx),{'vel',1});$/;"	v
x_vel_pred	lib/TrialData/TrialData_tutorial.m	/^x_vel_pred = getSig(td(test_idx),{'linmodel_vel',1});$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^            xdetrend = xdetrend(tx<end_time);$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^            xdetrend = xdetrend(tx>start_time);$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = [xdetrend(1,:); xdetrend];$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = [xdetrend; xdetrend(end,:)];$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = x - polyval(a,tx);$/;"	v
xvals	bumpcurl_script.m	/^    xvals = [2 5 8]\/10;$/;"	v
xx	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        xx = xlim;$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^        y = get_vars(trial_data(trials),out_signals);$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^    y = getSig(trial_data(trial_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getModel.m	/^        y  = get_vars(trial_data(trial),out_signals);$/;"	v
y	lib/TrialData/Analysis/getModel.m	/^    y = get_vars(trial_data(train_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getPotentSpace.m	/^    y = score_out(:,1:out_dims);$/;"	v
y	lib/curvature.m	/^    y = c(:,2);$/;"	v
y	lib/curvature.m	/^    y = varargin{2};$/;"	v
yAll	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^yAll             = [seqTrainCut.y];$/;"	v
yAll	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    yAll = [seqTrain.y];$/;"	v
yDim	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    yDim = size(dat(n).spikes, 1);$/;"	v
yDim	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    yDim  = size(yAll, 1);$/;"	v
y_center	lib/TrialData/Plotting/visData.m	/^    y_center = target_distance*sin(trial_data(trial).target_direction);$/;"	v
y_fit	lib/TrialData/Analysis/evalModel.m	/^y_fit = varargin{2};$/;"	v
y_fit2	lib/TrialData/Analysis/evalModel.m	/^    y_fit2 = varargin{3};$/;"	v
y_sp	lib/TrialData/TrialData_tutorial.m	/^y_sp = getSig(td(test_idx),'speed');$/;"	v
y_sp_pred	lib/TrialData/TrialData_tutorial.m	/^y_sp_pred = getSig(td(test_idx),{'linmodel_vel',3});$/;"	v
y_test	lib/TrialData/Analysis/evalModel.m	/^y_test         = varargin{1};$/;"	v
y_vel	lib/TrialData/TrialData_tutorial.m	/^y_vel = getSig(td(test_idx),{'vel',2});$/;"	v
y_vel_pred	lib/TrialData/TrialData_tutorial.m	/^y_vel_pred = getSig(td(test_idx),{'linmodel_vel',2});$/;"	v
ydetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    ydetrend = ydetrend(1:end-1);$/;"	v
ydetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    ydetrend = ydetrend(2:end);$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^                yfit = net(x')';$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = net(x')';$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = predict_kalman(kf_model,x,y(1,:),zeros(size(y,2)));$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = zeros(size(y));$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^        yfit = zeros(size(x,1),size(b,2));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^        yhat1 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{1}]));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^    yhat1 = getSig(trial_data(trial_idx),[td_fn_prefix '_' model_name{1}]);$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^            yhat2 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{2}]));$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^        yhat2 = cat(1,trial_data(trial_idx).([td_fn_prefix '_' model_name{2}]));$/;"	v
yposs	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    yposs = [0.9 0.65 0.45 0.25];$/;"	v
yrnge	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^yrnge = nlin(hpeaks+b);        % nonlinearly transformed first & last bumps$/;"	v
yvals	bumpcurl_script.m	/^                yvals = mean(session_corrs{:,cols});$/;"	v
yy	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        yy = ylim;$/;"	v
zero_pad	lib/TrialData/Tools/trimTD.m	/^zero_pad = false;$/;"	v
zscoreSignals	lib/TrialData/Tools/zscoreSignals.m	/^function trial_data = zscoreSignals(trial_data,params)$/;"	f
~FibHeap	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeap::~FibHeap()$/;"	f	class:FibHeap
~FibHeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode::~FibHeapNode()$/;"	f	class:FibHeapNode
