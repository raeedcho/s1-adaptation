!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/raeed/codebase/limblab/s1-adaptation/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/e053bcd0/
.banner	lib/tensor_toolbox/doc/html/ttb.css	/^.banner{ background-color:#15243c; text-align:center;}$/;"	c
.content	lib/tensor_toolbox/doc/html/ttb.css	/^.content { font-size:1.2em; line-height:140%; padding: 20px; }$/;"	c
.footer	lib/tensor_toolbox/doc/html/ttb.css	/^.footer { width:auto; padding:10px 0px; margin:25px 0px 0px; border-top:1px dotted #878787; font/;"	c
.footer a	lib/tensor_toolbox/doc/html/ttb.css	/^.footer a { color:#878787; }$/;"	s
.footer a:hover	lib/tensor_toolbox/doc/html/ttb.css	/^.footer a:hover { color:#878787; text-decoration:underline; }$/;"	s
.footer a:visited	lib/tensor_toolbox/doc/html/ttb.css	/^.footer a:visited { color:#878787; }$/;"	s
.footer p	lib/tensor_toolbox/doc/html/ttb.css	/^.footer p { margin:0px; }$/;"	s
.portrait	lib/tensor_toolbox/doc/html/ttb.css	/^.portrait {$/;"	c
1	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Collapsing and scaling tensors<\/h1><!--introd/;"	I
1	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for CANDECOMP\/PARAF/;"	I
1	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating Poisson Regression for fitting CP /;"	I
1	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating randomized least squares for CP De/;"	I
1	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	I
1	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	I
1	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	I
1	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	I
1	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^  <\/style><\/head><body><div class="content"><h1>GCP-OPT Examples with Amino Acids Dataset<\/h1/;"	I
1	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
1	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Function Types for GCP<\/h1><!--introduction--/;"	I
1	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	I
1	lib/tensor_toolbox/doc/html/identities_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Identities and relationships of tensors<\/h1></;"	I
1	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Kruskal tensors<\/h1><!--introduction--><p>Kru/;"	I
1	lib/tensor_toolbox/doc/html/multiply_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Multiplying tensors<\/h1><!--introduction--><!/;"	I
1	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generating the leading mode-n vectors<\/h1><!-/;"	I
1	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting sparse tensors to matrices and vice/;"	I
1	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sparse tensors<\/h1><!--introduction--><p>MATL/;"	I
1	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Shifted symmetric higher-order power method<\//;"	I
1	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sums of structured tensors<\/h1><!--introducti/;"	I
1	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric Kruskal tensors<\/h1><!--introductio/;"	I
1	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric tensors<\/h1><!--introduction--><p>A/;"	I
1	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting a tensor to a matrix and vice versa/;"	I
1	lib/tensor_toolbox/doc/html/tensor_doc.html	/^  <\/head><body><div class="content"><h1>Tensors<\/h1><!--introduction--><p>Tensors are extensio/;"	I
1	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Creating test problems and initial guesses<\/h/;"	I
1	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Tucker tensors<\/h1><!--introduction--><p>Tuck/;"	I
1	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for Tucker model<\/h/;"	I
10	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="10">Changing the output frequency<\/h2><p>Using the <tt>'printitn'<\/tt> option t/;"	I
10	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="10">Terminating once a desired fit is achieved<\/h2><p>If we know the noise level/;"	I
10	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="10">Call the <tt>cp_wopt<\/tt> method<\/h2><pre class="codeinput">[M,~,output] = /;"	I
10	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="10">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to cons/;"	I
10	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="10">Beta (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	I
10	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="10">Constituent parts of a sptensor<\/h2><pre class="codeinput">X = sptenrand([40/;"	I
10	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="10">Use innerprod to compute the inner product of a sumtensor<\/h2><p>The <tt>inn/;"	I
10	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="10">Use full to convert a symktensor to a tensor<\/h2><p>The function <tt>full<\//;"	I
10	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="10">Creating a tensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	I
10	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="10">Use full or tensor to convert a ttensor to a tensor<\/h2><pre class="codeinpu/;"	I
11	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="11">Suppress all output<\/h2><p>Set <tt>'printitn'<\/tt> to zero to suppress all /;"	I
11	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="11">Changing the number of function evaluation samples<\/h2><p>The function evalu/;"	I
11	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="11">Check the output<\/h2><pre class="codeinput">exitmsg = output.ExitMsg$/;"	I
11	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="11">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_o/;"	I
11	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="11">Specify the ranks<\/h2><p>If you know the rank  you want, you can specify it./;"	I
11	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="11">Use double to convert a ktensor to a multidimensional array<\/h2><pre class="/;"	I
11	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^<\/pre><h2 id="11">Using nvecs for the HOSVD<\/h2><pre class="codeinput">X = tenrand([4 3 2]) <s/;"	I
11	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="11">Constituent parts of a sptenmat<\/h2><pre class="codeinput">A.subs <span clas/;"	I
11	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="11">Use norm for compatibility with the other types of tensors.<\/h2><p>The <tt>n/;"	I
11	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="11">Use double to convert a symktensor to a multi-dimensional array<\/h2><p>The f/;"	I
11	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="11">Use full to convert a symmetric tensor to a multidimensional array<\/h2><pre /;"	I
11	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="11">Creating an empty tensor<\/h2><p>An empty constructor exists, primarily to su/;"	I
12	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="12">Use HOSVD initial guess<\/h2><p>Use the <tt>'nvecs'<\/tt> option to use the l/;"	I
12	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="12">Change the number of sampled rows in least squares solve<\/h2><p>The default /;"	I
12	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="12">Nonnegative factorization<\/h2><p>We can employ lower bounds to get a nonnega/;"	I
12	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="12">Evaluate the output<\/h2><pre class="codeinput">scr = score(M,M_true)$/;"	I
12	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="12">Check the output<\/h2><p>It's important to check the output of the optimizati/;"	I
12	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><h2 id="12">Create an example Rayleigh tensor model and data instance.<\/h2><p>Consider a/;"	I
12	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="12">Specify the mode order<\/h2><p>It's also possible to specify the order of the/;"	I
12	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="12">Use tendiag or sptendiag to convert a ktensor to a ttensor.<\/h2><p>A ktensor/;"	I
12	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="12">Basic operations with symktensors<\/h2><p>Symktensors support multiplication /;"	I
12	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="12">Subscripted reference of a symmetric tensor<\/h2><p>Subindex notation extract/;"	I
12	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="12">Constituent parts of a tenmat<\/h2><pre class="codeinput">A.data <span class=/;"	I
12	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="12">Use tenone to create a tensor of all ones<\/h2><pre class="codeinput">X = ten/;"	I
13	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="13">Alternate accumulation functions for sptensor<\/h2><pre class="codeinput">Y =/;"	I
13	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="12">Nonnegative factorization<\/h2><p>We can employ lower bounds to get a nonnega/;"	I
13	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="13">Evaluate the output<\/h2><p>We can "score" the similarity of the model comput/;"	I
13	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="13">Generate bigger data tensor with core described above<\/h2><p>Uses the same p/;"	I
13	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="13">Sparse tensor times vector (ttv for sptensor)<\/h2><p>This is the same as in /;"	I
13	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="13">Creating a sparse tensor from its constituent parts<\/h2><pre class="codeinpu/;"	I
13	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="13">Use cp_als to find a CP decomposition of a sumtensor<\/h2><p>One of the prima/;"	I
13	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="13">Use norm to compute the Frobenius norm of a symktensor<\/h2><p>The function </;"	I
13	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="13">Use tenzeros to create a tensor of all zeros<\/h2><pre class="codeinput">X = /;"	I
13	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="13">Checking default parameters and recreating the same test problem<\/h2><p>The /;"	I
13	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="13">Use double to convert a ttensor to a (multidimensional) array<\/h2><pre class/;"	I
14	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="14">Change the order of the dimensions in CP<\/h2><pre class="codeinput">[M4,~,in/;"	I
14	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="14">Generate initial guess of the corret size<\/h2><pre class="codeinput">M_init /;"	I
14	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="14">ST-HOSVD compared to HOSVD<\/h2><p>The answers are essentially the same for t/;"	I
14	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="14">Creating an empty sptensor<\/h2><p>An empty constructor exists, primarily to /;"	I
14	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="14">Use normalize to normalize the components of a symktensor.<\/h2><p>The functi/;"	I
14	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="14">Use tenrand to create a random tensor<\/h2><pre class="codeinput">X = tenrand/;"	I
14	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="14">Use ndims and size to get the size of a ttensor<\/h2><pre class="codeinput">n/;"	I
15	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="15">Scaling a tensor in different modes<\/h2><pre class="codeinput">X = tenones([/;"	I
15	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="15">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here we specify a lower bound of zer/;"	I
15	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="15">Tucker operator and matricized tensors<\/h2><p>The Tucker operator also has v/;"	I
15	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="15">Use sptenrand to create a random sptensor<\/h2><pre class="codeinput">X = spt/;"	I
15	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="15">Use squeeze to remove singleton dimensions from a tensor<\/h2><pre class="cod/;"	I
16	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="16">Change the tolerance<\/h2><p>It's also possible to loosen or tighten the tole/;"	I
16	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="16">Check the output<\/h2><pre class="codeinput">exitmsg = output.ExitMsg$/;"	I
16	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="16">Orthogonalization of Tucker factors<\/h2><p>Proposition 4.4<\/p><pre class="c/;"	I
16	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="16">Use ndims and size for the dimensions of a ktensor<\/h2><pre class="codeinput/;"	I
16	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="16">Creating a sptenmat from its constituent parts<\/h2><pre class="codeinput">B /;"	I
16	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><p>It follows that in cases where <img src="sumtensor_doc_eq06518435724312786793.png" alt/;"	I
16	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="16">Use arrange to normalize and sort a symktensor<\/h2><p>The function <tt>arran/;"	I
16	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="16">Creating a tenmat from its constituent parts<\/h2><pre class="codeinput">B = /;"	I
16	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="16">Use double to convert a tensor to a (multidimensional) array<\/h2><pre class=/;"	I
17	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="17">Control sign ambiguity of factor matrices<\/h2><p>The default behavior of <tt/;"	I
17	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="17">Use squeeze to remove singleton dimensions from a sptensor<\/h2><pre class="c/;"	I
17	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="17">Subscripted reference for sumtensors<\/h2><p>Subscripted reference can be use/;"	I
17	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="17">Computing the score of the match between two symktensors<\/h2><p>The function/;"	I
17	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="17">Creating an empty tenmat<\/h2><pre class="codeinput">B = tenmat <span class="/;"	I
17	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="17">Subscripted reference to a ttensor<\/h2><pre class="codeinput">X.core(1,1,1) /;"	I
18	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="18">Recommendations<\/h2><div><ul><li>Run multiple times with different guesses a/;"	I
18	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="18">Evaluate the output<\/h2><p>We can "score" the similarity of the model comput/;"	I
18	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_doc_03.png" alt=""> <h2 id="18">Boolean tensor.<\//;"	I
18	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="18">Kruskal operator properties<\/h2><p>Proposition 5.2<\/p><pre class="codeinput/;"	I
18	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="18">Kruskal tensor times vector (ttv for ktensor)<\/h2><p>The special structure o/;"	I
18	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="18">Creating a sptenmat with no nonzeros<\/h2><pre class="codeinput">A = sptenmat/;"	I
18	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="18">Use full or tensor to convert a sptensor to a (dense) tensor<\/h2><pre class=/;"	I
18	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="18">Subscripted assignment<\/h2><p>Symmetric tensors also support subscripted ass/;"	I
18	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="18">Use double to convert a tenmat to a MATLAB matrix<\/h2><pre class="codeinput"/;"	I
18	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="18">Use ndims and size to get the size of a tensor<\/h2><pre class="codeinput">nd/;"	I
18	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="18">Options for creating factor matrices, core tensors, and lambdas<\/h2><p>Any f/;"	I
19	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="19">Subscripted reference for a ktensor<\/h2><pre class="codeinput">X(1,1,1) <spa/;"	I
19	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="19">Creating an emtpy sptenmat<\/h2><pre class="codeinput">A = sptenmat <span cla/;"	I
19	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><p>Calling <tt>score<\/tt> on two symktensor converts the symktensors to ktensors and cal/;"	I
19	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="19">Use tensor to convert a tenmat to a tensor<\/h2><pre class="codeinput">Y = te/;"	I
2	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="2">Basic call to the method, specifying the data tensor and its rank<\/h2><p>This/;"	I
2	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^<\/pre><h2 id="2">Call CP-APR<\/h2><pre class="codeinput"><span class="comment">% Compute a solu/;"	I
2	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="2">Running the CP-ARLS method<\/h2><p>Running the method is essentially the same /;"	I
2	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	I
2	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="2">Create an example problem.<\/h2><p>Create an example 50 x 40 x 30 tensor with /;"	I
2	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	I
2	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	I
2	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><h2 id="2">CP-ALS<\/h2><p>Just a reminder of what CP-ALS does.<\/p><pre class="codeinput"/;"	I
2	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
2	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="2">Poisson (count data)<\/h2><p>This is indicated by specifying the type as eithe/;"	I
2	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	I
2	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^<\/pre><h2 id="2">Call eig_sshopm with no shift<\/h2><p>The method with no shift will fail to co/;"	I
2	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="2">An Large-Scale Example<\/h2><p>For large-scale problems, the <tt>sumtensor<\/t/;"	I
2	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="2">Creating a symtensor from a symmetric tensor<\/h2><p>We can construct a <tt>sy/;"	I
2	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="2">Alternate core formats: sptensor, ktensor, or ttensor<\/h2><pre class="codeinp/;"	I
2	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="2">Create a [2 2 2] approximation<\/h2><pre class="codeinput">T = tucker_als(X,2)/;"	I
20	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="20">Use double to convert a sptenmat to a MATLAB sparse matrix<\/h2><pre class="c/;"	I
20	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="20">Use sptensor to convert a (dense) tensor to a sptensor<\/h2><pre class="codei/;"	I
20	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="20">Subscripted assignment for symktensors<\/h2><p>Subscripted assignment can be /;"	I
20	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><p>Symmetric tensors do not support enlargement with the assignment operator, so assignin/;"	I
20	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="20">Use size and tsize for the dimensions of a tenmat<\/h2><pre class="codeinput"/;"	I
20	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="20">Subscripted assignment for a ttensor<\/h2><pre class="codeinput">X.core = ten/;"	I
21	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="21">Scaling a sptensor in different modes<\/h2><pre class="codeinput">X = ones(sp/;"	I
21	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="21">Use double to convert a sptensor to a (dense) multidimensional array<\/h2><pr/;"	I
21	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="21">Subscripted reference for a tenmat<\/h2><pre class="codeinput">A(2,1) <span c/;"	I
21	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="21">Subscripted reference for a tensor<\/h2><pre class="codeinput">X = tenrand([3/;"	I
21	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="21">Generating data from an existing solution<\/h2><p>It's possible to skip the s/;"	I
22	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="22">Use find to extract nonzeros from a tensor and then create a sptensor<\/h2><p/;"	I
22	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="22">Subscripted assignment for a tenmat<\/h2><pre class="codeinput">A(1:2,1:2) = /;"	I
22	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="22">Creating dense missing data problems<\/h2><p>It's possible to create problems/;"	I
23	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="23">Norm of Kruskal operator<\/h2><p>The norm of a ktensor has a special form bec/;"	I
23	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="23">Subscripted assignment for a ktensor<\/h2><pre class="codeinput">X.lambda = o/;"	I
23	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="23">Tucker tensor times vector (ttv for ttensor)<\/h2><p>The special structure of/;"	I
23	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="23">Use ndims and size to get the size of a sptensor<\/h2><pre class="codeinput">/;"	I
23	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="23">Use end for the last index<\/h2><pre class="codeinput">A(end,end) <span class/;"	I
23	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="23">Using end for last index<\/h2><pre class="codeinput">X{end}  <span class="com/;"	I
24	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><h2 id="24">Create and test a Poisson count tensor.<\/h2><pre class="codeinput">nc = 3;$/;"	I
24	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="24">Inner product of Kruskal operator with a tensor<\/h2><p>The inner product of /;"	I
24	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="24">Use full to convert a sptenmat to a tenmat<\/h2><pre class="codeinput">B = sp/;"	I
24	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="24">Basic operations for tenmat<\/h2><pre class="codeinput">norm(A) <span class="/;"	I
24	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="24">Basic operations (uplus, uminus, mtimes) for a ttensor.<\/h2><pre class="code/;"	I
25	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_doc_05.png" alt=""> <h2 id="25">Loss function for/;"	I
25	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="25">Creating sparse missing data problems.<\/h2><p>If <tt>Sparse_M<\/tt> is set t/;"	I
26	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="26">Use end for the last array index.<\/h2><pre class="codeinput">X(3:end,1,1)  </;"	I
26	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="26">Use sptensor to convert a sptenmat to a sptensor<\/h2><pre class="codeinput">/;"	I
26	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="26">Use nnz to get the number of nonzeros of a sptensor<\/h2><pre class="codeinpu/;"	I
26	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><p>The symtensor class supports the following additional MATLABbinary operations: and, or/;"	I
27	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="27">Use size and tsize for the dimensions of a sptenmat<\/h2><pre class="codeinpu/;"	I
27	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="27">Subscripted reference for a sptensor<\/h2><pre class="codeinput">X = sptensor/;"	I
27	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="27">Use permute to reorder the modes of a ttensor<\/h2><pre class="codeinput">per/;"	I
28	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="28">Tensor times matrix (ttm for tensor)<\/h2><p>Compute a tensor times a matrix /;"	I
28	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="28">Subscripted reference for a sptenmat<\/h2><p>This is not supported beyond get/;"	I
28	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="28">Create missing data problems with a pre-specified pattern<\/h2><p>It's also p/;"	I
28	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="28">Displaying a ttensor<\/h2><p>The tensor displays by displaying the core and e/;"	I
29	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="29">Adding and subtracting ktensors<\/h2><p>Adding two ktensors is the same as co/;"	I
29	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="28">Subscripted reference for a sptenmat<\/h2><p>This is not supported beyond get/;"	I
29	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="29">Subscripted assignment for a tensor<\/h2><p>We can assign a single element, a/;"	I
29	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="29">Creating sparse problems (CP only)<\/h2><p>If we assume each model parameter /;"	I
3	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="3">Speed things up by skipping the initial mixing<\/h2><p>The default behavior is/;"	I
3	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="3">Create an example problem.<\/h2><p>Create an example 50 x 40 x 30 tensor with /;"	I
3	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="3">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
3	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	I
3	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="3">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
3	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_01.png" alt=""> <h2 id="3">GCP with Gau/;"	I
3	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
3	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="3">Poisson with Log Link (count data)<\/h2><p>This is indicated by specifying the/;"	I
3	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="3">Generate a core with different accuracies for different sizes<\/h2><p>We will /;"	I
3	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="3">N-mode product and matricization<\/h2><p>Generate some data to work with.<\/p>/;"	I
3	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="3">Specifying weights in a ktensor<\/h2><p>Weights for each rank-1 tensor can be /;"	I
3	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^<\/pre><h2 id="3">Call eig_sshopm with shift<\/h2><pre class="codeinput">[lambda, x, flag, it] =/;"	I
3	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="3">Unique entries of a tensor<\/h2><p>Note from TGK: This needs to be added. It s/;"	I
3	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="3">Creating a one-dimensional tensor<\/h2><p>The tensor class explicitly supports/;"	I
3	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="3">Create a [2 2 1] approximation<\/h2><pre class="codeinput">T = tucker_als(X,[2/;"	I
30	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="30">Use end for the last index<\/h2><p>End is not supported.<\/p><h2 id="31">Basi/;"	I
30	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="30">Multiplying two tenmats<\/h2><p>It is possible to compute the product of two /;"	I
31	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="30">Use end for the last index<\/h2><p>End is not supported.<\/p><h2 id="31">Basi/;"	I
31	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="31">Generating an initial guess<\/h2><p>The <tt>create_guess<\/tt> function creat/;"	I
32	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="32">Displaying a tenmat<\/h2><p>Shows the original tensor dimensions, the modes m/;"	I
33	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="33">Basic operations with a ktensor<\/h2><pre class="codeinput">+X <span class="c/;"	I
33	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="33">Sparse tensor times matrix (ttm for sptensor)<\/h2><p>It is also possible to /;"	I
34	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="34">Use aatx to efficiently compute A * A' * x for a sptenmat<\/h2><pre class="co/;"	I
34	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="34">Using end for the last array index.<\/h2><pre class="codeinput">X(end,end,end/;"	I
36	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="36">Use permute to reorder the modes of a ktensor<\/h2><pre class="codeinput">per/;"	I
36	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="36">Displaying a tenmat<\/h2><p>Shows the original tensor dimensions, the modes m/;"	I
37	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="37">Use arrange to normalize the factors of a ktensor<\/h2><p>The function <tt>ar/;"	I
37	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="37">Subscripted assignment for a sptensor<\/h2><pre class="codeinput">X = sptenso/;"	I
37	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="37">Use find for subscripts of nonzero elements of a tensor<\/h2><p>The <tt>find</;"	I
39	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="39">Use fixsigns for sign indeterminacies in a ktensor<\/h2><p>The largest magnit/;"	I
4	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><p>We typically can achieve a final fit of f = 0.97. The method stops when the change in /;"	I
4	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="4">Comparing with CP-ALS<\/h2><p>CP-ALS may be somewhat faster, especially since /;"	I
4	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="4">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
4	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="4">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to consi/;"	I
4	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="4">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
4	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="4">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to consi/;"	I
4	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_02.png" alt=""> <h2 id="4">GCP with Gau/;"	I
4	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
4	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="4">Bernoulli with Odds Link (binary data)<\/h2><p>This is indicated by specifying/;"	I
4	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="4">Creating a one-dimensional ktensor<\/h2><pre class="codeinput">Y = ktensor({ra/;"	I
4	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="4">Specifying the accumulation method for the constructor<\/h2><p>By default, val/;"	I
4	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><p>The difference in memory between the full and sumtensor is a factor of 10^5! Hence we /;"	I
4	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="4">Creating a symtensor from a nonsymmetric tensor<\/h2><p>A symmetric tensors ca/;"	I
4	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="4">Use a different ordering of the dimensions<\/h2><pre class="codeinput">T = tuc/;"	I
41	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="41">Use ktensor to store the 'skinny' SVD of a matrix<\/h2><pre class="codeinput"/;"	I
41	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><p>Sometimes the product may be too large to reside in memory.  For example, try the foll/;"	I
41	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="41">Computing the Frobenius norm of a tensor<\/h2><p><tt>norm<\/tt> computes the /;"	I
42	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="42">Kruskal tensor times matrix (ttm for ktensor)<\/h2><p>The special structure o/;"	I
42	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="42">Using reshape to rearrange elements in a tensor<\/h2><p><tt>reshape<\/tt> res/;"	I
43	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="43">Use end as the last index.<\/h2><pre class="codeinput">X(end-10:end,end-10:en/;"	I
43	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="43">Basic operations (plus, minus, and, or, etc.) on a tensor<\/h2><p>The tensor /;"	I
44	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="44">Displaying a ktensor<\/h2><pre class="codeinput">disp(X) <span class="comment/;"	I
44	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="44">Use elemfun to manipulate the nonzeros of a sptensor<\/h2><p>The function <tt/;"	I
45	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="45">Displaying data<\/h2><p>The <tt>datadisp<\/tt> function allows the user to as/;"	I
47	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="47">Tucker tensor times matrix (ttm for ttensor)<\/h2><p>The special structure of/;"	I
49	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="49">Basic operations (plus, minus, times, etc.) on a sptensor<\/h2><pre class="co/;"	I
5	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><img vspace="5" hspace="5" src="cp_als_doc_01.png" alt=""> <h2 id="5">Run again with a di/;"	I
5	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="5">How well does the approximate fit do?<\/h2><p>It is possible to check the accu/;"	I
5	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here is an example call to the cp_opt/;"	I
5	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here is an example call to the cp_opt/;"	I
5	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_op/;"	I
5	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_op/;"	I
5	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_03.png" alt=""> <h2 id="5">GCP with ADA/;"	I
5	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
5	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="5">Bernoulli with Logit Link (binary data)<\/h2><p>This is indicated by specifyin/;"	I
5	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="5">Generate data tensor with core described above<\/h2><p>We take the core G and /;"	I
5	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="5">Constituent parts of a ktensor<\/h2><pre class="codeinput">X.lambda <span clas/;"	I
5	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="5">Creating a tenmat by specifying the dimensions mapped to the rows<\/h2><p>If j/;"	I
5	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="5">Specifying trailing singleton dimensions in a tensor<\/h2><p>Likewise, trailin/;"	I
5	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="5">Creating a Tucker test problem<\/h2><p>The <tt>create_problem<\/tt> function c/;"	I
5	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="5">Creating a one-dimensional ttensor<\/h2><pre class="codeinput">Z = ttensor(ten/;"	I
5	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="5">Use the n-vecs initialization method<\/h2><p>This initialization is more expen/;"	I
52	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="52">Tensor times tensor (ttt for tensor)<\/h2><pre class="codeinput">X = tensor(r/;"	I
57	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="57">Sparse tensor times sparse tensor (ttt for sptensor)<\/h2><pre class="codeinp/;"	I
59	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="59">Use permute to reorder the modes of a sptensor<\/h2><pre class="codeinput">A /;"	I
6	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="6">Alternate accumulation functions for tensor<\/h2><pre class="codeinput">Y = co/;"	I
6	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="6">Increase the maximium number of iterations<\/h2><p>Note that the previous run /;"	I
6	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="6">Varying epoch size<\/h2><p>It is possible to vary that number of iterations pe/;"	I
6	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	I
6	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	I
6	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	I
6	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	I
6	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_04.png" alt=""> <h2 id="6">GCP with Gam/;"	I
6	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
6	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="6">Rayleigh (real-valued data)<\/h2><p>This is indicated by specifying the type </;"	I
6	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="6">Compute (full) HOSVD<\/h2><p>We compute the ST-HOSVD using the <tt>hosvd<\/tt>/;"	I
6	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="6">Norm of difference between two tensors<\/h2><p>Prop. 3.9: For tensors X and Y,/;"	I
6	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="6">Creating a one-dimensional sptensor.<\/h2><pre class="codeinput">X = sptensor(/;"	I
6	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="6">Use ndims and size for the dimensions of a sumtensor<\/h2><p>For a given sumte/;"	I
6	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="6">Create an all ones symtensor<\/h2><p>The first argument is the generating func/;"	I
6	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="6">Creating a tenmat by specifying the dimensions mapped to the columns<\/h2><p>L/;"	I
6	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="6">Constituent parts of a ttensor<\/h2><pre class="codeinput">X.core <span class=/;"	I
6	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="6">Specify the initial guess manually<\/h2><pre class="codeinput">U0 = {rand(5,2)/;"	I
63	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="63">Inner product (innerprod)<\/h2><p>The function <tt>innerprod<\/tt> efficientl/;"	I
63	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="63">Displaying a tensor<\/h2><p>The function <tt>disp<\/tt> handles small and lar/;"	I
65	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="65">Contraction on tensors (contract for tensor)<\/h2><p>The function <tt>contrac/;"	I
65	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="65">Using tenfun for elementwise operations on one or more tensors<\/h2><p>The fu/;"	I
68	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="68">Use permute to reorder the modes of a tensor<\/h2><pre class="codeinput">X = /;"	I
7	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="7">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	I
7	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="7">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	I
7	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_05.png" alt=""> <h2 id="7">GCP with Hub/;"	I
7	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	I
7	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="7">Gamma (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	I
7	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="7">Compute low-rank HOSVD approximation<\/h2><p>The norm squared of the first two/;"	I
7	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="7">Creating a ktensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	I
7	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="7">Use full to convert a sumtensor to a "generic" tensor<\/h2><p>The <tt>full<\/t/;"	I
7	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="7">Create a random symtensor<\/h2><pre class="codeinput">S4 = symtensor(@randn, 3/;"	I
7	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="7">Vectorize via tenmat<\/h2><p>All the dimensions can be mapped to the rows or t/;"	I
71	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="71">Symmetrizing and checking for symmetry in a tensor<\/h2><p>A tensor can be sy/;"	I
74	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="74">Relationships among ttv, ttm, and ttt<\/h2><p>The three "tensor times _" func/;"	I
74	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="74">Displaying a tensor<\/h2><p>The function <tt>disp<\/tt> can be used to displa/;"	I
8	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="8">Examples of collapsing a sptensor<\/h2><pre class="codeinput">X = sptenrand([4/;"	I
8	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><img vspace="5" hspace="5" src="cp_als_doc_02.png" alt=""> <h2 id="8">Compare the two sol/;"	I
8	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="8">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	I
8	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="8">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	I
8	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="8">Create a SPARSE example problem with missing data.<\/h2><p>Here we have 95% mi/;"	I
8	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="8">Create a SPARSE example problem with missing data.<\/h2><p>Here we have 95% mi/;"	I
8	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_06.png" alt=""> <h2 id="8">GCP with Bet/;"	I
8	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^fsampler = @() deal(xsubs, xvals, wghts);'<\/pre><div><ul><li><tt>'fsamp'<\/tt> - Number of samp/;"	I
8	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="8">Huber (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	I
8	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="8">Tucker tensor properties<\/h2><p>The properties of the Tucker operator follow /;"	I
8	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="8">Creating an empty ktensor<\/h2><pre class="codeinput">Z = ktensor <span class=/;"	I
8	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="8">Creating an all-zero sptensor<\/h2><pre class="codeinput">X = sptensor([],[],[/;"	I
8	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="8">Use double to convert a sumtensor to a multidimensional array<\/h2><p>The <tt>/;"	I
8	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><p>This method of declaring a symktensor is useful in comparing decomposition methods: th/;"	I
8	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="8">Using a generating function to populate a symmetric tensor<\/h2><p>In general,/;"	I
8	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="8">Alternative ordering for the columns for mode-n matricization<\/h2><p>Mode-n m/;"	I
8	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="8">The constituent parts of a tensor<\/h2><pre class="codeinput">X = tenrand([4 3/;"	I
8	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="8">Recreating the same test problem<\/h2><p>We can recreate exactly the same test/;"	I
8	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="8">Creating a ttensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	I
82	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="82">Frobenius norm of a tensor<\/h2><p>The Frobenius norm of any type of tensor m/;"	I
9	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="9">Rerun with same initial guess<\/h2><p>Using the same initial guess (and all ot/;"	I
9	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="9">Set up another sample problem<\/h2><p>We set up another problem with 10% noise/;"	I
9	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="9">Overfitting example<\/h2><p>Re-using the same example as before, consider the /;"	I
9	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="9">Overfitting example<\/h2><p>Consider the case where we don't know R in advance/;"	I
9	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="9">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
9	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="9">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	I
9	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="9">Negative Binomial (count data)<\/h2><p>This is indicated by specifying the typ/;"	I
9	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="9">Verbosity - Getting more or less information.<\/h2><p>Setting the verbosity to/;"	I
9	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="9">Use full or tensor to convert a ktensor to a tensor<\/h2><pre class="codeinput/;"	I
9	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="9">Matricized Khatri-Rao product of a sumtensor<\/h2><p>The <tt>mttkrp<\/tt> func/;"	I
9	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="9">Use ncomponents for the rank of symktensor<\/h2><p>The function <tt>ncomponent/;"	I
9	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="9">Use ndims and size to get the size of a symmetric tensor<\/h2><pre class="code/;"	I
9	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="9">Creating an empty ttensor.<\/h2><pre class="codeinput">X = ttensor <span class/;"	I
:focus	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
A	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            A = Xmargs{i};$/;"	v
A	lib/TrialData/util/lib/isomap/dijk.m	/^A = A';		% Use transpose to speed-up FIND for sparse A$/;"	v
A	lib/TrialData/util/predict_kalman.m	/^A = kf_model.A;$/;"	v
A	lib/TrialData/util/train_kalman.m	/^A = Y_new'*Z*inv(Z'*Z);$/;"	v
A	lib/tensor_toolbox/@ktensor/double.m	/^    A = [];$/;"	v
A	lib/tensor_toolbox/@ktensor/double.m	/^A = X.lambda' * khatrirao(X.u,'r')';$/;"	v
A	lib/tensor_toolbox/@ktensor/double.m	/^A = reshape(A,sz);$/;"	v
A	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    A = ktensor(A);$/;"	v
A	lib/tensor_toolbox/@ktensor/fixsigns.m	/^A = normalize(A);$/;"	v
A	lib/tensor_toolbox/@ktensor/mask.m	/^A = X.u; % factor matrices$/;"	v
A	lib/tensor_toolbox/@ktensor/score.m	/^    A = arrange(A, best_perm);$/;"	v
A	lib/tensor_toolbox/@ktensor/score.m	/^    A = ktensor(A);$/;"	v
A	lib/tensor_toolbox/@ktensor/score.m	/^A = arrange(A, best_perm);$/;"	v
A	lib/tensor_toolbox/@ktensor/score.m	/^A = normalize(A);$/;"	v
A	lib/tensor_toolbox/@sptenmat/double.m	/^    A = sparse(T.subs(:,1), T.subs(:,2), T.vals, m, n);$/;"	v
A	lib/tensor_toolbox/@sptenmat/double.m	/^    A = sparse(m,n);$/;"	v
A	lib/tensor_toolbox/@sumtensor/double.m	/^A = double(full(T));$/;"	v
A	lib/tensor_toolbox/@symktensor/double.m	/^    A = [];$/;"	v
A	lib/tensor_toolbox/@symktensor/double.m	/^A = double(ktensor(X));$/;"	v
A	lib/tensor_toolbox/@symktensor/fg.m	/^    A = Data.A;$/;"	v
A	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    A = full(A);$/;"	v
A	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    A = symtensor(A);$/;"	v
A	lib/tensor_toolbox/@symktensor/score.m	/^A = normalize(A);$/;"	v
A	lib/tensor_toolbox/@symktensor/symktensor.m	/^    A = varargin{2};$/;"	v
A	lib/tensor_toolbox/@symktensor/symktensor.m	/^   A = varargin{2}; $/;"	v
A	lib/tensor_toolbox/@symktensor/symktensor.m	/^   A = varargin{2};$/;"	v
A	lib/tensor_toolbox/@symtensor/indices.m	/^    A = varargin{1};$/;"	v
A	lib/tensor_toolbox/@symtensor/subsasgn.m	/^            A = subsasgn(A,newS,B);$/;"	v
A	lib/tensor_toolbox/@tenmat/mtimes.m	/^    A = tenmat(A,1);$/;"	v
A	lib/tensor_toolbox/@tenmat/tenmat.m	/^    A = class(A, 'tenmat');$/;"	v
A	lib/tensor_toolbox/@tenmat/tenmat.m	/^    A = tenmat(tensor(varargin{1}),varargin{2:nargin});$/;"	v
A	lib/tensor_toolbox/@tenmat/tenmat.m	/^A = class(A, 'tenmat');$/;"	v
A	lib/tensor_toolbox/@tensor/collapse.m	/^A = double(tenmat(X,remdims,dims));$/;"	v
A	lib/tensor_toolbox/@tensor/double.m	/^A = double(X.data);$/;"	v
A	lib/tensor_toolbox/@tensor/scale.m	/^A = double(tenmat(X,dims,remdims));$/;"	v
A	lib/tensor_toolbox/@tensor/ttm.m	/^        A = reshape(X.data, sz(n), []);$/;"	v
A	lib/tensor_toolbox/@ttensor/double.m	/^A = double(full(T));$/;"	v
A	lib/tensor_toolbox/cp_apr.m	/^       A = A .* M.U{n}(xsubs(:,n),:);$/;"	v
A	lib/tensor_toolbox/cp_apr.m	/^    A = M.U{1}(xsubs(:,1),:);$/;"	v
A	lib/tensor_toolbox/cp_arls.m	/^    A = varargin(1:end-1);$/;"	v
A	lib/tensor_toolbox/cp_arls.m	/^    A = varargin{1};$/;"	v
A	lib/tensor_toolbox/cp_wopt.m	/^A = tt_cp_vec_to_fac(x,W);$/;"	v
A	lib/tensor_toolbox/create_problem_binary.m	/^    A = Mtrue.u;$/;"	v
A	lib/tensor_toolbox/create_problem_binary.m	/^    A = cell(d,1);$/;"	v
A	lib/tensor_toolbox/doc/cp_apr_doc.m	/^A = cell(3,1);$/;"	v
A	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^A = cell(nd,1);$/;"	v
A	lib/tensor_toolbox/doc/identities_doc.m	/^A = rand(3,4);$/;"	v
A	lib/tensor_toolbox/doc/identities_doc.m	/^A = rand(4,5); B = rand(3,4); C = rand(2,3); U = {A,B,C};$/;"	v
A	lib/tensor_toolbox/doc/identities_doc.m	/^A = {A1,A2,A3};$/;"	v
A	lib/tensor_toolbox/doc/ktensor_doc.m	/^A = rand(4,2); %<-- First column is a_1, second is a_2.$/;"	v
A	lib/tensor_toolbox/doc/ktensor_doc.m	/^A = rand(4,3) %<-- A random matrix.$/;"	v
A	lib/tensor_toolbox/doc/multiply_doc.m	/^A = rand(4,1);$/;"	v
A	lib/tensor_toolbox/doc/multiply_doc.m	/^A = rand(4,5); B = rand(4,3); C = rand(3,4); D = rand(3,2);$/;"	v
A	lib/tensor_toolbox/doc/multiply_doc.m	/^A = rand(5,1); B = rand(3,1); C = rand(4,1); D = rand(2,1); %<-- Some vectors.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat %<-- A really empty sptenmat.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,1) %<-- Convert it to a sptenmat$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,1) %<-- Mode-1 matricization.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,1:4) %<-- All modes mapped to rows, i.e., vectorize.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,2) %<-- By default, columns are ordered as [1 3 4].$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,2,'bc') %<-- Backward cyclic.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,2,'fc') %<-- Foward cyclic.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,2,[3 1 4]) %<-- Explicit column ordering.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,[2 3]) %<-- More than one mode is mapped to the columns.$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat(X,[2 3],'t') %<-- Specify column dimensions (transpose).$/;"	v
A	lib/tensor_toolbox/doc/sptenmat_doc.m	/^A = sptenmat([],[],A.rdims,A.cdims,A.tsize) %<-- An empty sptenmat.$/;"	v
A	lib/tensor_toolbox/doc/sptensor_doc.m	/^A = sptenrand([30 40 20 1], 5) %<-- Create data.$/;"	v
A	lib/tensor_toolbox/doc/sptensor_doc.m	/^A = sptensor(tensor(floor(5*rand(2,2,2)))) %<-- Create data.$/;"	v
A	lib/tensor_toolbox/doc/sshopm_doc.m	/^A = tenzeros([3 3 3 3]);$/;"	v
A	lib/tensor_toolbox/doc/symtensor_doc.m	/^A = symtensor(@(x,y) rand(x,y)>.5, 3, 2)$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X, [2 3], 't') %<-- Same as A = tenmat(X,[1 4],[2 3]).$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,1) %<-- Same as A = tenmat(X,1,2:4)$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,1:4,'t') %<-- Map all the dimensions to the columns$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,2) %<-- By default, columns are ordered as [1 3 4].$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,2,'bc') %<-- Backward cyclic, i.e., [1 4 3].$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,2,'fc') %<-- Forward cyclic, i.e., [3 4 1].$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,2,[3 1 4]) %<-- Explicit specification.$/;"	v
A	lib/tensor_toolbox/doc/tenmat_doc.m	/^A = tenmat(X,[1 2],[3 4]) %<-- Dims [1 2] map to rows, [3 4] to columns.$/;"	v
A	lib/tensor_toolbox/doc/tensor_doc.m	/^A = tensor(floor(3*rand(2,3,2)))$/;"	v
A	lib/tensor_toolbox/doc/test_problems_doc.m	/^A = cell(3,1);$/;"	v
A	lib/tensor_toolbox/import_data.m	/^    A = ktensor(lambda,U);$/;"	v
A	lib/tensor_toolbox/import_data.m	/^    A = reshape(data, sz);$/;"	v
A	lib/tensor_toolbox/import_data.m	/^    A = sptensor(subs, vals, sz);$/;"	v
A	lib/tensor_toolbox/import_data.m	/^    A = tensor(data, sz);$/;"	v
A	lib/tensor_toolbox/khatrirao.m	/^        A = varargin;$/;"	v
A	lib/tensor_toolbox/khatrirao.m	/^        A = varargin{1};$/;"	v
A	lib/tensor_toolbox/khatrirao.m	/^        A = {varargin{1:end-1}};$/;"	v
A	lib/tensor_toolbox/teneye.m	/^            A = combs_no_rep(N,K);  % choose$/;"	v
A	lib/tensor_toolbox/teneye.m	/^            A = combs_rep(N,K);     % multichoose$/;"	v
A	lib/tensor_toolbox/teneye.m	/^            A = perms_no_rep(N,K);  % permutations$/;"	v
A	lib/tensor_toolbox/teneye.m	/^            A = perms_rep(N,K);     % strings$/;"	v
A	lib/tensor_toolbox/teneye.m	/^        A = cumsumall(A);  % User has the MEX-File ready?$/;"	v
A	lib/tensor_toolbox/teneye.m	/^    A = cumsum(A);  % For single and double, use built-in.$/;"	v
A	lib/tensor_toolbox/teneye.m	/^   A = [];  $/;"	v
A	lib/tensor_toolbox/teneye.m	/^A = tenzeros(N*ones(1,M));$/;"	v
A	lib/tensor_toolbox/tests/Test_Tensor.m	/^                A = rand(5, sz(i));$/;"	v
A	lib/tensor_toolbox/tests/Test_Tensor.m	/^            A = rand(2,6);$/;"	v
A	lib/tensor_toolbox/tests/Test_Tensor.m	/^            A = rand(4,5); $/;"	v
A	lib/tensor_toolbox/tests/Test_Tensor.m	/^           A = rand(5,1); $/;"	v
A	lib/tensor_toolbox/tt_cp_fg.m	/^    A = tocell(A);$/;"	v
A	lib/tensor_toolbox/tt_cp_fun.m	/^A = tt_cp_vec_to_fac(x,Z);$/;"	v
A	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^A = cell(N,1);$/;"	v
A1	lib/tensor_toolbox/create_problem_binary.m	/^            A1 = [];$/;"	v
A1	lib/tensor_toolbox/create_problem_binary.m	/^            A1 = max(A1v .* A1p, 0);$/;"	v
A1	lib/tensor_toolbox/doc/identities_doc.m	/^A1 = rand(5,4);$/;"	v
A1	lib/tensor_toolbox/doc/identities_doc.m	/^A1 = reshape(1:10,[5 2]);$/;"	v
A1	lib/tensor_toolbox/doc/identities_doc.m	/^A1 = reshape(1:20,[5 4]);$/;"	v
A1p	lib/tensor_toolbox/create_problem_binary.m	/^            A1p = rand(sz(k),r-1) < density;$/;"	v
A1v	lib/tensor_toolbox/create_problem_binary.m	/^            A1v = random('Normal', hival, 0.5, [sz(k),r-1]);$/;"	v
A2	lib/tensor_toolbox/create_problem_binary.m	/^        A2 = loval * ones(sz(k),1);$/;"	v
A2	lib/tensor_toolbox/doc/identities_doc.m	/^A2 = rand(4,3);$/;"	v
A2	lib/tensor_toolbox/doc/identities_doc.m	/^A2 = reshape(1:12,[4 3]);$/;"	v
A2	lib/tensor_toolbox/doc/identities_doc.m	/^A2 = reshape(1:8,[4 2]);$/;"	v
A2	lib/tensor_toolbox/doc/identities_doc.m	/^A2 = reshape(2:9,[4 2]);$/;"	v
A3	lib/tensor_toolbox/doc/identities_doc.m	/^A3 = rand(3,2);$/;"	v
A3	lib/tensor_toolbox/doc/identities_doc.m	/^A3 = reshape(1:6,[3 2]);$/;"	v
A3	lib/tensor_toolbox/doc/identities_doc.m	/^A3 = reshape(3:8,[3 2]);$/;"	v
AA	lib/tensor_toolbox/@symktensor/score.m	/^AA = ktensor(A.lambda, A.u);$/;"	v
AB	lib/tensor_toolbox/doc/identities_doc.m	/^AB = {B1*A1, B2*A2, B3*A3};$/;"	v
Adding and subtracting ktensors	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="29">Adding and subtracting ktensors<\/h2><p>Adding two ktensors is the same as co/;"	i
Akt	lib/tensor_toolbox/@tensor/ttm.m	/^            Akt = reshape(X.data((k-1) * nAk + 1: k * nAk), ncols, sz(n));$/;"	v
All-at-once optimization for CP tensor decomposition	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	h
All-at-once optimization for CP tensor decomposition (with Poblano)	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	h
AllSymmetric	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function AllSymmetric(testCase,symver,issymver)$/;"	f
Alternate accumulation functions for sptensor	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="13">Alternate accumulation functions for sptensor<\/h2><pre class="codeinput">Y =/;"	i
Alternate accumulation functions for tensor	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="6">Alternate accumulation functions for tensor<\/h2><pre class="codeinput">Y = co/;"	i
Alternate core formats: sptensor, ktensor, or ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="2">Alternate core formats: sptensor, ktensor, or ttensor<\/h2><pre class="codeinp/;"	i
Alternating Poisson Regression for fitting CP to sparse count data	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating Poisson Regression for fitting CP /;"	h
Alternating least squares for CANDECOMP/PARAFAC (CP) Decomposition	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for CANDECOMP\/PARAF/;"	h
Alternating least squares for Tucker model	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for Tucker model<\/h/;"	h
Alternating randomized least squares for CP Decomposition	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating randomized least squares for CP De/;"	h
Alternative ordering for the columns for mode-n matricization	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="8">Alternative ordering for the columns for mode-n matricization<\/h2><p>Mode-n m/;"	i
An Large-Scale Example	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="2">An Large-Scale Example<\/h2><p>For large-scale problems, the <tt>sumtensor<\/t/;"	i
And	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function And(testCase, szs)$/;"	f
Apinv	lib/tensor_toolbox/doc/identities_doc.m	/^Apinv = {pinv(A1),pinv(A2),pinv(A3)};$/;"	v
AsteriskIndices	lib/TrialData/util/openNEV_td.m	/^            AsteriskIndices   = find(DigiValues == '*');$/;"	v
At	lib/tensor_toolbox/@tensor/ttm.m	/^        At = reshape(X.data, [], sz(n));$/;"	v
Axm	lib/tensor_toolbox/eig_geap.m	/^Axm = data.Axm;$/;"	v
Axm1	lib/tensor_toolbox/eig_geap.m	/^Axm1 = data.Axm1;$/;"	v
Axm2	lib/tensor_toolbox/eig_geap.m	/^Axm2 = data.Axm2;$/;"	v
Azerosubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^        Azerosubs = allsubs(A);$/;"	v
Azerosubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^        Azerosubs = setdiff(allsubs(A),A.subs,'rows');$/;"	v
B	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            B = P(:,uu)*D(uu,:)*X;$/;"	v
B	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    B = ktensor(B);$/;"	v
B	lib/tensor_toolbox/@ktensor/fixsigns.m	/^B = normalize(B);$/;"	v
B	lib/tensor_toolbox/@ktensor/score.m	/^    B = ktensor(B);$/;"	v
B	lib/tensor_toolbox/@ktensor/score.m	/^B = normalize(B);$/;"	v
B	lib/tensor_toolbox/@sptenmat/full.m	/^B = tenmat(zeros([siz,1,1]), A.rdims, A.cdims, A.tsize);$/;"	v
B	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    B = varargin{1};$/;"	v
B	lib/tensor_toolbox/@sptensor/full.m	/^    B = tensor;$/;"	v
B	lib/tensor_toolbox/@sptensor/full.m	/^B = tensor(zeros([siz,1,1]),siz);$/;"	v
B	lib/tensor_toolbox/@sumtensor/subsref.m	/^B = builtin('subsref', A, S);$/;"	v
B	lib/tensor_toolbox/@symktensor/score.m	/^B = normalize(B);$/;"	v
B	lib/tensor_toolbox/@symtensor/not.m	/^B = A;$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                    B = A.val;$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                    B = subsref(A.val, S(2));$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                B = A.m;  % Query the number of modes$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                B = A.n;  % Query the dimension$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                B = A.val(loca);$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^                B = subsref(A.val,S);$/;"	v
B	lib/tensor_toolbox/@symtensor/subsref.m	/^            B = subsref(A,newS);$/;"	v
B	lib/tensor_toolbox/@tenmat/mtimes.m	/^    B = tenmat(B,1);$/;"	v
B	lib/tensor_toolbox/@tenmat/tenmat.m	/^    B = varargin{1};$/;"	v
B	lib/tensor_toolbox/@tensor/collapse.m	/^B = zeros(size(A,1),1);$/;"	v
B	lib/tensor_toolbox/@tensor/not.m	/^B = tensor(not(A.data), size(A));$/;"	v
B	lib/tensor_toolbox/@tensor/scale.m	/^    B = diag(S) * A;$/;"	v
B	lib/tensor_toolbox/@tensor/scale.m	/^    B = zeros(size(A));$/;"	v
B	lib/tensor_toolbox/@tensor/ttm.m	/^            B = At * V';$/;"	v
B	lib/tensor_toolbox/@tensor/ttm.m	/^            B = At * V;$/;"	v
B	lib/tensor_toolbox/@tensor/ttm.m	/^            B = V * A;$/;"	v
B	lib/tensor_toolbox/@tensor/ttm.m	/^            B = V' * A;$/;"	v
B	lib/tensor_toolbox/@tensor/ttm.m	/^        B = zeros(p * nblocks * ncols, 1);$/;"	v
B	lib/tensor_toolbox/cp_wopt.m	/^    B = W.*full(ktensor(A));$/;"	v
B	lib/tensor_toolbox/cp_wopt.m	/^    B = W.*ktensor(A);$/;"	v
B	lib/tensor_toolbox/doc/identities_doc.m	/^B = rand(3,3);$/;"	v
B	lib/tensor_toolbox/doc/identities_doc.m	/^B = {B1,B2,B3};$/;"	v
B	lib/tensor_toolbox/doc/ktensor_doc.m	/^B = rand(3,2); %<-- Likewise for B.$/;"	v
B	lib/tensor_toolbox/doc/sptenmat_doc.m	/^B = double(A) %<-- Convert it to a MATLAB sparse matrix$/;"	v
B	lib/tensor_toolbox/doc/sptenmat_doc.m	/^B = sptenmat(A.subs,A.vals,A.rdims,A.cdims,A.tsize) %<-- Copies A$/;"	v
B	lib/tensor_toolbox/doc/sptenmat_doc.m	/^B = sptenmat(double(A),A.rdims,A.cdims,A.tsize) %<-- More efficient to pass a matrix.$/;"	v
B	lib/tensor_toolbox/doc/sptenmat_doc.m	/^B = sptenmat(sptenrand([3 3 3], 3), 1) %<-- Create a sptenmat$/;"	v
B	lib/tensor_toolbox/doc/sptensor_doc.m	/^B = sptensor(tensor(floor(5*rand(2,2,2)))) %<-- Create more data.$/;"	v
B	lib/tensor_toolbox/doc/symtensor_doc.m	/^B = symtensor(@(x,y) rand(x,y)>.5, 3, 2)$/;"	v
B	lib/tensor_toolbox/doc/tenmat_doc.m	/^B = A * A' %<-- Tenmat that is the product of two tenmats.$/;"	v
B	lib/tensor_toolbox/doc/tenmat_doc.m	/^B = tenmat %<-- Empty tenmat.$/;"	v
B	lib/tensor_toolbox/doc/tenmat_doc.m	/^B = tenmat(A.data,A.rdims,A.cdims,A.tsize) %<-- Recreates A$/;"	v
B	lib/tensor_toolbox/doc/tenmat_doc.m	/^B = tenmat(X,[2 1],[3 4]) %<-- Order matters!$/;"	v
B	lib/tensor_toolbox/doc/tensor_doc.m	/^B = tensor(floor(3*rand(2,3,2)))$/;"	v
B	lib/tensor_toolbox/tests/Test_Tensor.m	/^                B = rand(6, 5);$/;"	v
B	lib/tensor_toolbox/tests/Test_Tensor.m	/^            B = rand(3,6);$/;"	v
B	lib/tensor_toolbox/tests/Test_Tensor.m	/^            B = rand(4,3); $/;"	v
B	lib/tensor_toolbox/tests/Test_Tensor.m	/^           B = rand(3,1); $/;"	v
B1	lib/tensor_toolbox/doc/identities_doc.m	/^B1 = reshape(1:20,[4 5]);$/;"	v
B2	lib/tensor_toolbox/doc/identities_doc.m	/^B2 = reshape(1:12,[3 4]);$/;"	v
B3	lib/tensor_toolbox/doc/identities_doc.m	/^B3 = reshape(1:6,[2 3]);$/;"	v
BB	lib/tensor_toolbox/@sptensor/and.m	/^    BB = sptensor(A.subs,B(A.subs),size(A));$/;"	v
BB	lib/tensor_toolbox/@symktensor/score.m	/^BB = ktensor(B.lambda, B.u);$/;"	v
BC	lib/tensor_toolbox/teneye.m	/^    BC = (M-1)*M \/ 2;$/;"	v
BC	lib/tensor_toolbox/teneye.m	/^BC = prod(M-K+1:M) \/ (prod(1:K));  % Pre-allocation.$/;"	v
BC	lib/tensor_toolbox/teneye.m	/^BC = prod(M-K+1:M);  % Pre-allocation of return arg.$/;"	v
BC1	lib/tensor_toolbox/teneye.m	/^BC1 = BC \/ ( prod(1:K)); % Number of comb blocks.$/;"	v
Basic Usage	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Basic call to the method, specifying the data tensor and its rank	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="2">Basic call to the method, specifying the data tensor and its rank<\/h2><p>This/;"	i
Basic operations (plus) for sumtensors	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><p>It follows that in cases where <img src="sumtensor_doc_eq06518435724312786793.png" alt/;"	i
Basic operations (plus, minus, and, or, etc.) on a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><p>Symmetric tensors do not support enlargement with the assignment operator, so assignin/;"	i
Basic operations (plus, minus, and, or, etc.) on a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="43">Basic operations (plus, minus, and, or, etc.) on a tensor<\/h2><p>The tensor /;"	i
Basic operations (plus, minus, times, etc.) on a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="49">Basic operations (plus, minus, times, etc.) on a sptensor<\/h2><pre class="co/;"	i
Basic operations (uplus, uminus, mtimes) for a ttensor.	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="24">Basic operations (uplus, uminus, mtimes) for a ttensor.<\/h2><pre class="code/;"	i
Basic operations for sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="30">Use end for the last index<\/h2><p>End is not supported.<\/p><h2 id="31">Basi/;"	i
Basic operations for tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="24">Basic operations for tenmat<\/h2><pre class="codeinput">norm(A) <span class="/;"	i
Basic operations with a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="33">Basic operations with a ktensor<\/h2><pre class="codeinput">+X <span class="c/;"	i
Basic operations with symktensors	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="12">Basic operations with symktensors<\/h2><p>Symktensors support multiplication /;"	i
BasicHeader	lib/TrialData/util/openNEV_td.m	/^BasicHeader               = fread(FID, 336, '*uint8');$/;"	v
BasicHeader	lib/TrialData/util/openNSx_td.m	/^    BasicHeader                = fread(FID, 306, '*uint8');$/;"	v
Bernoulli with Logit Link (binary data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="5">Bernoulli with Logit Link (binary data)<\/h2><p>This is indicated by specifyin/;"	i
Bernoulli with Odds Link (binary data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="4">Bernoulli with Odds Link (binary data)<\/h2><p>This is indicated by specifying/;"	i
Beta (nonnegative real-valued data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="10">Beta (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	i
BibTex Entries: Tensor Toolbox for MATLAB	lib/tensor_toolbox/doc/html/bibtex.html	/^<h1 id="home">BibTex Entries: Tensor Toolbox for MATLAB<\/h1>$/;"	h
BinaryFuncErrors	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function BinaryFuncErrors(testCase,bf) %check binary functions$/;"	f
BinaryFuncs	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function BinaryFuncs(testCase, bf)$/;"	f
BinaryFuncs	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function BinaryFuncs(testCase, bf)$/;"	f
BinaryFuncsWithScalar	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function BinaryFuncsWithScalar(testCase, bf)$/;"	f
Bkt	lib/tensor_toolbox/@tensor/ttm.m	/^                Bkt = Akt * V';$/;"	v
Bkt	lib/tensor_toolbox/@tensor/ttm.m	/^                Bkt = Akt * V;$/;"	v
Boolean tensor.	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_doc_03.png" alt=""> <h2 id="18">Boolean tensor.<\//;"	i
Bsubs	lib/tensor_toolbox/@sptensor/xor.m	/^    Bsubs = find(B ~= 0);$/;"	v
Bvals	lib/tensor_toolbox/cp_wopt.m	/^    Bvals = Bvals + newvals;$/;"	v
Bvals	lib/tensor_toolbox/cp_wopt.m	/^Bvals = zeros(Nvals,1);$/;"	v
Bxm	lib/tensor_toolbox/eig_geap.m	/^    Bxm = data.Bxm;$/;"	v
Bxm1	lib/tensor_toolbox/eig_geap.m	/^    Bxm1 = data.Bxm1;$/;"	v
Bxm2	lib/tensor_toolbox/eig_geap.m	/^    Bxm2 = data.Bxm2;    $/;"	v
Bzerosubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^        Bzerosubs = allsubs(B);$/;"	v
Bzerosubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^        Bzerosubs = setdiff(allsubs(B),B.subs,'rows');$/;"	v
C	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        C = Xmargs{i}*X'\/(X*X' + options.Cnoise + (totalVar*thisLambda)^2*eye(size(X,1)));$/;"	v
C	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    C               = ws.estParams.C;$/;"	v
C	lib/TrialData/util/predict_kalman.m	/^C = kf_model.C;$/;"	v
C	lib/TrialData/util/train_kalman.m	/^C = X'*Y*(Y'*Y)^-1;$/;"	v
C	lib/tensor_toolbox/@ktensor/minus.m	/^    C = ktensor(lambda,u);$/;"	v
C	lib/tensor_toolbox/@ktensor/mtimes.m	/^    C = ktensor(A * B.lambda, B.u);$/;"	v
C	lib/tensor_toolbox/@ktensor/mtimes.m	/^    C = ktensor(B * A.lambda, A.u);$/;"	v
C	lib/tensor_toolbox/@ktensor/plus.m	/^    C = ktensor(lambda, u);$/;"	v
C	lib/tensor_toolbox/@ktensor/plus.m	/^    C = plus(B,A); %Call plus for sumtensor$/;"	v
C	lib/tensor_toolbox/@ktensor/score.m	/^    C = P.*C;$/;"	v
C	lib/tensor_toolbox/@ktensor/score.m	/^C = double(collapse(Cbig,3,@prod));$/;"	v
C	lib/tensor_toolbox/@ktensor/times.m	/^        C = times(B,A);$/;"	v
C	lib/tensor_toolbox/@sptensor/and.m	/^        C = sptensor(A.subs,true,size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/and.m	/^        C = sptensor([],[],size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/and.m	/^    C = and(A,BB);$/;"	v
C	lib/tensor_toolbox/@sptensor/and.m	/^    C = and(B,A);$/;"	v
C	lib/tensor_toolbox/@sptensor/and.m	/^    C = sptensor([A.subs; B.subs], [A.vals; B.vals], size(A), ...$/;"	v
C	lib/tensor_toolbox/@sptensor/ldivide.m	/^C = rdivide(B,A);$/;"	v
C	lib/tensor_toolbox/@sptensor/minus.m	/^    C = A - full(B);$/;"	v
C	lib/tensor_toolbox/@sptensor/minus.m	/^    C = full(A) - B;$/;"	v
C	lib/tensor_toolbox/@sptensor/minus.m	/^C = sptensor([A.subs; B.subs], [A.vals; -B.vals], size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/mldivide.m	/^    C = sptensor(newsubs,newvals,B.size);$/;"	v
C	lib/tensor_toolbox/@sptensor/mrdivide.m	/^    C = sptensor(newsubs,newvals,A.size);$/;"	v
C	lib/tensor_toolbox/@sptensor/mtimes.m	/^    C = sptensor(A.subs, A.vals * B, size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/mtimes.m	/^    C = sptensor(B.subs, B.vals * A, size(B));$/;"	v
C	lib/tensor_toolbox/@sptensor/or.m	/^    C = A | full(B);$/;"	v
C	lib/tensor_toolbox/@sptensor/or.m	/^    C = full(A) | B;$/;"	v
C	lib/tensor_toolbox/@sptensor/or.m	/^    C = sptensor([A.subs; B.subs], 1, size(A), @(x) length(x) >= 1);$/;"	v
C	lib/tensor_toolbox/@sptensor/plus.m	/^    C = A + full(B);$/;"	v
C	lib/tensor_toolbox/@sptensor/plus.m	/^    C = full(A) + B;$/;"	v
C	lib/tensor_toolbox/@sptensor/plus.m	/^    C = plus(B,A); % Call sumtensor's plus.$/;"	v
C	lib/tensor_toolbox/@sptensor/plus.m	/^C = sptensor([A.subs; B.subs], [A.vals; B.vals], size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/rdivide.m	/^        C = sptensor(csubs, cvals, size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/rdivide.m	/^    C = A .\/ full(B);$/;"	v
C	lib/tensor_toolbox/@sptensor/rdivide.m	/^    C = mrdivide(A,B);$/;"	v
C	lib/tensor_toolbox/@sptensor/rdivide.m	/^    C = sptensor(newsubs,newvals,size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/times.m	/^        C = sptensor(csubs, cvals, size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/times.m	/^    C = sptensor(A.subs, A.vals * B, size(A));$/;"	v
C	lib/tensor_toolbox/@sptensor/times.m	/^    C = sptensor(B.subs, B.vals * A, size(B));$/;"	v
C	lib/tensor_toolbox/@sptensor/xor.m	/^    C = sptensor([A.subs; B.subs], 1, size(A), @(x) length(x) == 1);$/;"	v
C	lib/tensor_toolbox/@sptensor/xor.m	/^    C = sptensor([A.subs; Bsubs], 1, size(A), @(x) length(x) == 1);$/;"	v
C	lib/tensor_toolbox/@sptensor/xor.m	/^    C = xor(A,full(B));$/;"	v
C	lib/tensor_toolbox/@sptensor/xor.m	/^    C = xor(full(A),B);$/;"	v
C	lib/tensor_toolbox/@symktensor/fg.m	/^    C = Data.C;$/;"	v
C	lib/tensor_toolbox/@symktensor/mtimes.m	/^    C = symktensor(A * B.lambda, B.u, B.m);$/;"	v
C	lib/tensor_toolbox/@symktensor/mtimes.m	/^    C = symktensor(B * A.lambda, A.u, A.m);$/;"	v
C	lib/tensor_toolbox/@symtensor/indices.m	/^C = zeros(sz,n);$/;"	v
C	lib/tensor_toolbox/@symtensor/mtimes.m	/^    C = A;$/;"	v
C	lib/tensor_toolbox/@symtensor/mtimes.m	/^    C = B;$/;"	v
C	lib/tensor_toolbox/@tenmat/mtimes.m	/^    C = A.data * B.data;$/;"	v
C	lib/tensor_toolbox/@tenmat/mtimes.m	/^    C = A;$/;"	v
C	lib/tensor_toolbox/@tenmat/mtimes.m	/^    C = B;$/;"	v
C	lib/tensor_toolbox/@tenmat/mtimes.m	/^    C = tenmat;$/;"	v
C	lib/tensor_toolbox/@tensor/mtimes.m	/^    C = A;$/;"	v
C	lib/tensor_toolbox/@tensor/mtimes.m	/^    C = B;$/;"	v
C	lib/tensor_toolbox/@ttensor/mtimes.m	/^    C = ttensor(A * B.core, B.u);$/;"	v
C	lib/tensor_toolbox/@ttensor/mtimes.m	/^    C = ttensor(B * A.core, A.u);$/;"	v
C	lib/tensor_toolbox/doc/ktensor_doc.m	/^C = rand(2,2); %<-- Likewise for C.$/;"	v
C	lib/tensor_toolbox/doc/sptenmat_doc.m	/^C = B'; %<-- Transposing the result fixes the problem.$/;"	v
C	lib/tensor_toolbox/doc/sptenmat_doc.m	/^C = full(B) %<-- Convert to a tenmat$/;"	v
C	lib/tensor_toolbox/doc/tenmat_doc.m	/^C = tenmat(X,[1 2],[4 3]) %<-- Order matters!$/;"	v
C	lib/tensor_toolbox/doc/tensor_doc.m	/^C = tensor(floor(5*rand(2,3,2))) %<-- Create another tensor.$/;"	v
C	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    C = C(tf_tmp);$/;"	v
C	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    C = arrayfun(@(x) x.name(1:end-2), C, 'UniformOutput', false);$/;"	v
C	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    C = dir(['..\/@' classnames{i}]);$/;"	v
C	lib/tensor_toolbox/maintenance/create_topcontents.m	/^C = create_dircontents('..');$/;"	v
C	lib/tensor_toolbox/maintenance/update_classlist.m	/^    C = create_dircontents(classdir,'Copyright',params.Results.Copyright);$/;"	v
C	lib/tensor_toolbox/tests/Test_Tensor.m	/^            C = rand(3,4); $/;"	v
C	lib/tensor_toolbox/tests/Test_Tensor.m	/^            C = rand(4,6);$/;"	v
C	lib/tensor_toolbox/tests/Test_Tensor.m	/^           C = rand(4,1); $/;"	v
CG	lib/tensor_toolbox/matrandcong.m	/^CG = gamma * ones(n,n) + (1-gamma) * eye(n);$/;"	v
CGR	lib/tensor_toolbox/matrandcong.m	/^CGR = chol(CG);$/;"	v
CI_append	lib/neuron-table/getPDsFromWeights.m	/^    CI_append = zeros(height(pdTable),2);$/;"	v
CI_thresh	lib/neuron-table/comparePDClouds.m	/^CI_thresh = pi\/4; % threshold for what's considered a tuned neuron in filtering$/;"	v
CIpercentile	lib/neuron-table/getTuningHull.m	/^CIpercentile = 95; % percent confidence interval$/;"	v
CN	lib/tensor_toolbox/teneye.m	/^    CN = (1:N);$/;"	v
CN	lib/tensor_toolbox/teneye.m	/^    CN = cumsum2(CN);$/;"	v
CN	lib/tensor_toolbox/teneye.m	/^    CN = zeros(BC,2,class(N));$/;"	v
CN	lib/tensor_toolbox/teneye.m	/^CN = class(N);$/;"	v
CN	lib/tensor_toolbox/teneye.m	/^CN = zeros(round(BC),K,class(N));$/;"	v
CP Decompositions	lib/tensor_toolbox/doc/html/cp.html	/^      <h1 id="home">CP Decompositions<\/h1>$/;"	h
CP-ALS	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><h2 id="2">CP-ALS<\/h2><p>Just a reminder of what CP-ALS does.<\/p><pre class="codeinput"/;"	i
CR	lib/tensor_toolbox/teneye.m	/^CR = ones(round(mch),K,class(N));$/;"	v
Call CP-APR	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^<\/pre><h2 id="2">Call CP-APR<\/h2><pre class="codeinput"><span class="comment">% Compute a solu/;"	i
Call eig_sshopm with no shift	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^<\/pre><h2 id="2">Call eig_sshopm with no shift<\/h2><p>The method with no shift will fail to co/;"	i
Call eig_sshopm with shift	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^<\/pre><h2 id="3">Call eig_sshopm with shift<\/h2><pre class="codeinput">[lambda, x, flag, it] =/;"	i
Call the cp_opt method	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="15">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here we specify a lower bound of zer/;"	i
Call the cp_opt method	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here is an example call to the cp_opt/;"	i
Call the cp_opt method	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_opt<\/tt> method<\/h2><p>Here is an example call to the cp_opt/;"	i
Call the cp_wopt method	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="10">Call the <tt>cp_wopt<\/tt> method<\/h2><pre class="codeinput">[M,~,output] = /;"	i
Call the cp_wopt method	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_op/;"	i
Call the cp_wopt method	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="11">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_o/;"	i
Call the cp_wopt method	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="5">Call the <tt>cp_wopt<\/tt> method<\/h2><p>Here is an example call to the cp_op/;"	i
Cbig	lib/tensor_toolbox/@ktensor/score.m	/^Cbig = tenzeros([RA,RB,N]);$/;"	v
Change the number of sampled rows in least squares solve	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="12">Change the number of sampled rows in least squares solve<\/h2><p>The default /;"	i
Change the order of the dimensions in CP	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="14">Change the order of the dimensions in CP<\/h2><pre class="codeinput">[M4,~,in/;"	i
Change the tolerance	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="16">Change the tolerance<\/h2><p>It's also possible to loosen or tighten the tole/;"	i
Changing the number of function evaluation samples	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="11">Changing the number of function evaluation samples<\/h2><p>The function evalu/;"	i
Changing the output frequency	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="10">Changing the output frequency<\/h2><p>Using the <tt>'printitn'<\/tt> option t/;"	i
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(fread(FID, 1       , 'uint32=>double'));$/;"	v
ChannelCount	lib/TrialData/util/openNSx_td.m	/^    ChannelCount               = double(typecast(BasicHeader(303:306), 'uint32'));$/;"	v
Check that the software is installed.	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="16">Check the output<\/h2><pre class="codeinput">exitmsg = output.ExitMsg$/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="11">Check the output<\/h2><pre class="codeinput">exitmsg = output.ExitMsg$/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="12">Check the output<\/h2><p>It's important to check the output of the optimizati/;"	i
Check the output	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="6">Check the output<\/h2><p>It's important to check the output of the optimizatio/;"	i
CheckFull	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function CheckFull(testCase)$/;"	f
Checking default parameters and recreating the same test problem	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="13">Checking default parameters and recreating the same test problem<\/h2><p>The /;"	i
Checklist	lib/tensor_toolbox/CONTRIBUTION_GUIDE.md	/^## Checklist$/;"	s	chapter:Tensor Toolbox Contribution Guide
Choice of Optimzation Method	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
CollapseMax	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function CollapseMax(testCase, szs)$/;"	f
CollapseScale	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function CollapseScale(testCase)$/;"	f
CollapseSum	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function CollapseSum(testCase, szs)$/;"	f
Collapsing and scaling tensors	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Collapsing and scaling tensors<\/h1><!--introd/;"	h
CompTitleHandles	lib/tensor_toolbox/@ktensor/viz.m	/^CompTitleHandles = gobjects(nc,1);$/;"	v
Compare	lib/tensor_toolbox/tests/Test_NewTTM.m	/^        function Compare(testCase, combo)$/;"	f
Compare the two solutions	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><img vspace="5" hspace="5" src="cp_als_doc_02.png" alt=""> <h2 id="8">Compare the two sol/;"	i
Comparing with CP-ALS	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="4">Comparing with CP-ALS<\/h2><p>CP-ALS may be somewhat faster, especially since /;"	i
Compute (full) HOSVD	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="6">Compute (full) HOSVD<\/h2><p>We compute the ST-HOSVD using the <tt>hosvd<\/tt>/;"	i
Compute low-rank HOSVD approximation	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="7">Compute low-rank HOSVD approximation<\/h2><p>The norm squared of the first two/;"	i
Computing Tucker via the HOSVD	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	h
Computing the Frobenius norm of a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="41">Computing the Frobenius norm of a tensor<\/h2><p><tt>norm<\/tt> computes the /;"	i
Computing the score of the match between two symktensors	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="17">Computing the score of the match between two symktensors<\/h2><p>The function/;"	i
Constituent parts of a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="5">Constituent parts of a ktensor<\/h2><pre class="codeinput">X.lambda <span clas/;"	i
Constituent parts of a sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="11">Constituent parts of a sptenmat<\/h2><pre class="codeinput">A.subs <span clas/;"	i
Constituent parts of a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="10">Constituent parts of a sptensor<\/h2><pre class="codeinput">X = sptenrand([40/;"	i
Constituent parts of a tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="12">Constituent parts of a tenmat<\/h2><pre class="codeinput">A.data <span class=/;"	i
Constituent parts of a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="6">Constituent parts of a ttensor<\/h2><pre class="codeinput">X.core <span class=/;"	i
Construct	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Construct(testCase, nd, maxdim, gen)$/;"	f
ConstructAlt	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function ConstructAlt(testCase,szs)$/;"	f
ConstructBadSize	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function ConstructBadSize(testCase)$/;"	f
ConstructByCopy	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ConstructByCopy(testCase)$/;"	f
ConstructByGen	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ConstructByGen(testCase, m, n, g)$/;"	f
ConstructBySym	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ConstructBySym(testCase,m,n,g)$/;"	f
ConstructByVal	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ConstructByVal(testCase, m, n, g)$/;"	f
Contact	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="contact">Contact<\/h2>$/;"	i
Contents	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Collapsing and scaling tensors<\/h1><!--introd/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for CANDECOMP\/PARAF/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating Poisson Regression for fitting CP /;"	i
Contents	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating randomized least squares for CP De/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Contents	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Contents	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^  <\/style><\/head><body><div class="content"><h1>GCP-OPT Examples with Amino Acids Dataset<\/h1/;"	i
Contents	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Contents	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Function Types for GCP<\/h1><!--introduction--/;"	i
Contents	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	i
Contents	lib/tensor_toolbox/doc/html/identities_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Identities and relationships of tensors<\/h1></;"	i
Contents	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Kruskal tensors<\/h1><!--introduction--><p>Kru/;"	i
Contents	lib/tensor_toolbox/doc/html/multiply_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Multiplying tensors<\/h1><!--introduction--><!/;"	i
Contents	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generating the leading mode-n vectors<\/h1><!-/;"	i
Contents	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting sparse tensors to matrices and vice/;"	i
Contents	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sparse tensors<\/h1><!--introduction--><p>MATL/;"	i
Contents	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Shifted symmetric higher-order power method<\//;"	i
Contents	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sums of structured tensors<\/h1><!--introducti/;"	i
Contents	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric Kruskal tensors<\/h1><!--introductio/;"	i
Contents	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric tensors<\/h1><!--introduction--><p>A/;"	i
Contents	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting a tensor to a matrix and vice versa/;"	i
Contents	lib/tensor_toolbox/doc/html/tensor_doc.html	/^  <\/head><body><div class="content"><h1>Tensors<\/h1><!--introduction--><p>Tensors are extensio/;"	i
Contents	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Creating test problems and initial guesses<\/h/;"	i
Contents	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Tucker tensors<\/h1><!--introduction--><p>Tuck/;"	i
Contents	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for Tucker model<\/h/;"	i
Contract	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Contract(testCase)$/;"	f
Contraction on tensors (contract for tensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="65">Contraction on tensors (contract for tensor)<\/h2><p>The function <tt>contrac/;"	i
Control sign ambiguity of factor matrices	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="17">Control sign ambiguity of factor matrices<\/h2><p>The default behavior of <tt/;"	i
Converting Tensors and Matrices	lib/tensor_toolbox/doc/html/converting.html	/^      <h1 id="home">Converting Tensors and Matrices<\/h1>$/;"	h
Converting a tensor to a matrix and vice versa	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting a tensor to a matrix and vice versa/;"	h
Converting sparse tensors to matrices and vice versa	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting sparse tensors to matrices and vice/;"	h
Create a SPARSE example problem with missing data.	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="8">Create a SPARSE example problem with missing data.<\/h2><p>Here we have 95% mi/;"	i
Create a SPARSE example problem with missing data.	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="8">Create a SPARSE example problem with missing data.<\/h2><p>Here we have 95% mi/;"	i
Create a [2 2 1] approximation	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="3">Create a [2 2 1] approximation<\/h2><pre class="codeinput">T = tucker_als(X,[2/;"	i
Create a [2 2 2] approximation	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="2">Create a [2 2 2] approximation<\/h2><pre class="codeinput">T = tucker_als(X,2)/;"	i
Create a data tensor of size [5 4 3]	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for Tucker model<\/h/;"	i
Create a random symtensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="7">Create a random symtensor<\/h2><pre class="codeinput">S4 = symtensor(@randn, 3/;"	i
Create an all ones symtensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="6">Create an all ones symtensor<\/h2><p>The first argument is the generating func/;"	i
Create an example Rayleigh tensor model and data instance.	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><h2 id="12">Create an example Rayleigh tensor model and data instance.<\/h2><p>Consider a/;"	i
Create an example problem with missing data.	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Create an example problem with missing data.	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Create an example problem.	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="12">Nonnegative factorization<\/h2><p>We can employ lower bounds to get a nonnega/;"	i
Create an example problem.	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="3">Create an example problem.<\/h2><p>Create an example 50 x 40 x 30 tensor with /;"	i
Create an example problem.	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="2">Create an example problem.<\/h2><p>Create an example 50 x 40 x 30 tensor with /;"	i
Create and test a Poisson count tensor.	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><h2 id="24">Create and test a Poisson count tensor.<\/h2><pre class="codeinput">nc = 3;$/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="4">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="3">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="4">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="9">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="3">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create initial guess using 'nvecs'	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="9">Create initial guess using 'nvecs'<\/h2><pre class="codeinput">M_init = create/;"	i
Create missing data problems with a pre-specified pattern	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="28">Create missing data problems with a pre-specified pattern<\/h2><p>It's also p/;"	i
Creating New Tests	lib/tensor_toolbox/tests/README.md	/^## Creating New Tests$/;"	s	chapter:Tests for Tensor Toolbox for MATLAB
Creating a CP test problem	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Creating test problems and initial guesses<\/h/;"	i
Creating a Tucker test problem	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="5">Creating a Tucker test problem<\/h2><p>The <tt>create_problem<\/tt> function c/;"	i
Creating a ktensor from its constituent parts	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="7">Creating a ktensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	i
Creating a one-dimensional ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="4">Creating a one-dimensional ktensor<\/h2><pre class="codeinput">Y = ktensor({ra/;"	i
Creating a one-dimensional sptensor.	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="6">Creating a one-dimensional sptensor.<\/h2><pre class="codeinput">X = sptensor(/;"	i
Creating a one-dimensional tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="3">Creating a one-dimensional tensor<\/h2><p>The tensor class explicitly supports/;"	i
Creating a one-dimensional ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="5">Creating a one-dimensional ttensor<\/h2><pre class="codeinput">Z = ttensor(ten/;"	i
Creating a sparse tensor from its constituent parts	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="13">Creating a sparse tensor from its constituent parts<\/h2><pre class="codeinpu/;"	i
Creating a sptenmat (sparse tensor as sparse matrix) object	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting sparse tensors to matrices and vice/;"	i
Creating a sptenmat from its constituent parts	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="16">Creating a sptenmat from its constituent parts<\/h2><pre class="codeinput">B /;"	i
Creating a sptenmat with no nonzeros	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="18">Creating a sptenmat with no nonzeros<\/h2><pre class="codeinput">A = sptenmat/;"	i
Creating a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sparse tensors<\/h1><!--introduction--><p>MATL/;"	i
Creating a symtensor from a nonsymmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="4">Creating a symtensor from a nonsymmetric tensor<\/h2><p>A symmetric tensors ca/;"	i
Creating a symtensor from a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="2">Creating a symtensor from a symmetric tensor<\/h2><p>We can construct a <tt>sy/;"	i
Creating a tenmat (tensor as matrix) object	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Converting a tensor to a matrix and vice versa/;"	i
Creating a tenmat by specifying the dimensions mapped to the columns	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="6">Creating a tenmat by specifying the dimensions mapped to the columns<\/h2><p>L/;"	i
Creating a tenmat by specifying the dimensions mapped to the rows	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="5">Creating a tenmat by specifying the dimensions mapped to the rows<\/h2><p>If j/;"	i
Creating a tenmat from its constituent parts	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="16">Creating a tenmat from its constituent parts<\/h2><pre class="codeinput">B = /;"	i
Creating a tensor from an array	lib/tensor_toolbox/doc/html/tensor_doc.html	/^  <\/head><body><div class="content"><h1>Tensors<\/h1><!--introduction--><p>Tensors are extensio/;"	i
Creating a tensor from its constituent parts	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="10">Creating a tensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	i
Creating a ttensor from its constituent parts	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="8">Creating a ttensor from its constituent parts<\/h2><pre class="codeinput">Y = /;"	i
Creating a ttensor with a tensor core	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Tucker tensors<\/h1><!--introduction--><p>Tuck/;"	i
Creating an all-zero sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="8">Creating an all-zero sptensor<\/h2><pre class="codeinput">X = sptensor([],[],[/;"	i
Creating an empty ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="8">Creating an empty ktensor<\/h2><pre class="codeinput">Z = ktensor <span class=/;"	i
Creating an empty sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="14">Creating an empty sptensor<\/h2><p>An empty constructor exists, primarily to /;"	i
Creating an empty tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="17">Creating an empty tenmat<\/h2><pre class="codeinput">B = tenmat <span class="/;"	i
Creating an empty tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="11">Creating an empty tensor<\/h2><p>An empty constructor exists, primarily to su/;"	i
Creating an empty ttensor.	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="9">Creating an empty ttensor.<\/h2><pre class="codeinput">X = ttensor <span class/;"	i
Creating an emtpy sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="19">Creating an emtpy sptenmat<\/h2><pre class="codeinput">A = sptenmat <span cla/;"	i
Creating dense missing data problems	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="22">Creating dense missing data problems<\/h2><p>It's possible to create problems/;"	i
Creating sparse missing data problems.	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="25">Creating sparse missing data problems.<\/h2><p>If <tt>Sparse_M<\/tt> is set t/;"	i
Creating sparse problems (CP only)	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="29">Creating sparse problems (CP only)<\/h2><p>If we assume each model parameter /;"	i
Creating sumtensors	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sums of structured tensors<\/h1><!--introducti/;"	i
Creating test problems and initial guesses	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Creating test problems and initial guesses<\/h/;"	h
D	lib/TrialData/Tools/dimReduce.m	/^            D = L2_distance(data', data');$/;"	v
D	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    D = U'*C;$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D =  D.*(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D =  D.\/(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = min(D,INF); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = min(D,repmat(D(:,k),[1 N])+repmat(D(k,:),[N 1])); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^         D = sparse(Di(1:counter), Dj(1:counter), Ds(1:counter));$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = dijkstra(D, landmarks);$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = max(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = min(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = sparse(D); $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^     D = sparse(Di(1:counter), Dj(1:counter), Ds(1:counter));$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^    D = dijkstra(Dconf, landmarks);$/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^D = full(D(landmarks,Y.index))'; $/;"	v
D	lib/TrialData/util/lib/isomap/IsomapII.m	/^D = reshape(D,N*nl,1); $/;"	v
D	lib/TrialData/util/lib/isomap/dijk.m	/^D = zeros(length(s),length(t));$/;"	v
D	lib/TrialData/util/lib/isomap/dijkstra.m	/^D = dijk(G, S, 1:N);$/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D =  D.\/(D<=epsilon); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D = min(D,INF); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^     D = min(D,repmat(D(:,k),[1 N])+repmat(D(k,:),[N 1])); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = D(Y.index, Y.index); $/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = min(D,D');    %% Make sure distance matrix is symmetric$/;"	v
D	lib/TrialData/util/lib/isomap/isomap.m	/^D = reshape(D,N^2,1); $/;"	v
D	lib/tensor_toolbox/@ktensor/normalize.m	/^    D = diag(nthroot(X.lambda,ndims(X)));$/;"	v
D	lib/tensor_toolbox/@ktensor/tocell.m	/^D = diag(lsplit);$/;"	v
D	lib/tensor_toolbox/@symktensor/normalize.m	/^    D = diag(nthroot(abs(X.lambda),X.m));$/;"	v
D	lib/tensor_toolbox/cp_arls.m	/^D = length(dims);$/;"	v
D	lib/tensor_toolbox/create_problem.m	/^    D = symmetrize(D, params.Symmetric);$/;"	v
D	lib/tensor_toolbox/create_problem.m	/^D = Z + params.Noise * norm(Z) * Rdm \/ norm(Rdm);$/;"	v
D	lib/tensor_toolbox/teneye.m	/^D = ones(1,N-1,CN);  % Use this for cumsumming later.$/;"	v
D	lib/tensor_toolbox/tests/Test_Tensor.m	/^            D = rand(3,2);$/;"	v
D	lib/tensor_toolbox/tests/Test_Tensor.m	/^           D = rand(2,1);$/;"	v
D	lib/tensor_toolbox/tucker_sym.m	/^D = size(S,1);$/;"	v
Data tensor	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Shifted symmetric higher-order power method<\//;"	i
DataBegTimestamp	lib/TrialData/util/openNEV_td.m	/^            DataBegTimestamp = digserTimestamp(AsteriskIndices);$/;"	v
DataLength	lib/TrialData/util/openNSx_td.m	/^    DataLength = EndPacket - StartPacket + 1;$/;"	v
Dconf	lib/TrialData/util/lib/isomap/IsomapII.m	/^    Dconf = D .\/ Mij;$/;"	v
Declaring a symmetric Kruskal tensor with symktensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric Kruskal tensors<\/h1><!--introductio/;"	i
DecreaseKey	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeap::DecreaseKey(FibHeapNode *theNode, FibHeapNode& NewKey)$/;"	f	class:FibHeap	typeref:typename:int
Definition of a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric tensors<\/h1><!--introduction--><p>A/;"	i
Delete	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeap::Delete(FibHeapNode *theNode)$/;"	f	class:FibHeap	typeref:typename:int
Di	lib/TrialData/util/lib/isomap/IsomapII.m	/^         Di = zeros(N*K,1);      Dj = zeros(N*K,1);       Ds = zeros(N*K,1); $/;"	v
Di	lib/TrialData/util/lib/isomap/IsomapII.m	/^     Di = zeros(N*(K+1),1);      Dj = zeros(N*(K+1),1);       Ds = zeros(N*(K+1),1); $/;"	v
Di	lib/TrialData/util/lib/isomap/dijk.m	/^   Di = Inf*ones(n,1); Di(j) = 0;$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^            DigiValues = char(DigiValues);$/;"	v
DigiValues	lib/TrialData/util/openNEV_td.m	/^DigiValues                 = tempDigiVals(digserIndices);$/;"	v
Displaying a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="44">Displaying a ktensor<\/h2><pre class="codeinput">disp(X) <span class="comment/;"	i
Displaying a tenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="36">Displaying a tenmat<\/h2><p>Shows the original tensor dimensions, the modes m/;"	i
Displaying a tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="32">Displaying a tenmat<\/h2><p>Shows the original tensor dimensions, the modes m/;"	i
Displaying a tensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="63">Displaying a tensor<\/h2><p>The function <tt>disp<\/tt> handles small and lar/;"	i
Displaying a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="74">Displaying a tensor<\/h2><p>The function <tt>disp<\/tt> can be used to displa/;"	i
Displaying a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="28">Displaying a ttensor<\/h2><p>The tensor displays by displaying the core and e/;"	i
Displaying data	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="45">Displaying data<\/h2><p>The <tt>datadisp<\/tt> function allows the user to as/;"	i
Dj	lib/TrialData/util/lib/isomap/dijk.m	/^         Dj = Di(j);$/;"	v
Documentation	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^            <h3>Documentation<\/h3>$/;"	j
Download	lib/tensor_toolbox/README.md	/^### Download$/;"	S	section:MATLAB Tensor Toolbox, Version 3.1""Getting started and using the software
Download	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="download">Download<\/h3>$/;"	j
E	lib/TrialData/util/lib/isomap/IsomapII.m	/^         E = int8(1-(D==INF));  %%  Edge information for subsequent graph overlay$/;"	v
E	lib/TrialData/util/lib/isomap/IsomapII.m	/^         E = sparse(a,b,ones(size(a))); $/;"	v
E	lib/TrialData/util/lib/isomap/isomap.m	/^     E = int8(1-(D==INF));  %%  Edge information for subsequent graph overlay$/;"	v
EZZ	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    EZZ     = I - beta * L + beta * cX_beta;$/;"	v
Eigenproblem	lib/tensor_toolbox/doc/html/eigen.html	/^      <h1 id="home">Eigenproblem<\/h1>$/;"	h
Elec	lib/TrialData/util/openNSx_td.m	/^            Elec = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
ElectrodeID	lib/TrialData/util/openNEV_td.m	/^            ElectrodeID                       = typecast(ExtendedHeader(9:10), 'uint16');$/;"	v
Empty	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^        function Empty(testCase)$/;"	f
End	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function End(testCase)$/;"	f
EndPacket	lib/TrialData/util/openNSx_td.m	/^	EndPacket = EndPacket - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^            EndPacket = EndPacket * NSx.MetaTags.SamplingFreq;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints - 1;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = NSx.MetaTags.DataPoints;$/;"	v
EndPacket	lib/TrialData/util/openNSx_td.m	/^        EndPacket = inputArgument(end);$/;"	v
Evaluate the output	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="18">Evaluate the output<\/h2><p>We can "score" the similarity of the model comput/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="8">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="8">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="12">Evaluate the output<\/h2><pre class="codeinput">scr = score(M,M_true)$/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^<\/pre><h2 id="7">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="13">Evaluate the output<\/h2><p>We can "score" the similarity of the model comput/;"	i
Evaluate the output	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="7">Evaluate the output<\/h2><p>We can "score" the similarity of the model compute/;"	i
Example on Gaussian distributed	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^fsampler = @() deal(xsubs, xvals, wghts);'<\/pre><div><ul><li><tt>'fsamp'<\/tt> - Number of samp/;"	i
Examples of collapsing a sptensor	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="8">Examples of collapsing a sptensor<\/h2><pre class="codeinput">X = sptenrand([4/;"	i
Examples of collapsing a tensor	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Collapsing and scaling tensors<\/h1><!--introd/;"	i
ExtHeaderLength	lib/TrialData/util/openNSx_td.m	/^ExtHeaderLength = 66;$/;"	v
ExtendedHeader	lib/TrialData/util/openNEV_td.m	/^    ExtendedHeader = fread(FID, 32, '*uint8');$/;"	v
ExtendedHeader	lib/TrialData/util/openNSx_td.m	/^    ExtendedHeader             = fread(FID, readSize, '*uint8');$/;"	v
ExtractMin	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode *FibHeap::ExtractMin()$/;"	f	class:FibHeap	typeref:typename:FibHeapNode *
F	lib/tensor_toolbox/@symktensor/fg.m	/^    F = F + ftmp;$/;"	v
F	lib/tensor_toolbox/@symktensor/fg.m	/^    F = F1 + F2 + F3;$/;"	v
F	lib/tensor_toolbox/@symktensor/fg.m	/^    F = sum(W.*(diffs.^2));$/;"	v
F	lib/tensor_toolbox/cp_apr.m	/^    F = cell(N,1);$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg.m	/^    F = G;$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg.m	/^    F = sum(Fvec);$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg.m	/^F = [];$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    F = G;$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    F = sum( weights .* Fvec );$/;"	v
F	lib/tensor_toolbox/tt_gcp_fg_est.m	/^F = [];$/;"	v
F1	lib/tensor_toolbox/@symktensor/fg.m	/^    F1 = Data.normAsqr;$/;"	v
F2	lib/tensor_toolbox/@symktensor/fg.m	/^    F2 = -2 * dot(lambda,Z);$/;"	v
F3	lib/tensor_toolbox/@symktensor/fg.m	/^    F3 = lambda' * XtXM * lambda;$/;"	v
FHN_Assign	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::FHN_Assign(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:void
FHN_Cmp	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::FHN_Cmp(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
FID	lib/TrialData/util/openNEV_td.m	/^FID                       = fopen(fileFullPath, 'r', 'ieee-le');$/;"	v
FID	lib/TrialData/util/openNSx_td.m	/^FID                       = fopen([path fname], 'r', 'ieee-le');$/;"	v
FR	lib/TrialData/Tools/addFiringRates.m	/^            FR = spikes\/bin_size;$/;"	v
FactorAxes	lib/tensor_toolbox/@ktensor/viz.m	/^FactorAxes = gobjects(nd,nc); % Factor Axes$/;"	v
FibHeap	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeap::FibHeap()$/;"	f	class:FibHeap
FibHeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode::FibHeapNode()$/;"	f	class:FibHeapNode
Find	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Find(testCase, szs)$/;"	f
Flags	lib/TrialData/util/openNEV_td.m	/^Flags = struct;$/;"	v
Frobenius norm of a tensor	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="82">Frobenius norm of a tensor<\/h2><p>The Frobenius norm of any type of tensor m/;"	i
Full	lib/tensor_toolbox/tests/Test_ExportData.m	/^        function Full(testCase)$/;"	f
Full	lib/tensor_toolbox/tests/Test_ImportData.m	/^        function Full(testCase)$/;"	f
Function Types for GCP	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Function Types for GCP<\/h1><!--introduction--/;"	h
Functionality	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="functionality">Functionality<\/h2>$/;"	i
Further examples of the sumtensor constructer	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><p>The difference in memory between the full and sumtensor is a factor of 10^5! Hence we /;"	i
Fvec	lib/tensor_toolbox/tt_gcp_fg.m	/^        Fvec = W(:).*Fvec;  % be sure to zero out any unknown entries$/;"	v
Fvec	lib/tensor_toolbox/tt_gcp_fg.m	/^    Fvec = f(Xv, Mv); % F is a vector$/;"	v
Fvec	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    Fvec = fh(xvals,mvals);$/;"	v
G	lib/tensor_toolbox/@symktensor/fg.m	/^    G = G + stackgrad(gtmp);$/;"	v
G	lib/tensor_toolbox/@symktensor/fg.m	/^    G = stackgrad(G,fgopts.nolambda);$/;"	v
G	lib/tensor_toolbox/@ttensor/nvecs.m	/^    G = full(G);$/;"	v
G	lib/tensor_toolbox/@ttensor/nvecs.m	/^G = X.core;$/;"	v
G	lib/tensor_toolbox/cp_wopt.m	/^G = cell(N,1);$/;"	v
G	lib/tensor_toolbox/doc/hosvd_doc.m	/^G = tenrandblk(bsz,bsn,true);$/;"	v
G	lib/tensor_toolbox/hosvd.m	/^    G = Y;$/;"	v
G	lib/tensor_toolbox/hosvd.m	/^    G = ttm(Y,U,'t');$/;"	v
G	lib/tensor_toolbox/teneye.m	/^G = cumprod(1:(M-1));  % Holds the sizes of P.$/;"	v
G	lib/tensor_toolbox/tenrandblk.m	/^    G = G + block;$/;"	v
G	lib/tensor_toolbox/tenrandblk.m	/^G = tensor(@zeros,gsz);$/;"	v
G	lib/tensor_toolbox/tt_cp_fg.m	/^G = cell(N,1);$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg.m	/^    G = cell2mat(cellfun(@(x) x(:), G, 'UniformOutput', false));$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg.m	/^G = [];$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg.m	/^G = mttkrps(Y,M.u);$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    G = cell2mat(cellfun(@(x) x(:), G, 'UniformOutput', false));$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg_est.m	/^G = [];$/;"	v
G	lib/tensor_toolbox/tt_gcp_fg_est.m	/^G = cell(d,1);$/;"	v
GCP with ADAM	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_03.png" alt=""> <h2 id="5">GCP with ADA/;"	i
GCP with Beta	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_06.png" alt=""> <h2 id="8">GCP with Bet/;"	i
GCP with Gamma (terrible!)	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_04.png" alt=""> <h2 id="6">GCP with Gam/;"	i
GCP with Gaussian	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_01.png" alt=""> <h2 id="3">GCP with Gau/;"	i
GCP with Gaussian and Missing Data	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_02.png" alt=""> <h2 id="4">GCP with Gau/;"	i
GCP with Huber + Lower Bound	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_amino_doc_05.png" alt=""> <h2 id="7">GCP with Hub/;"	i
GCP-OPT Examples with Amino Acids Dataset	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^  <\/style><\/head><body><div class="content"><h1>GCP-OPT Examples with Amino Acids Dataset<\/h1/;"	h
Gamma	lib/tensor_toolbox/tt_cp_fg.m	/^Gamma = cell(N,1);$/;"	v
Gamma (nonnegative real-valued data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="7">Gamma (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	i
Gaussian (real-valued data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Function Types for GCP<\/h1><!--introduction--/;"	i
Generalized CP (GCP) Tensor Decomposition	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	h
Generate a core with different accuracies for different sizes	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="3">Generate a core with different accuracies for different sizes<\/h2><p>We will /;"	i
Generate bigger data tensor with core described above	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="13">Generate bigger data tensor with core described above<\/h2><p>Uses the same p/;"	i
Generate data tensor with core described above	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="5">Generate data tensor with core described above<\/h2><p>We take the core G and /;"	i
Generate initial guess of the corret size	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="14">Generate initial guess of the corret size<\/h2><pre class="codeinput">M_init /;"	i
Generating an initial guess	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="31">Generating an initial guess<\/h2><p>The <tt>create_guess<\/tt> function creat/;"	i
Generating data from an existing solution	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="21">Generating data from an existing solution<\/h2><p>It's possible to skip the s/;"	i
Generating the leading mode-n vectors	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generating the leading mode-n vectors<\/h1><!-/;"	h
Gest	lib/tensor_toolbox/gcp_opt.m	/^            Gest = tt_gcp_fg_est(M,fh,gh,gsubs,gvals,gwts,false,true,false,false,crng);$/;"	v
GetIndexValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      long int GetIndexValue() { return IndexV; };$/;"	f	class:HeapNode	typeref:typename:long int	file:
GetKeyValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      double GetKeyValue() { return N; };       \/* !!!! *\/$/;"	f	class:HeapNode	typeref:typename:double	file:
Getting Started	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h1 id="home">Getting Started<\/h1>$/;"	h
Getting Started	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h2 id="getting-started">Getting Started<\/h2>$/;"	i
Getting help	lib/tensor_toolbox/README.md	/^### Getting help$/;"	S	section:MATLAB Tensor Toolbox, Version 3.1""Getting started and using the software
Getting help	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="gettinghelp">Getting help<\/h3>$/;"	j
Getting started and using the software	lib/tensor_toolbox/README.md	/^## Getting started and using the software$/;"	s	chapter:MATLAB Tensor Toolbox, Version 3.1
GlobalAxis	lib/tensor_toolbox/@ktensor/viz.m	/^GlobalAxis = axes('Position',[0 0 1 1]); % Global Axes$/;"	v
GnT	lib/tensor_toolbox/@ttensor/nvecs.m	/^    GnT = double(sptenmat(G,n,'t'));$/;"	v
GnT	lib/tensor_toolbox/@ttensor/nvecs.m	/^    GnT = double(tenmat(G,n,'t'));$/;"	v
Grnd	lib/tensor_toolbox/tenrandblk.m	/^Grnd = tensor(@(sz) sign(randn(sz)) .* (0.1*rand(sz)+0.9), gsz);$/;"	v
GroupedSymmetries	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function GroupedSymmetries(testCase,symver,issymver)$/;"	f
H	lib/tensor_toolbox/@ttensor/nvecs.m	/^    H = full(H);$/;"	v
H	lib/tensor_toolbox/@ttensor/nvecs.m	/^H = ttm(X.core,V);$/;"	v
H	lib/tensor_toolbox/cp_apr.m	/^    H = zeros(num_free,num_free);$/;"	v
H	lib/tensor_toolbox/eig_geap.m	/^    H = m * H;$/;"	v
H	lib/tensor_toolbox/eig_geap.m	/^H = H1dm + H2dm;$/;"	v
H1dm	lib/tensor_toolbox/eig_geap.m	/^    H1dm = ((m*Axm)\/(Bxm^3)) * mat1 ...$/;"	v
H1dm	lib/tensor_toolbox/eig_geap.m	/^    H1dm = (m-1)*Axm2;$/;"	v
H2dm	lib/tensor_toolbox/eig_geap.m	/^H2dm = alpha * mat4;$/;"	v
HPF_cutoff	lib/TrialData/td_limblab/parseFileByTrial.m	/^HPF_cutoff  =  10; % for EMG butterworth filter$/;"	v
HPF_cutoff	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^HPF_cutoff      = 750; % in Hz$/;"	v
HeaderBytes	lib/TrialData/util/openNSx_td.m	/^    HeaderBytes                = double(typecast(BasicHeader(3:6), 'uint32'));$/;"	v
HeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      HeapNode() : FibHeapNode() { N = 0; };   $/;"	f	class:HeapNode	file:
HeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^class HeapNode : public FibHeapNode$/;"	c	file:
Hessian_free	lib/tensor_toolbox/cp_apr.m	/^    Hessian_free = getHessian(ups_row, Pi, free_indices);$/;"	v
Higher-order Singular Value Decomposition (HOSVD) and Sequentially-truncased HOSVD (ST-HOSVD)	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	i
HnT	lib/tensor_toolbox/@ttensor/nvecs.m	/^    HnT = double(sptenmat(H,n,'t'));$/;"	v
HnT	lib/tensor_toolbox/@ttensor/nvecs.m	/^    HnT = double(tenmat(H,n,'t'));$/;"	v
Home Page	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^		<h3>Home<font size="3"> <\/font>Page<\/h3>$/;"	j
How to Cite	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="how-to-cite">How to Cite<\/h2>$/;"	i
How to Contribute	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="contribute">How to Contribute<\/h2>$/;"	i
How to cite	lib/tensor_toolbox/README.md	/^## How to cite$/;"	s	chapter:MATLAB Tensor Toolbox, Version 3.1
How well does the approximate fit do?	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="5">How well does the approximate fit do?<\/h2><p>It is possible to check the accu/;"	i
Hplotspace	lib/tensor_toolbox/@ktensor/viz.m	/^Hplotspace = 1 - res.LeftSpace - res.RightSpace - (nd - 1) * res.HorzSpace;$/;"	v
Huber (nonnegative real-valued data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="8">Huber (nonnegative real-valued data)<\/h2><p>This is indicated by specifying t/;"	i
I	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  I     = eye(zDim);$/;"	v
I	lib/tensor_toolbox/@symktensor/fg.m	/^    I = Data.I;$/;"	v
I	lib/tensor_toolbox/@symktensor/full.m	/^I = zeros(sz,m);$/;"	v
I	lib/tensor_toolbox/@symtensor/full.m	/^        I = indices(X);$/;"	v
I	lib/tensor_toolbox/@symtensor/indices.m	/^I = zeros(sz,m);$/;"	v
I	lib/tensor_toolbox/@symtensor/symtensor.m	/^    I = zeros(sz,m);$/;"	v
I2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            I2 = indices(X);$/;"	v
ID	lib/neuron-table/comparePDClouds.m	/^    ID = pdTable1(:,{'monkey','date','signalID'});$/;"	v
ID	lib/neuron-table/getTuningHull.m	/^    ID = tuningTable(:,meta_header_idx);$/;"	v
ID	lib/neuron-table/plotWeightClouds.m	/^    ID = tuningTable(:,{'monkey','date','signalID'});$/;"	v
INF	lib/TrialData/util/lib/isomap/IsomapII.m	/^     INF =  1000*max(max(D))*N;  %% effectively infinite distance$/;"	v
INF	lib/TrialData/util/lib/isomap/IsomapII.m	/^     INF = inf; $/;"	v
INF	lib/TrialData/util/lib/isomap/isomap.m	/^INF =  1000*max(max(D))*N;  %% effectively infinite distance$/;"	v
Identities and relationships of tensors	lib/tensor_toolbox/doc/html/identities_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Identities and relationships of tensors<\/h1></;"	h
Important Information	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Important Information	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
Increase the maximium number of iterations	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="6">Increase the maximium number of iterations<\/h2><p>Note that the previous run /;"	i
IndexV	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      long int IndexV;$/;"	m	class:HeapNode	typeref:typename:long int	file:
Inner product (innerprod)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="63">Inner product (innerprod)<\/h2><p>The function <tt>innerprod<\/tt> efficientl/;"	i
Inner product of Kruskal operator with a tensor	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="24">Inner product of Kruskal operator with a tensor<\/h2><p>The inner product of /;"	i
Innerprod	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Innerprod(testCase, nd, maxdim, gen)            $/;"	f
Inputs	lib/TrialData/util/openNEV_td.m	/^            Inputs                     = {'Digital'; 'AnCh1'; 'AnCh2'; 'AnCh3'; 'AnCh4'; 'AnCh5'/;"	v
Insert	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Insert(FibHeapNode *NewNode)$/;"	f	class:FibHeap	typeref:typename:void
Installation	lib/tensor_toolbox/README.md	/^### Installation$/;"	S	section:MATLAB Tensor Toolbox, Version 3.1""Getting started and using the software
Installation	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="installation">Installation<\/h3>$/;"	j
IntCmp	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int IntCmp(const void *pA, const void *pB)$/;"	f	typeref:typename:int
Intercr	lib/TrialData/util/compute_pseudo_R2.m	/^  Intercr = sum(Y.*log(eps+Ymean) - Ymean);$/;"	v
IsomapII	lib/TrialData/util/lib/isomap/IsomapII.m	/^function [Y, R, E] = IsomapII(D, n_fcn, n_size, options)$/;"	f
J	lib/tensor_toolbox/@ttensor/innerprod.m	/^        J = ttm(Y.core, W);$/;"	v
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^         K = 2*max(sum(tmp'<epsilon));    % just to be safe$/;"	v
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^         K = options.Kmax; $/;"	v
K	lib/TrialData/util/lib/isomap/IsomapII.m	/^     K = n_size; $/;"	v
K	lib/TrialData/util/lib/isomap/isomap.m	/^     K = n_size; $/;"	v
K	lib/TrialData/util/predict_kalman.m	/^    K = Vpred * C' * inv(S); % Kalman gain matrix$/;"	v
K	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    K = fixsigns_oneargin(K);$/;"	v
K	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    K = fixsigns_twoargin(K, K0);$/;"	v
K	lib/tensor_toolbox/@ktensor/viz.m	/^    K = normalize(K,'sort',res.Normalize);$/;"	v
K	lib/tensor_toolbox/@ktensor/viz.m	/^    K = res.Normalize(K);$/;"	v
K	lib/tensor_toolbox/@sptensor/sptensor.m	/^            K = size(source,3);$/;"	v
K	lib/tensor_toolbox/@symktensor/symktensor.m	/^         K = symmetrize(K);$/;"	v
K	lib/tensor_toolbox/@symktensor/symktensor.m	/^    K = varargin{1};$/;"	v
K	lib/tensor_toolbox/@tensor/mttkrps.m	/^    K = khatrirao(U_mid,'r');$/;"	v
K	lib/tensor_toolbox/@tensor/mttkrps.m	/^K = khatrirao(U{1:s},'r');$/;"	v
K	lib/tensor_toolbox/@tensor/mttkrps.m	/^K = khatrirao(U{s+1:d},'r');$/;"	v
K	lib/tensor_toolbox/doc/identities_doc.m	/^K = ktensor(A);$/;"	v
K	lib/tensor_toolbox/doc/identities_doc.m	/^K = ktensor({A1,A2,A3});$/;"	v
K	lib/tensor_toolbox/doc/sumtensor_doc.m	/^K = ktensor([1; 1; 1], X1, X2, X3);$/;"	v
K	lib/tensor_toolbox/doc/symktensor_doc.m	/^K = ktensor(L, X-1, X+2, 2*X);$/;"	v
K1	lib/tensor_toolbox/tests/Test_KtensorScore.m	/^            K1 = ktensor([1; 1], [1, 2; 3, 4], [5, 6; 7, 8]);$/;"	v
K2	lib/tensor_toolbox/tests/Test_KtensorScore.m	/^            K2 = ktensor([1; 1], [0, 2; 3, 4], [5, 6; 7, 8]);$/;"	v
KRP	lib/tensor_toolbox/doc/multiply_doc.m	/^KRP = khatrirao(U{1}, U{3}); %<--Khatri-Rao product, omitting U{2}$/;"	v
Kruskal operator properties	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="18">Kruskal operator properties<\/h2><p>Proposition 5.2<\/p><pre class="codeinput/;"	i
Kruskal tensor format via ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Kruskal tensors<\/h1><!--introduction--><p>Kru/;"	i
Kruskal tensor times matrix (ttm for ktensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="42">Kruskal tensor times matrix (ttm for ktensor)<\/h2><p>The special structure o/;"	i
Kruskal tensor times vector (ttv for ktensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="18">Kruskal tensor times vector (ttv for ktensor)<\/h2><p>The special structure o/;"	i
Kruskal tensors	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Kruskal tensors<\/h1><!--introduction--><p>Kru/;"	h
Ktilde	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Ktilde = mean(reshape(options.numOfTrials, size(options.numOfTrials,1),[]),2);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        L = numComps;$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        L = sum(numComps);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        L = length(options.explainedVar.totalMarginalizedVar);$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        L = length(unique(options.whichMarg));$/;"	v
L	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^L = length(options.marginalizationColours);$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    L  = cX_beta \/ EZZ;$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  L     = randn(xDim,zDim)*sqrt(scale\/zDim);$/;"	v
L	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    L               = ws.kern(k).estParams.L;$/;"	v
L	lib/tensor_toolbox/doc/symktensor_doc.m	/^L = [1; -1]; %the weights (should be a column vector of length r)$/;"	v
L	lib/tensor_toolbox/teneye.m	/^L = M^K;  % This is the number of rows the outputs will have.$/;"	v
L	lib/tensor_toolbox/teneye.m	/^L = prod(1:K) ;  % To get the size of the blocks.$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^    L0 = (k-1)*length(Y)*log(eps+Ymean) - length(Y)*Ymean\/theta;$/;"	v
L0	lib/TrialData/util/compute_pseudo_R2.m	/^  L0 = 2*length(Y)*sum(Y.*log((Yhat_null==0)+Yhat_null).\/mean(Yhat) + (1-Y).*log((Yhat_null==1)/;"	v
L0	lib/tensor_toolbox/tests/Test_Tensor.m	/^                L0 = L0';$/;"	v
L0	lib/tensor_toolbox/tests/Test_Tensor.m	/^            L0 = squeeze(X.data(idx));$/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^    L1 = (k-1)*sum(log(eps+Yhat)) - sum(Yhat)\/theta;$/;"	v
L1	lib/TrialData/util/compute_pseudo_R2.m	/^  L1 = 2*length(Y)*sum(Y.*log((Yhat==0)+Yhat).\/mean(Yhat) + (1-Y).*log((Yhat==1)+1-Yhat).\/(1-m/;"	v
L1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            L1 = X(idx, 'extract');$/;"	v
L2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            L2 = X(sub, 'extract');$/;"	v
L2_distance	lib/TrialData/util/lib/isomap/L2_distance.m	/^function d = L2_distance(a, b)$/;"	f
L3	lib/tensor_toolbox/tests/Test_Tensor.m	/^                L3 = X(idx);$/;"	v
L4	lib/tensor_toolbox/tests/Test_Tensor.m	/^                L4 = X(sub);$/;"	v
LD	lib/tensor_toolbox/teneye.m	/^LD = M-1;  % See comment on N. $/;"	v
LL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LL = [LL LLi];    $/;"	v
LL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  LL    = [];$/;"	v
LLbase	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      LLbase = LLi;$/;"	v
LLi	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LLi   = N*const + N*ldM - 0.5*N*sum(sum(MM .* cX)); $/;"	v
LLi	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  LLi   = 0; $/;"	v
LLold	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    LLold = LLi;    $/;"	v
LPF_cutoff	lib/TrialData/td_limblab/parseFileByTrial.m	/^LPF_cutoff  =  20; % for EMG butterworth filter$/;"	v
LambdaCheck	lib/tensor_toolbox/tt_gcp_fg_est.m	/^        LambdaCheck = true;$/;"	v
Legal Stuff	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^		<h3>Legal Stuff<\/h3>$/;"	j
Load some data	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating least squares for CANDECOMP\/PARAF/;"	i
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = L \/ mag;$/;"	v
Lorth	lib/TrialData/util/orthogonalize.m	/^    Lorth = UU(:, 1:xDim);$/;"	v
Loss function for Poisson negative log likelihood with identity link.	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^<\/pre><img vspace="5" hspace="5" src="gcp_opt_doc_05.png" alt=""> <h2 id="25">Loss function for/;"	i
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^    Lsat = (k-1)*sum(log(eps+Y)) - sum(Y)\/theta;$/;"	v
Lsat	lib/TrialData/util/compute_pseudo_R2.m	/^  Lsat = 2*length(Y)*sum(Y.*log((Y==0)+Y).\/mean(Y) + (1-Y).*log((Y==1)+1-Y).\/(1-mean(Y)));$/;"	v
M	bumpcurl_tensors.m	/^            M = M_neural_als;$/;"	v
M	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    M = C*X;$/;"	v
M	lib/tensor_toolbox/@ktensor/innerprod.m	/^        M = M .* (X.u{n}' * Y.u{n});$/;"	v
M	lib/tensor_toolbox/@ktensor/innerprod.m	/^    M = X.lambda * Y.lambda';$/;"	v
M	lib/tensor_toolbox/@ktensor/minus.m	/^    M = ndims(A);$/;"	v
M	lib/tensor_toolbox/@ktensor/nvecs.m	/^    M = M .* (X.u{i}' * X.u{i});$/;"	v
M	lib/tensor_toolbox/@ktensor/nvecs.m	/^M = X.lambda * X.lambda';$/;"	v
M	lib/tensor_toolbox/@ktensor/plus.m	/^    M = ndims(A);$/;"	v
M	lib/tensor_toolbox/@ktensor/score.m	/^    M = [M; perms(idx(i,:))]; %#ok<AGROW>$/;"	v
M	lib/tensor_toolbox/@ktensor/score.m	/^M = [];$/;"	v
M	lib/tensor_toolbox/@symktensor/fg.m	/^    M = Data.M;$/;"	v
M	lib/tensor_toolbox/@symktensor/fg_setup.m	/^M = ndims(A);$/;"	v
M	lib/tensor_toolbox/@symktensor/symktensor.m	/^    M = ndims(A);$/;"	v
M	lib/tensor_toolbox/cp_apr.m	/^        M = normalize(M,[],1,n);$/;"	v
M	lib/tensor_toolbox/cp_apr.m	/^        M = redistribute(M,n);$/;"	v
M	lib/tensor_toolbox/cp_apr.m	/^M = normalize(M,'sort',1);$/;"	v
M	lib/tensor_toolbox/cp_apr.m	/^M = normalize(M,1,1);$/;"	v
M	lib/tensor_toolbox/cp_apr.m	/^M = normalize(Minit,[],1);$/;"	v
M	lib/tensor_toolbox/create_problem.m	/^M = params.M;$/;"	v
M	lib/tensor_toolbox/doc/cp_als_doc.m	/^M = cp_als(X, 2, 'printitn', 0, 'init', X.U) % <-default behavior, fixsigns called$/;"	v
M	lib/tensor_toolbox/doc/cp_als_doc.m	/^M = cp_als(X, 2, 'printitn', 0, 'init', X.U, 'fixsigns', false) % <-fixsigns not called$/;"	v
M	lib/tensor_toolbox/doc/cp_apr_doc.m	/^M = cp_apr(X, R, 'printitn', 10);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'epoch',1,'newitol',20);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'epoch',200,'newitol',3,'printitn',2);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'newitol',20,'fitthresh',0.895,'truefit',true);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'truefit',true,'nsampfit',100);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'truefit',true,'nsamplsq',10);$/;"	v
M	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M = cp_arls(X,R,'truefit',true,'nsamplsq',25);$/;"	v
M	lib/tensor_toolbox/doc/identities_doc.m	/^  M = M .* (A{i}'*A{i});$/;"	v
M	lib/tensor_toolbox/doc/identities_doc.m	/^M = ones(size(A{1},2), size(A{1},2));$/;"	v
M	lib/tensor_toolbox/doc/multiply_doc.m	/^M = permute(X.data, [n:size(X,n), 1:n-1]);$/;"	v
M	lib/tensor_toolbox/doc/multiply_doc.m	/^M = reshape(M,size(X,n),[]); %<--Matricized tensor data$/;"	v
M	lib/tensor_toolbox/doc/tensor_doc.m	/^M = ones(4,3,2); %<-- A 4 x 3 x 2 array.$/;"	v
M	lib/tensor_toolbox/eig_geap.m	/^M = a*b' + b*a';$/;"	v
M	lib/tensor_toolbox/gcp_opt.m	/^            M = Msave;$/;"	v
M	lib/tensor_toolbox/gcp_opt.m	/^    M = M0;                         % Copy initial guess$/;"	v
M	lib/tensor_toolbox/gcp_opt.m	/^    M = update(M0,1:nd,x);$/;"	v
M	lib/tensor_toolbox/gcp_opt.m	/^M = fixsigns(arrange(M));$/;"	v
M	lib/tensor_toolbox/matrandorth.m	/^    M = M(:,1:ncols);$/;"	v
M	lib/tensor_toolbox/matrandorth.m	/^    M = zeros(n); % prealloc$/;"	v
M	lib/tensor_toolbox/teneye.m	/^M = double(N);  % Single will give us trouble on indexing.$/;"	v
M	lib/tensor_toolbox/teneye.m	/^M = double(N); % Single will give us trouble on indexing.$/;"	v
M	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^            M = sptenmat(T,1);$/;"	v
M	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    M = normalize(M,1);$/;"	v
M0	lib/tensor_toolbox/gcp_opt.m	/^    M0 = M0 * (norm(X)\/norm(M0)); % normalize$/;"	v
M0	lib/tensor_toolbox/gcp_opt.m	/^    M0 = init;$/;"	v
M0	lib/tensor_toolbox/gcp_opt.m	/^    M0 = ktensor(Uinit);$/;"	v
M0	lib/tensor_toolbox/gcp_opt.m	/^M0 = normalize(M0,0); $/;"	v
M1	lib/tensor_toolbox/doc/cp_als_doc.m	/^M1 = cp_als(X,3); %<- Call the method$/;"	v
M2	lib/tensor_toolbox/doc/cp_als_doc.m	/^M2 = cp_als(X,3,'maxiters',100,'init',U2);$/;"	v
M2alt	lib/tensor_toolbox/doc/cp_als_doc.m	/^M2alt = cp_als(X,3,'maxiters',100,'init',U2);$/;"	v
M2alt2	lib/tensor_toolbox/doc/cp_als_doc.m	/^M2alt2 = cp_als(X,3,'maxiters',100,'init',U2,'printitn',10); $/;"	v
M2alt3	lib/tensor_toolbox/doc/cp_als_doc.m	/^M2alt3 = cp_als(X,3,'maxiters',100,'init',U2,'printitn',0); % <-No output$/;"	v
M3	lib/tensor_toolbox/doc/cp_als_doc.m	/^M3 = cp_als(X,3,'init','nvecs','printitn',10);$/;"	v
M4alt	lib/tensor_toolbox/doc/cp_als_doc.m	/^M4alt = cp_als(X,3,info.params);$/;"	v
M5	lib/tensor_toolbox/doc/cp_als_doc.m	/^M5 = cp_als(X,3,'init','nvecs','tol',1e-6,'maxiters',1000,'printitn',10);$/;"	v
MATLAB Tensor Toolbox, Version 3.1	lib/tensor_toolbox/README.md	/^# MATLAB Tensor Toolbox, Version 3.1$/;"	c
METATAGS	lib/TrialData/util/openNEV_td.m	/^        METATAGS = textread([fileFullPath(1:end-8) '.sif'], '%s');$/;"	v
MM	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    MM   = iPh - iPhL \/ (I + L' * iPhL) * iPhL';$/;"	v
M_init	lib/tensor_toolbox/doc/cp_opt_doc.m	/^M_init = create_guess('Data', X, 'Num_Factors', R, 'Factor_Generator', 'nvecs');$/;"	v
M_init	lib/tensor_toolbox/doc/cp_opt_doc.m	/^M_init = create_guess('Data', X, 'Num_Factors', R, ...$/;"	v
M_init	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^M_init = create_guess('Data', X, 'Num_Factors', R, ...$/;"	v
M_init	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^M_init = create_guess('Data', X, 'Num_Factors', R, ...$/;"	v
M_init	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^M_init = create_guess('Data', X, 'Num_Factors', R, ...$/;"	v
M_neural_als	bumpcurl_tensors.m	/^            M_neural_als = cp_als(neural_tensor,num_factors,'maxiters',200,'printitn',10);$/;"	v
M_plus_init	lib/tensor_toolbox/doc/cp_opt_doc.m	/^M_plus_init = create_guess('Data', X, 'Num_Factors', R+1, ...$/;"	v
M_plus_init	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^M_plus_init = create_guess('Data', X, 'Num_Factors', R+1, ...$/;"	v
M_true	lib/tensor_toolbox/doc/cp_apr_doc.m	/^M_true = info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/cp_arls_doc.m	/^M_true = info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/cp_opt_doc.m	/^M_true = info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^M_true = info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^M_true= info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^M_true= info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^M_true = info.Soln;$/;"	v
M_true	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^M_true = ktensor(A);$/;"	v
M_true	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^M_true = normalize(arrange(info.Soln));$/;"	v
M_true	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^M_true = normalize(ktensor(U));$/;"	v
Manually specifying the loss function	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Mapfile	lib/TrialData/util/openNSx_td.m	/^            Mapfile = KTUEAMapFile;$/;"	v
Matricized Khatri-Rao product of a sumtensor	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="9">Matricized Khatri-Rao product of a sumtensor<\/h2><p>The <tt>mttkrp<\/tt> func/;"	i
Matricized Khatri-Rao product of a tensor.	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><p>Sometimes the product may be too large to reside in memory.  For example, try the foll/;"	i
Mfull	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^Mfull = full(M_true); $/;"	v
Mfull	lib/tensor_toolbox/tt_gcp_fg.m	/^Mfull = full(M);$/;"	v
Mi	lib/tensor_toolbox/tests/Test_Tensor.m	/^                Mi = rand(5, sz(i));$/;"	v
Mij	lib/TrialData/util/lib/isomap/IsomapII.m	/^    Mij = sqrt(mean_dists * mean_dists');$/;"	v
Minimum	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode *FibHeap::Minimum()$/;"	f	class:FibHeap	typeref:typename:FibHeapNode *
Minit	lib/tensor_toolbox/cp_apr.m	/^    Minit = ktensor(F);$/;"	v
Minit	lib/tensor_toolbox/cp_apr.m	/^Minit = params.Results.init;$/;"	v
Mj	lib/tensor_toolbox/tests/Test_Tensor.m	/^                    Mj = rand(6, sz(j));$/;"	v
Mode	lib/TrialData/util/openNEV_td.m	/^            Mode                    = ExtendedHeader(25);$/;"	v
ModeTitleHandles	lib/tensor_toolbox/@ktensor/viz.m	/^    ModeTitleHandles = gobjects(nd,1);$/;"	v
ModeTitleHandles	lib/tensor_toolbox/@ktensor/viz.m	/^    ModeTitleHandles = repmat({[]},nd,1);$/;"	v
ModeTitles	lib/tensor_toolbox/@ktensor/viz.m	/^        ModeTitles = cell(nd,1);$/;"	v
ModeTitles	lib/tensor_toolbox/@ktensor/viz.m	/^        ModeTitles = res.ModeTitles;$/;"	v
Model	lib/tensor_toolbox/cp_sym.m	/^    Model = symktensor(out.X,A,data.fgopts.nolambda);$/;"	v
Model	lib/tensor_toolbox/cp_sym.m	/^    Model = symktensor(x,A,data.fgopts.nolambda);$/;"	v
Model0	lib/tensor_toolbox/cp_sym.m	/^    Model0 = symktensor(P,A); %random initialization. With rand, i.e. U(0,1)$/;"	v
Model0	lib/tensor_toolbox/cp_sym.m	/^Model0 = params.Results.init;$/;"	v
Model1r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model1r = sum(Y.*log(eps+Yhat1) - Yhat1);$/;"	v
Model2r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Model2r = sum(Y.*log(eps+Yhat2) - Yhat2);$/;"	v
Modelr	lib/TrialData/util/compute_pseudo_R2.m	/^  Modelr = sum(Y.*log(eps+Yhat) - Yhat);$/;"	v
Mprobs	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^Mprobs = Mfull .\/ (1 + Mfull); $/;"	v
Msave	lib/tensor_toolbox/gcp_opt.m	/^            Msave = M;$/;"	v
Msave	lib/tensor_toolbox/gcp_opt.m	/^    Msave = M;                      % Best model so far$/;"	v
Msp	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^            Msp = sparse([1 2 3],[1 5 9],[1 2 3], 3, 9);$/;"	v
Mtrue	lib/tensor_toolbox/create_problem_binary.m	/^    Mtrue = ktensor(A); % Correct solution$/;"	v
Mtrue	lib/tensor_toolbox/create_problem_binary.m	/^Mtrue = params.Results.Mtrue;$/;"	v
Mtruef	lib/tensor_toolbox/create_problem_binary.m	/^    Mtruef = full(Mtrue);$/;"	v
Mttkrp	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Mttkrp(testCase)$/;"	f
Multiplying tensors	lib/tensor_toolbox/doc/html/multiply_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Multiplying tensors<\/h1><!--introduction--><!/;"	h
Multiplying two tenmats	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="30">Multiplying two tenmats<\/h2><p>It is possible to compute the product of two /;"	i
Mv	lib/tensor_toolbox/tt_gcp_fg.m	/^Mv = Mfull(:);$/;"	v
Mvals	lib/tensor_toolbox/create_problem_binary.m	/^        Mvals = Mtrue(subs);$/;"	v
N	lib/TrialData/Tools/dimReduce.m	/^                N = size(trial_data(trial).(signals{1,1}),1);$/;"	v
N	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^N = size(X, 1);$/;"	v
N	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^N    = length(seq);$/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^     N = length(feval(d_func,1)); $/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^     N = size(D,1); $/;"	v
N	lib/TrialData/util/lib/isomap/IsomapII.m	/^N = length(Y.index); $/;"	v
N	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      double   N;$/;"	m	class:HeapNode	typeref:typename:double	file:
N	lib/TrialData/util/lib/isomap/dijkstra.m	/^N = size(G, 1);$/;"	v
N	lib/TrialData/util/lib/isomap/isomap.m	/^N = length(Y.index); $/;"	v
N	lib/TrialData/util/lib/isomap/isomap.m	/^N = size(D,1); $/;"	v
N	lib/TrialData/util/process_lfp.m	/^N = floor(size(data,1)\/round(fft_step*samprate));$/;"	v
N	lib/tensor_toolbox/@ktensor/extract.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@ktensor/fixsigns.m	/^N = ndims(A);$/;"	v
N	lib/tensor_toolbox/@ktensor/mttkrp.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@ktensor/normalize.m	/^    N = -1;$/;"	v
N	lib/tensor_toolbox/@ktensor/normalize.m	/^    N = -2;$/;"	v
N	lib/tensor_toolbox/@ktensor/permute.m	/^N = ndims(a);$/;"	v
N	lib/tensor_toolbox/@ktensor/score.m	/^N = ndims(A);$/;"	v
N	lib/tensor_toolbox/@sptensor/divide.m	/^N = ndims(Y);$/;"	v
N	lib/tensor_toolbox/@sptensor/mttkrp.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@sptensor/rdivide.m	/^        N = ndims(A);$/;"	v
N	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                N = numel(s.subs);$/;"	v
N	lib/tensor_toolbox/@sptensor/times.m	/^        N = ndims(A);$/;"	v
N	lib/tensor_toolbox/@symktensor/fg.m	/^    N = Data.N;$/;"	v
N	lib/tensor_toolbox/@symktensor/fg_setup.m	/^N = size(A,1);$/;"	v
N	lib/tensor_toolbox/@symktensor/normalize.m	/^    N = -1;$/;"	v
N	lib/tensor_toolbox/@symktensor/normalize.m	/^    N = -2;$/;"	v
N	lib/tensor_toolbox/@symktensor/symktensor.m	/^    N = size(A,1);$/;"	v
N	lib/tensor_toolbox/@tensor/mttkrp.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@tensor/ttm.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@ttensor/mttkrp.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/@ttensor/permute.m	/^N = ndims(a);$/;"	v
N	lib/tensor_toolbox/cp_als.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/cp_apr.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/cp_arls.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/cp_nmu.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/cp_opt.m	/^N = length(sz);$/;"	v
N	lib/tensor_toolbox/cp_wopt.m	/^N = length(sz);$/;"	v
N	lib/tensor_toolbox/cp_wopt.m	/^N = ndims(W);$/;"	v
N	lib/tensor_toolbox/cp_wopt.m	/^N = ndims(Z);$/;"	v
N	lib/tensor_toolbox/create_guess.m	/^            N = rand(size(X));          $/;"	v
N	lib/tensor_toolbox/create_problem.m	/^N = length(sz);$/;"	v
N	lib/tensor_toolbox/eig_geap.m	/^N = size(A,1);$/;"	v
N	lib/tensor_toolbox/eig_sshopm.m	/^N = size(A,1);$/;"	v
N	lib/tensor_toolbox/eig_sshopmc.m	/^N = size(A,1);$/;"	v
N	lib/tensor_toolbox/khatrirao.m	/^N = ncols(1);$/;"	v
N	lib/tensor_toolbox/sptendiag.m	/^N = numel(v);$/;"	v
N	lib/tensor_toolbox/tendiag.m	/^N = numel(v);$/;"	v
N	lib/tensor_toolbox/tt_cp_fg.m	/^N = ndims(Z);$/;"	v
N	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^N = ndims(Z);$/;"	v
N	lib/tensor_toolbox/tt_fac_to_vec.m	/^N = length(A);$/;"	v
N	lib/tensor_toolbox/tucker_als.m	/^N = ndims(X);$/;"	v
N	lib/tensor_toolbox/tucker_sym.m	/^N = ndims(S);$/;"	v
N-mode product and matricization	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="3">N-mode product and matricization<\/h2><p>Generate some data to work with.<\/p>/;"	i
N-mode product properties	lib/tensor_toolbox/doc/html/identities_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Identities and relationships of tensors<\/h1></;"	i
NEV	lib/TrialData/DataProcessing/processNEV.m	/^            NEV = remove_spike_artifacts(NEV,rejection_num_chans,rejection_window,true);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename);$/;"	v
NEV	lib/TrialData/DataProcessing/processNEV.m	/^        NEV = openNEV_td(filename,'nosave');$/;"	v
NEV	lib/TrialData/util/openNEV_td.m	/^NEV = struct('MetaTags',[], 'ElectrodesInfo', [], 'Data', []);$/;"	v
NSx	lib/TrialData/DataProcessing/processNSx.m	/^NSx = openNSx_td(filename,'read');$/;"	v
NSx	lib/TrialData/util/openNSx_td.m	/^NSx          = struct('MetaTags',[],'Data',[], 'RawData', []);$/;"	v
NZ	lib/tensor_toolbox/@sptensor/rdivide.m	/^        NZ = nnz(A);$/;"	v
Negative Binomial (count data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="9">Negative Binomial (count data)<\/h2><p>This is indicated by specifying the typ/;"	i
Nonnegative factorization	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="12">Nonnegative factorization<\/h2><p>We can employ lower bounds to get a nonnega/;"	i
Norm of Kruskal operator	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="23">Norm of Kruskal operator<\/h2><p>The norm of a ktensor has a special form bec/;"	i
Norm of difference between two tensors	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="6">Norm of difference between two tensors<\/h2><p>Prop. 3.9: For tensors X and Y,/;"	i
Nvals	lib/tensor_toolbox/cp_wopt.m	/^Nvals = length(Wvals);$/;"	v
Nvecs	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Nvecs(testCase, nd, maxdim)$/;"	f
OneWay	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^        function OneWay(testCase)$/;"	f
Options for creating factor matrices, core tensors, and lambdas	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="18">Options for creating factor matrices, core tensors, and lambdas<\/h2><p>Any f/;"	i
Orthogonalization of Tucker factors	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="16">Orthogonalization of Tucker factors<\/h2><p>Proposition 4.4<\/p><pre class="c/;"	i
Other Options	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Overfitting example	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^<\/pre><h2 id="9">Overfitting example<\/h2><p>Re-using the same example as before, consider the /;"	i
Overfitting example	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="9">Overfitting example<\/h2><p>Consider the case where we don't know R in advance/;"	i
P	lib/TrialData/Analysis/getModel.m	/^P                    =  [];        % polynomial fit if nonlinear cascade$/;"	v
P	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    P = U;$/;"	v
P	lib/TrialData/util/lib/isomap/dijk.m	/^P = zeros(length(s),n);$/;"	v
P	lib/tensor_toolbox/@ktensor/score.m	/^    P = zeros(RA,RB);$/;"	v
P	lib/tensor_toolbox/@symktensor/fg.m	/^    P = Data.P;$/;"	v
P	lib/tensor_toolbox/@symktensor/fg_setup.m	/^P = ncomponents(Model);$/;"	v
P	lib/tensor_toolbox/@symktensor/symktensor.m	/^    P = varargin{1};$/;"	v
P	lib/tensor_toolbox/@tensor/ttsv.m	/^    P = ndims(A);$/;"	v
P	lib/tensor_toolbox/cp_als.m	/^        P = ktensor(lambda,U);$/;"	v
P	lib/tensor_toolbox/cp_als.m	/^    P = fixsigns(P);$/;"	v
P	lib/tensor_toolbox/cp_als.m	/^    P = ktensor(lambda,U);$/;"	v
P	lib/tensor_toolbox/cp_als.m	/^P = arrange(P);$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^    P = bsxfun(@times, P, A{i}(idxs(:,i),:));$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^    P = ktensor(lambda, U);$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^P = A{matorder(1)}(idxs(:,matorder(1)),:);$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^P = Psave;$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^P = arrange(P);$/;"	v
P	lib/tensor_toolbox/cp_arls.m	/^P = fixsigns(P); % Fix the signs$/;"	v
P	lib/tensor_toolbox/cp_nmu.m	/^    P = ktensor(U);$/;"	v
P	lib/tensor_toolbox/cp_nmu.m	/^P = arrange(P);$/;"	v
P	lib/tensor_toolbox/cp_opt.m	/^    P = ktensor(tt_cp_vec_to_fac(out.X, Z));$/;"	v
P	lib/tensor_toolbox/cp_opt.m	/^    P = ktensor(tt_cp_vec_to_fac(xx, Z));$/;"	v
P	lib/tensor_toolbox/cp_opt.m	/^P = arrange(P);$/;"	v
P	lib/tensor_toolbox/cp_opt.m	/^P = fixsigns(P);$/;"	v
P	lib/tensor_toolbox/cp_wopt.m	/^    P  = ktensor(tt_cp_vec_to_fac(out.X,Z));$/;"	v
P	lib/tensor_toolbox/cp_wopt.m	/^    P = ktensor(tt_cp_vec_to_fac(xx, Z));$/;"	v
P	lib/tensor_toolbox/cp_wopt.m	/^P = arrange(P);$/;"	v
P	lib/tensor_toolbox/cp_wopt.m	/^P = fixsigns(P);$/;"	v
P	lib/tensor_toolbox/create_problem.m	/^P = normalize(S,[],1); $/;"	v
P	lib/tensor_toolbox/create_problem.m	/^P = prod(sz);$/;"	v
P	lib/tensor_toolbox/create_problem_binary.m	/^    P = Mtruef .\/ (1 + Mtruef);$/;"	v
P	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^P = info.Pattern;$/;"	v
P	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^P = info.Pattern;$/;"	v
P	lib/tensor_toolbox/doc/sumtensor_doc.m	/^P = sumtensor()$/;"	v
P	lib/tensor_toolbox/doc/test_problems_doc.m	/^P = tenrand([5 4 3]) > 0.5;$/;"	v
P	lib/tensor_toolbox/eig_sshopm.m	/^P = ndims(A);$/;"	v
P	lib/tensor_toolbox/eig_sshopmc.m	/^P = ndims(A);$/;"	v
P	lib/tensor_toolbox/khatrirao.m	/^    P = bsxfun(@times, reshape(A{i},[],1,N),reshape(P,1,[],N));$/;"	v
P	lib/tensor_toolbox/khatrirao.m	/^P = A{matorder(1)};$/;"	v
P	lib/tensor_toolbox/khatrirao.m	/^P = reshape(P,[],N);$/;"	v
P	lib/tensor_toolbox/teneye.m	/^    P = zeros(n*m,n,CN);$/;"	v
P	lib/tensor_toolbox/teneye.m	/^P = 1;  % Initializer.$/;"	v
P	lib/tensor_toolbox/teneye.m	/^P = perms_loop(K);  % Only need to use this once.$/;"	v
P	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^P = length(x);$/;"	v
P	lib/tensor_toolbox/tt_dimscheck.m	/^P = length(dims);$/;"	v
P	lib/tensor_toolbox/tt_fac_to_vec.m	/^P = sum(sz)*R;$/;"	v
P0	lib/tensor_toolbox/cp_opt.m	/^    P0 = cell(N,1);$/;"	v
P0	lib/tensor_toolbox/cp_opt.m	/^    P0 = init;$/;"	v
P0	lib/tensor_toolbox/cp_opt.m	/^    P0 = tocell(init);$/;"	v
P0	lib/tensor_toolbox/cp_wopt.m	/^    P0 = cell(N,1);$/;"	v
P0	lib/tensor_toolbox/cp_wopt.m	/^    P0 = init;$/;"	v
P0	lib/tensor_toolbox/cp_wopt.m	/^    P0 = tocell(init);$/;"	v
PD	lib/neuron-table/getTDClassicalPDs.m	/^    PD = zeros(num_out_signals,1);$/;"	v
PD	plotTuningDistr.m	/^PD = atan2(glm_info.b(3,:),glm_info.b(2,:));$/;"	v
PDCI	lib/neuron-table/getTDClassicalPDs.m	/^    PDCI = zeros(num_out_signals,2);$/;"	v
PDCI_append	lib/neuron-table/getPDsFromWeights.m	/^    PDCI_append = zeros(height(pdTable),2);$/;"	v
PD_append	lib/neuron-table/getPDsFromWeights.m	/^    PD_append = zeros(height(pdTable),1);$/;"	v
PN	lib/tensor_toolbox/teneye.m	/^    PN = (1:N).';  % Easy case.$/;"	v
PN	lib/tensor_toolbox/teneye.m	/^    PN = perms_loop(N);  % Call helper function.$/;"	v
PN	lib/tensor_toolbox/teneye.m	/^PN = zeros(round(BC),K,class(N));$/;"	v
PR	lib/tensor_toolbox/teneye.m	/^    PR = (1:N).';$/;"	v
PR	lib/tensor_toolbox/teneye.m	/^   PR = ones(1,K,class(N)); $/;"	v
PR	lib/tensor_toolbox/teneye.m	/^PR = cumsum2(PR);  % This is the time hog.$/;"	v
PR	lib/tensor_toolbox/teneye.m	/^PR = zeros(L,K,CN);  % Preallocation.$/;"	v
PU	lib/tensor_toolbox/create_problem.m	/^        PU = P.U{d};$/;"	v
PacketID	lib/TrialData/util/openNEV_td.m	/^    PacketID = char(ExtendedHeader(1:8)');$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = tRawData(5:6,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^    PacketIDs = typecast(PacketIDs(:), 'uint16').';$/;"	v
PacketIDs	lib/TrialData/util/openNEV_td.m	/^PacketIDs = [];$/;"	v
Permute	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Permute(testCase)$/;"	f
Pfit_vals	lib/tensor_toolbox/cp_arls.m	/^    Pfit_vals = sample_ktensor(P, Xfit_subs);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      Ph = max(varFloor, Ph);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^      Ph = mean(Ph) * ones(xDim, 1);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    Ph = diag(cX) - sum(cX_beta .* L, 2);$/;"	v
Ph	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  Ph    = diag(cX);$/;"	v
Phi	lib/tensor_toolbox/cp_apr.m	/^    Phi = -ones(size(X,n),R);$/;"	v
Phi	lib/tensor_toolbox/cp_apr.m	/^    Phi = Y;$/;"	v
Phi	lib/tensor_toolbox/cp_apr.m	/^Phi = cell(N,1);$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^                Pi = tt_calcpi_prowsubprob(X, isSparse, M, ...$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^            Pi = M{nn}(X.subs(sparse_indices,nn),:) .* Pi;$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^            Pi = tt_calcpi_prowsubprob(X, isSparse, M, R, n, N, []);$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^        Pi = M{nn}(X.subs(:,nn),:) .* Pi;$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^        Pi = calculatePi(X, M, R, n, N);$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^        Pi = khatrirao(U{[1:n-1,n+1:N]},'r');$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^        Pi = ones(num_row_nnz, R);$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^    Pi = khatrirao(U{[1:n-1,n+1:N]},'r');$/;"	v
Pi	lib/tensor_toolbox/cp_apr.m	/^    Pi = ones(nnz(X), R);$/;"	v
PlotCommands	lib/tensor_toolbox/@ktensor/viz.m	/^    PlotCommands = repmat({PlotCommands}, [nd 1]);$/;"	v
PlotCommands	lib/tensor_toolbox/@ktensor/viz.m	/^PlotCommands = res.PlotCommands;$/;"	v
Poblano Optimization Toolbox	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	i
Poisson (count data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="2">Poisson (count data)<\/h2><p>This is indicated by specifying the type as eithe/;"	i
Poisson with Log Link (count data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="3">Poisson with Log Link (count data)<\/h2><p>This is indicated by specifying the/;"	i
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Print(FibHeapNode *Tree, FibHeapNode *theParent)$/;"	f	class:FibHeap	typeref:typename:void
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::Print()$/;"	f	class:FibHeapNode	typeref:typename:void
Print	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::Print()$/;"	f	class:HeapNode	typeref:typename:void
Psave	lib/tensor_toolbox/cp_arls.m	/^        Psave = P; % Keep the best one seen so far!$/;"	v
Pvals	lib/tensor_toolbox/create_problem_binary.m	/^        Pvals = Mvals .\/ (1 + Mvals);$/;"	v
Q	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Q = size(Xfull,3);$/;"	v
Q	lib/TrialData/util/predict_kalman.m	/^Q = kf_model.Q;$/;"	v
Q	lib/TrialData/util/train_kalman.m	/^Q = (Y_new'*Y_new - A*(Z'*Y_new))\/length(Y_new);$/;"	v
Q	lib/tensor_toolbox/@symktensor/fg.m	/^    Q = Data.Q;$/;"	v
Q	lib/tensor_toolbox/@symtensor/full.m	/^        Q = size(I,1);$/;"	v
Q	lib/tensor_toolbox/create_problem.m	/^Q = ceil((1-M)*P);$/;"	v
Q	lib/tensor_toolbox/doc/identities_doc.m	/^Q = {Q1,Q2,Q3};$/;"	v
Q1	lib/tensor_toolbox/doc/identities_doc.m	/^Q1 = orth(rand(5,4));$/;"	v
Q2	lib/tensor_toolbox/doc/identities_doc.m	/^Q2 = orth(rand(4,3));$/;"	v
Q3	lib/tensor_toolbox/doc/identities_doc.m	/^Q3 = orth(rand(3,2));$/;"	v
Qt	lib/tensor_toolbox/doc/identities_doc.m	/^Qt = {Q1',Q2',Q3'};$/;"	v
Questions or Comments?	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^		<h3>Questions or Comments?<\/h3>$/;"	j
R	lib/TrialData/util/lib/isomap/IsomapII.m	/^R = zeros(1,length(dims)); $/;"	v
R	lib/TrialData/util/lib/isomap/isomap.m	/^R = zeros(1,length(dims)); $/;"	v
R	lib/TrialData/util/predict_kalman.m	/^R = kf_model.R;$/;"	v
R	lib/TrialData/util/train_kalman.m	/^R = (X'*X - C*(Y'*X))\/length(Y);$/;"	v
R	lib/tensor_toolbox/@ktensor/datadisp.m	/^R = size(T.lambda,1); % Rank$/;"	v
R	lib/tensor_toolbox/@ktensor/fixsigns.m	/^R = length(K.lambda);$/;"	v
R	lib/tensor_toolbox/@ktensor/innerprod.m	/^    R = length(X.lambda);$/;"	v
R	lib/tensor_toolbox/@ktensor/mttkrp.m	/^    R = size(U{1},2);$/;"	v
R	lib/tensor_toolbox/@ktensor/mttkrp.m	/^    R = size(U{2},2);$/;"	v
R	lib/tensor_toolbox/@sptensor/divide.m	/^R = numel(K.lambda);$/;"	v
R	lib/tensor_toolbox/@sptensor/mttkrp.m	/^    R = size(U{1},2);$/;"	v
R	lib/tensor_toolbox/@sptensor/mttkrp.m	/^    R = size(U{2},2);$/;"	v
R	lib/tensor_toolbox/@sptensor/rdivide.m	/^        R = numel(B.lambda);$/;"	v
R	lib/tensor_toolbox/@sptensor/times.m	/^        R = numel(B.lambda);$/;"	v
R	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    R = (N+1)*P; % Number of free variables in model$/;"	v
R	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    R = N*P;$/;"	v
R	lib/tensor_toolbox/@tensor/mttkrp.m	/^    R = size(U{1},2);$/;"	v
R	lib/tensor_toolbox/@tensor/mttkrp.m	/^    R = size(U{2},2);$/;"	v
R	lib/tensor_toolbox/@ttensor/mttkrp.m	/^    R = size(U{1},2);$/;"	v
R	lib/tensor_toolbox/@ttensor/mttkrp.m	/^    R = size(U{2},2);$/;"	v
R	lib/tensor_toolbox/cp_arls.m	/^    R = size(U{1},2);$/;"	v
R	lib/tensor_toolbox/cp_arls.m	/^    R = size(U{2},2);$/;"	v
R	lib/tensor_toolbox/cp_wopt.m	/^R = size(A{1},2);$/;"	v
R	lib/tensor_toolbox/doc/cp_apr_doc.m	/^R = 5;$/;"	v
R	lib/tensor_toolbox/doc/cp_arls_doc.m	/^R = 5;$/;"	v
R	lib/tensor_toolbox/doc/cp_opt_doc.m	/^R = 5;$/;"	v
R	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^R = 5;$/;"	v
R	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^R = 2;$/;"	v
R	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^R = 2;$/;"	v
R	lib/tensor_toolbox/doc/identities_doc.m	/^R = {R1,R2,R3};$/;"	v
R	lib/tensor_toolbox/doc/ktensor_doc.m	/^R = length(X.lambda);  %<-- Number of factors in X.$/;"	v
R	lib/tensor_toolbox/tt_cp_fg.m	/^R = size(A{1},2);$/;"	v
R	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^R = P \/ sum(sz);$/;"	v
R	lib/tensor_toolbox/tt_fac_to_vec.m	/^R = size(A{1},2);$/;"	v
R	lib/tensor_toolbox/tucker_als.m	/^    R = R * ones(N,1);$/;"	v
R1	lib/tensor_toolbox/doc/symktensor_doc.m	/^R1 = symktensor([1; -1; 1], reshape(1:9, 3, 3), 3); %Declare some symtensors$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^    R2 = (1-(Lsat - L1).\/(Lsat-L0));$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = (1-(Sat_r-Modelr).\/(Sat_r-Intercr))';$/;"	v
R2	lib/TrialData/util/compute_pseudo_R2.m	/^  R2 = 1 - L1\/L0;$/;"	v
R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  R2 = (1-(Sat_r-Model2r).\/(Sat_r-Model1r))';$/;"	v
R2	lib/tensor_toolbox/doc/symktensor_doc.m	/^R2 = symktensor([1; -1], reshape(1:6, 3,2), 3); $/;"	v
RA	lib/tensor_toolbox/@ktensor/fixsigns.m	/^RA = ncomponents(A);$/;"	v
RA	lib/tensor_toolbox/@ktensor/score.m	/^RA = ncomponents(A);$/;"	v
RB	lib/tensor_toolbox/@ktensor/fixsigns.m	/^RB = ncomponents(B);$/;"	v
RB	lib/tensor_toolbox/@ktensor/score.m	/^RB = ncomponents(B);$/;"	v
ROWS	lib/tensor_toolbox/teneye.m	/^    ROWS = 1:M^(ii-1):L;  % Indices into the rows for this col.$/;"	v
Rayleigh (real-valued data)	lib/tensor_toolbox/doc/html/gcp_opt_fg_options_doc.html	/^<\/pre><h2 id="6">Rayleigh (real-valued data)<\/h2><p>This is indicated by specifying the type </;"	i
Rdm	lib/tensor_toolbox/create_problem.m	/^        Rdm = W.*tensor(randn([sz 1 1]), sz);$/;"	v
Rdm	lib/tensor_toolbox/create_problem.m	/^        Rdm = sptensor(W.subs,randn(nnz(W),1),W.size);$/;"	v
Rdm	lib/tensor_toolbox/create_problem.m	/^        Rdm = symmetrize(Rdm, params.Symmetric); %Robert to discuss with Tammy$/;"	v
Rdm	lib/tensor_toolbox/create_problem.m	/^    Rdm = tensor(randn([sz 1 1]), sz);$/;"	v
ReadData	lib/TrialData/util/openNSx_td.m	/^        ReadData = inputArgument;$/;"	v
Recommendations	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="18">Recommendations<\/h2><div><ul><li>Run multiple times with different guesses a/;"	i
Recreating the same test problem	lib/tensor_toolbox/doc/html/test_problems_doc.html	/^<\/pre><h2 id="8">Recreating the same test problem<\/h2><p>We can recreate exactly the same test/;"	i
Relationships among ttv, ttm, and ttt	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="74">Relationships among ttv, ttm, and ttt<\/h2><p>The three "tensor times _" func/;"	i
Rem	lib/tensor_toolbox/tucker_sym.m	/^    Rem = double(tenmat(Rem, 1));$/;"	v
Rem	lib/tensor_toolbox/tucker_sym.m	/^    Rem = ttm(S, Xcell, -1, 't');$/;"	v
Report	lib/TrialData/util/openNSx_td.m	/^        Report = inputArgument;$/;"	v
Requirements	lib/neuron-table/README.md	/^# Requirements$/;"	c
Rerun with same initial guess	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="9">Rerun with same initial guess<\/h2><p>Using the same initial guess (and all ot/;"	i
Reshape	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Reshape(testCase)$/;"	f
Run again with a different initial guess, output the initial guess.	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><img vspace="5" hspace="5" src="cp_als_doc_01.png" alt=""> <h2 id="5">Run again with a di/;"	i
Running the CP-ARLS method	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="2">Running the CP-ARLS method<\/h2><p>Running the method is essentially the same /;"	i
Running the Tests	lib/tensor_toolbox/tests/README.md	/^## Running the Tests$/;"	s	chapter:Tests for Tensor Toolbox for MATLAB
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    S = size(Xfull,2);$/;"	v
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^S = S(1:size(W,2));$/;"	v
S	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^S = diag(S);$/;"	v
S	lib/TrialData/util/predict_kalman.m	/^    S = C * Vpred * C' + R;$/;"	v
S	lib/tensor_toolbox/@sptensor/disp.m	/^    S = S(2:end);$/;"	v
S	lib/tensor_toolbox/@sptensor/disp.m	/^S = S{1};$/;"	v
S	lib/tensor_toolbox/@sptensor/disp.m	/^S = evalc('disp(X.vals)');$/;"	v
S	lib/tensor_toolbox/@sptensor/disp.m	/^S = textscan(S,'%s','delimiter','\\n','whitespace','');$/;"	v
S	lib/tensor_toolbox/@symtensor/disp.m	/^    S = S(2:end);$/;"	v
S	lib/tensor_toolbox/@symtensor/disp.m	/^S = S{1};$/;"	v
S	lib/tensor_toolbox/@symtensor/disp.m	/^S = evalc('disp(X.val)');$/;"	v
S	lib/tensor_toolbox/@symtensor/disp.m	/^S = textscan(S,'%s','delimiter','\\n','whitespace','');$/;"	v
S	lib/tensor_toolbox/@tensor/scale.m	/^        S = double(tenmat(S,1:ndims(S),[]));$/;"	v
S	lib/tensor_toolbox/create_guess.m	/^            S = sum(X,1);$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^        S = ktensor(lambda,U);$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^        S = ttensor(core,U);$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^    S = false;$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^    S = params.Soln;$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^S = P;$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^S = params.Sparse_M;$/;"	v
S	lib/tensor_toolbox/create_problem.m	/^S = sum(X,1);$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = 10 * [1:5]'; Y = scale(X,S,3) %<-- Scale in mode-3$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = 10 * [1:5]'; Y = scale(X,S,3) %<-- Scale in one mode.$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = tensor(10 * [1:5]',5); Y = scale(X,S,3) %<-- First argument is a tensor.$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = tensor(10 * [1:5]',5); Y = scale(X,S,3) %<-- Same as above.$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = tensor(1:12,[3 4]); Y = scale(X,S,-3) %<-- Same as above.$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = tensor(1:12,[3 4]); Y = scale(X,S,[1 2]) %<-- Scale in two modes.$/;"	v
S	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^S = tensor(1:60,[3 4 5]); Y = scale(X,S,1:3) %<-- Scale in every mode.$/;"	v
S	lib/tensor_toolbox/doc/cp_apr_doc.m	/^S = ktensor(lambda, A);$/;"	v
S	lib/tensor_toolbox/doc/cp_apr_doc.m	/^S = normalize(S,'sort',1);$/;"	v
S	lib/tensor_toolbox/doc/nvecs_doc.m	/^S = ttm(X,{pinv(U1),pinv(U2),pinv(U3)}); %<-- Core$/;"	v
S	lib/tensor_toolbox/doc/sptensor_doc.m	/^S = find(X > 0.9) %<-- Extract subscipts of values greater than 0.9.$/;"	v
S	lib/tensor_toolbox/doc/sumtensor_doc.m	/^S = sptenrand([500, 500, 500], 1e-100);$/;"	v
S	lib/tensor_toolbox/doc/sumtensor_doc.m	/^S = sptensor([1 1 1; 2 1 3; 3 2 2; 2 1 1], 1, [3,3,3]);$/;"	v
S	lib/tensor_toolbox/doc/sumtensor_doc.m	/^S = sumtensor(P)$/;"	v
S	lib/tensor_toolbox/doc/symktensor_doc.m	/^S = symktensor(L, X, m) %Declare a symktensor object$/;"	v
S	lib/tensor_toolbox/doc/symtensor_doc.m	/^S = symtensor(T) $/;"	v
S	lib/tensor_toolbox/doc/tensor_doc.m	/^S = find(X >= 2) %<-- Find subscripts of values >= 2.$/;"	v
S	lib/tensor_toolbox/doc/test_problems_doc.m	/^S = ktensor(A);$/;"	v
S	lib/tensor_toolbox/doc/test_problems_doc.m	/^S = normalize(S,'sort',1);$/;"	v
S	lib/tensor_toolbox/tests/Test_Tensor.m	/^            S = 10 * [1:5]'; $/;"	v
S	lib/tensor_toolbox/tests/Test_Tensor.m	/^            S = symmetrize(X);$/;"	v
S	lib/tensor_toolbox/tests/Test_Tensor.m	/^            S = tensor(10 * [1:5]',5); $/;"	v
S	lib/tensor_toolbox/tests/Test_Tensor.m	/^            S = tensor(1:12,[3 4]); $/;"	v
S	lib/tensor_toolbox/tests/Test_Tensor.m	/^            S = tensor(1:60,[3 4 5]); $/;"	v
S	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    S = sparse(subs(:,k), (1:nsamples)', yvals, sz(k), nsamples, nsamples);    $/;"	v
S	lib/tensor_toolbox/tt_matrix2cellstr.m	/^    S = {''};$/;"	v
S	lib/tensor_toolbox/tt_matrix2cellstr.m	/^S = S{1};$/;"	v
S	lib/tensor_toolbox/tt_matrix2cellstr.m	/^S = evalc('disp(M)');$/;"	v
S	lib/tensor_toolbox/tt_matrix2cellstr.m	/^S = textscan(S,'%s','delimiter','\\n','whitespace','');$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(K)$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(V, m, r) %<--size specified from modes and dimension$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(V, symtensor(@ones,m,n)) %<--size specified from symtensor$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(X(:), m, r, true) %<--size from modes and dimension, 'nolambda' option$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(X(:), symtensor(@ones,m,n), true) %<--'nolambda' option$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(X, m, r, true)$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(r, T1) %<--Declare a random symktensor from tensor for size$/;"	v
S2	lib/tensor_toolbox/doc/symktensor_doc.m	/^S2 = symktensor(r, T2) %<--Declare a random symktensor from symtensor for size$/;"	v
S2	lib/tensor_toolbox/doc/symtensor_doc.m	/^S2 = symtensor(T2)$/;"	v
S3	lib/tensor_toolbox/doc/symtensor_doc.m	/^S3 = symtensor(@ones, 3, 2)$/;"	v
S4	lib/tensor_toolbox/doc/symtensor_doc.m	/^S4 = symtensor(@randn, 3, 2)$/;"	v
S5	lib/tensor_toolbox/doc/symtensor_doc.m	/^S5 = symtensor(@(x,y) double(rand(x,y)>.25), 3, 3)$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-Yhat).^2,1);$/;"	v
SS	lib/TrialData/util/compute_vaf.m	/^    SS = sum((Y-repmat(meanY,size(Y,1),1)).^2);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat).^2,1);$/;"	v
SSE	lib/TrialData/util/compute_vaf.m	/^    SSE = sum((Y-Yhat2).^2,1);$/;"	v
ST	lib/tensor_toolbox/doc/sumtensor_doc.m	/^ST = sumtensor(K,S); %<-- Declare the sumtensor$/;"	v
ST-HOSVD compared to HOSVD	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="14">ST-HOSVD compared to HOSVD<\/h2><p>The answers are essentially the same for t/;"	i
STATEnew	lib/TrialData/util/predict_kalman.m	/^STATEnew = zeros(size(OBSERVATIONS,1),size(STATE0,2));$/;"	v
STATEpred	lib/TrialData/util/predict_kalman.m	/^        STATEpred  = STATE0';$/;"	v
STATEpred	lib/TrialData/util/predict_kalman.m	/^        STATEpred = A * STATEprev;$/;"	v
STATEprev	lib/TrialData/util/predict_kalman.m	/^        STATEprev = STATEnew(t-1,:)';$/;"	v
STR	lib/tensor_toolbox/teneye.m	/^    STR = [STR,'n'];$/;"	v
STR	lib/tensor_toolbox/teneye.m	/^   STR = [STR,'r']; $/;"	v
STR	lib/tensor_toolbox/teneye.m	/^STR = lower(s1(1)); % We are only interested in the first letter.$/;"	v
Sat_r	lib/TrialData/util/compute_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
Sat_r	lib/TrialData/util/compute_rel_pseudo_R2.m	/^  Sat_r = sum(Y.*log(eps+Y) - Y);$/;"	v
ScalarFuncsLeft	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ScalarFuncsLeft(testCase,sfl)$/;"	f
ScalarFuncsLeft	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function ScalarFuncsLeft(testCase,sfl)$/;"	f
ScalarFuncsRight	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function ScalarFuncsRight(testCase,sfr)$/;"	f
ScalarFuncsRight	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function ScalarFuncsRight(testCase,sfr)$/;"	f
Scaling a sptensor in different modes	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="21">Scaling a sptensor in different modes<\/h2><pre class="codeinput">X = ones(sp/;"	i
Scaling a tensor in different modes	lib/tensor_toolbox/doc/html/collapse_scale_doc.html	/^<\/pre><h2 id="15">Scaling a tensor in different modes<\/h2><pre class="codeinput">X = tenones([/;"	i
ScoreDifferentKtensors	lib/tensor_toolbox/tests/Test_KtensorScore.m	/^        function ScoreDifferentKtensors(testCase)$/;"	f
ScoreSameKtensors	lib/tensor_toolbox/tests/Test_KtensorScore.m	/^        function ScoreSameKtensors(testCase)$/;"	f
Set up a sample problem	lib/tensor_toolbox/doc/html/cp_apr_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating Poisson Regression for fitting CP /;"	i
Set up a sample problem	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Alternating randomized least squares for CP De/;"	i
Set up another sample problem	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="9">Set up another sample problem<\/h2><p>We set up another problem with 10% noise/;"	i
Set up the optimization parameters	lib/tensor_toolbox/doc/html/cp_opt_poblano_doc.html	/^<\/pre><h2 id="4">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to consi/;"	i
Set up the optimization parameters	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="10">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to cons/;"	i
Set up the optimization parameters	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^<\/pre><h2 id="4">Set up the optimization parameters<\/h2><p>It's genearlly a good idea to consi/;"	i
SetIndexValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      void SetIndexValue( long int v) { IndexV = v; };$/;"	f	class:HeapNode	typeref:typename:void	file:
SetKeyValue	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^      void SetKeyValue(double n) { N = n; };$/;"	f	class:HeapNode	typeref:typename:void	file:
Setup	lib/tensor_toolbox/doc/html/gcp_opt_amino_doc.html	/^  <\/style><\/head><body><div class="content"><h1>GCP-OPT Examples with Amino Acids Dataset<\/h1/;"	i
Shifted symmetric higher-order power method	lib/tensor_toolbox/doc/html/sshopm_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Shifted symmetric higher-order power method<\//;"	h
Simple example of usage	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Computing Tucker via the HOSVD<\/h1><!--introd/;"	i
Sparse tensor times matrix (ttm for sptensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="33">Sparse tensor times matrix (ttm for sptensor)<\/h2><p>It is also possible to /;"	i
Sparse tensor times sparse tensor (ttt for sptensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="57">Sparse tensor times sparse tensor (ttt for sptensor)<\/h2><pre class="codeinp/;"	i
Sparse tensor times vector (ttv for sptensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="13">Sparse tensor times vector (ttv for sptensor)<\/h2><p>This is the same as in /;"	i
Sparse tensors	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sparse tensors<\/h1><!--introduction--><p>MATL/;"	h
Specify the initial guess manually	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="6">Specify the initial guess manually<\/h2><pre class="codeinput">U0 = {rand(5,2)/;"	i
Specify the mode order	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="12">Specify the mode order<\/h2><p>It's also possible to specify the order of the/;"	i
Specify the ranks	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="11">Specify the ranks<\/h2><p>If you know the rank  you want, you can specify it./;"	i
Specifying L-BFGS-B Parameters	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Specifying Missing or Incomplete Data Using the Mask Option	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Specifying SGD and ADAM Parameters	lib/tensor_toolbox/doc/html/gcp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generalized CP (GCP) Tensor Decomposition<\/h1/;"	i
Specifying the accumulation method for the constructor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="4">Specifying the accumulation method for the constructor<\/h2><p>By default, val/;"	i
Specifying trailing singleton dimensions in a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="5">Specifying trailing singleton dimensions in a tensor<\/h2><p>Likewise, trailin/;"	i
Specifying weights in a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="3">Specifying weights in a ktensor<\/h2><p>Weights for each rank-1 tensor can be /;"	i
Speed things up by skipping the initial mixing	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="3">Speed things up by skipping the initial mixing<\/h2><p>The default behavior is/;"	i
SptenmatInvalidInput	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^        function SptenmatInvalidInput(testCase)$/;"	f
SptenmatSptensorInput	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^        function SptenmatSptensorInput(testCase)$/;"	f
Squeeze	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Squeeze(testCase)$/;"	f
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 3600;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = StartPacket * NSx.MetaTags.SamplingFreq * 60;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^            StartPacket = double(StartPacket) * NSx.MetaTags.SamplingFreq;$/;"	v
StartPacket	lib/TrialData/util/openNSx_td.m	/^        StartPacket = inputArgument(1);$/;"	v
SubsAsgn	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function SubsAsgn(testCase, m, n)$/;"	f
SubsAsgnElement	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnElement(testCase, nd, maxdim)$/;"	f
SubsAsgnGrowOrder	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnGrowOrder(testCase, nd, maxdim)$/;"	f
SubsAsgnGrowSize	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnGrowSize(testCase, nd, maxdim)$/;"	f
SubsAsgnListArray	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnListArray(testCase, nd, maxdim, nx)$/;"	f
SubsAsgnListArrayToEmpty	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnListArrayToEmpty(testCase, nd, maxdim, nx)$/;"	f
SubsAsgnListValue	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnListValue(testCase, nd, maxdim, nx)$/;"	f
SubsAsgnRange	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsAsgnRange(testCase, nd, maxdim)$/;"	f
SubsRef	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function SubsRef(testCase, m, n)$/;"	f
SubsRefColons	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsRefColons(testCase, nd, maxdim, gen)$/;"	f
SubsRefDot	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsRefDot(testCase, nd ,maxdim, gen)$/;"	f
SubsRefEntry	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsRefEntry(testCase, nd, maxdim, gen)$/;"	f
SubsRefList	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsRefList(testCase, nd, maxdim, nx)$/;"	f
SubsRefRanges	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function SubsRefRanges(testCase, nd, maxdim, gen)$/;"	f
Subscripted assignment	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="18">Subscripted assignment<\/h2><p>Symmetric tensors also support subscripted ass/;"	i
Subscripted assignment for a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="23">Subscripted assignment for a ktensor<\/h2><pre class="codeinput">X.lambda = o/;"	i
Subscripted assignment for a sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="28">Subscripted reference for a sptenmat<\/h2><p>This is not supported beyond get/;"	i
Subscripted assignment for a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="37">Subscripted assignment for a sptensor<\/h2><pre class="codeinput">X = sptenso/;"	i
Subscripted assignment for a tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="22">Subscripted assignment for a tenmat<\/h2><pre class="codeinput">A(1:2,1:2) = /;"	i
Subscripted assignment for a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="29">Subscripted assignment for a tensor<\/h2><p>We can assign a single element, a/;"	i
Subscripted assignment for a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="20">Subscripted assignment for a ttensor<\/h2><pre class="codeinput">X.core = ten/;"	i
Subscripted assignment for symktensors	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="20">Subscripted assignment for symktensors<\/h2><p>Subscripted assignment can be /;"	i
Subscripted reference for a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="19">Subscripted reference for a ktensor<\/h2><pre class="codeinput">X(1,1,1) <spa/;"	i
Subscripted reference for a sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="28">Subscripted reference for a sptenmat<\/h2><p>This is not supported beyond get/;"	i
Subscripted reference for a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="27">Subscripted reference for a sptensor<\/h2><pre class="codeinput">X = sptensor/;"	i
Subscripted reference for a tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="21">Subscripted reference for a tenmat<\/h2><pre class="codeinput">A(2,1) <span c/;"	i
Subscripted reference for a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="21">Subscripted reference for a tensor<\/h2><pre class="codeinput">X = tenrand([3/;"	i
Subscripted reference for sumtensors	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="17">Subscripted reference for sumtensors<\/h2><p>Subscripted reference can be use/;"	i
Subscripted reference for symktensors	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><p>Calling <tt>score<\/tt> on two symktensor converts the symktensors to ktensors and cal/;"	i
Subscripted reference of a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="12">Subscripted reference of a symmetric tensor<\/h2><p>Subindex notation extract/;"	i
Subscripted reference to a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="17">Subscripted reference to a ttensor<\/h2><pre class="codeinput">X.core(1,1,1) /;"	i
Sums of structured tensors	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Sums of structured tensors<\/h1><!--introducti/;"	h
Suppress all output	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="11">Suppress all output<\/h2><p>Set <tt>'printitn'<\/tt> to zero to suppress all /;"	i
Symmetric Kruskal tensors	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric Kruskal tensors<\/h1><!--introductio/;"	h
Symmetric tensors	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Symmetric tensors<\/h1><!--introduction--><p>A/;"	h
Symmetrize	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Symmetrize(testCase, nd, maxdim)$/;"	f
Symmetrizing and checking for symmetry in a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="71">Symmetrizing and checking for symmetry in a tensor<\/h2><p>A tensor can be sy/;"	i
T	lib/TrialData/Analysis/runDPCA.m	/^T = size(trial_data(1).(signals{1,1}),1);$/;"	v
T	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    T = size(Xfull,4);$/;"	v
T	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    T    = floor(size(dat(n).spikes, 2) \/ (binWidth\/dataBinWidth));$/;"	v
T	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    T   = seq(n).T;$/;"	v
T	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^T = varargin{1};$/;"	v
T	lib/tensor_toolbox/@tenmat/tenmat.m	/^T = varargin{1};$/;"	v
T	lib/tensor_toolbox/cp_wopt.m	/^T = Z - B;$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(1e-1),'verbosity',1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(1e-2),'verbosity',1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(3*eps),'verbosity',10);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(3e-1),'verbosity',1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(3e-1),'verbosity',10);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X, sqrt(3e-2),'verbosity',1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,0.1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,2*sqrt(eps));$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,norm(X),'ranks',[1 1 1]);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,sqrt(3e-1),'dimorder',ndims(X):-1:1);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,sqrt(3e-1),'ranks',[1 1 1]);$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(X,sqrt(3e-1),'ranks',bsz(1,:));$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(Y,2*sqrt(eps));$/;"	v
T	lib/tensor_toolbox/doc/hosvd_doc.m	/^T = hosvd(Y,2*sqrt(eps),'sequential',false);$/;"	v
T	lib/tensor_toolbox/doc/sumtensor_doc.m	/^T = sumtensor(T1,T2)$/;"	v
T	lib/tensor_toolbox/doc/symtensor_doc.m	/^T = tensor(T) $/;"	v
T	lib/tensor_toolbox/doc/tensor_doc.m	/^T = tensor(randn(2,3,3));$/;"	v
T	lib/tensor_toolbox/doc/tucker_als_doc.m	/^T = tucker_als(X,2)        %<-- best rank(2,2,2) approximation $/;"	v
T	lib/tensor_toolbox/doc/tucker_als_doc.m	/^T = tucker_als(X,2,struct('dimorder',[3 2 1]))$/;"	v
T	lib/tensor_toolbox/doc/tucker_als_doc.m	/^T = tucker_als(X,2,struct('dimorder',[3 2 1],'init','eigs'))$/;"	v
T	lib/tensor_toolbox/doc/tucker_als_doc.m	/^T = tucker_als(X,2,struct('dimorder',[3 2 1],'init',{U0}))$/;"	v
T	lib/tensor_toolbox/doc/tucker_als_doc.m	/^T = tucker_als(X,[2 2 1])  %<-- best rank(2,2,1) approximation $/;"	v
T	lib/tensor_toolbox/hosvd.m	/^T = ttensor(G,U);$/;"	v
T	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^            T = sptensor([1 1 1; 2 2 2; 3 3 3],[1; 2; 3],[3 3 3]);$/;"	v
T	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^            T = tenrand([2 3 4]);$/;"	v
T	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            T = tensor(feval(g,[lsz 1]),lsz);$/;"	v
T	lib/tensor_toolbox/tests/Test_Tensor.m	/^            T = max([X.data(:), Y.data(:), Z.data(:)], [], 2);$/;"	v
T	lib/tensor_toolbox/tucker_als.m	/^T = ttensor(core, U);$/;"	v
T	lib/tensor_toolbox/tucker_sym.m	/^    T = X;$/;"	v
T	lib/tensor_toolbox/tucker_sym.m	/^    T = ttensor(core, Xcell);$/;"	v
T1	lib/tensor_toolbox/doc/sumtensor_doc.m	/^T1 = tensor(ones(3,3,3)); %<--A tensor$/;"	v
T1	lib/tensor_toolbox/doc/symktensor_doc.m	/^T1 = tensor(n*ones(1,m)); %<-- Declare a tensor for size$/;"	v
T1	lib/tensor_toolbox/tests/Test_Tensor.m	/^                    T1 = ttm( ttm(X,Mj,j), Mi, i);$/;"	v
T1	lib/tensor_toolbox/tests/Test_Tensor.m	/^                T1 = ttm( ttm(X,A,i), B, i);$/;"	v
T2	lib/tensor_toolbox/doc/sumtensor_doc.m	/^T2 = sptensor([1 1 1; 2 2 2; 3 3 2; 2 1 1], 1, [3,3,3]); %<--A sparse tensor$/;"	v
T2	lib/tensor_toolbox/doc/symktensor_doc.m	/^T2 = symtensor(@ones, n,m); %<-- Declare a symtensor for size$/;"	v
T2	lib/tensor_toolbox/doc/symtensor_doc.m	/^T2 = tensor([1:8],[2 2 2])$/;"	v
T2	lib/tensor_toolbox/tests/Test_Tensor.m	/^                    T2 = ttm( ttm(X,Mi,i), Mj, j);$/;"	v
T2	lib/tensor_toolbox/tests/Test_Tensor.m	/^                T2 = ttm( X, B*A, i);$/;"	v
TMP	lib/tensor_toolbox/teneye.m	/^    TMP = VL(:,ones(length(ROWS)\/(LD+1),1,CN));  % Match dimension.$/;"	v
TMP	lib/tensor_toolbox/teneye.m	/^TMP = VL(:,ones(L\/M,1,CN));  % Instead of repmatting.$/;"	v
TT	lib/TrialData/util/orthogonalize.m	/^    TT = diag(diag(DD)) * VV';$/;"	v
TT	lib/tensor_toolbox/doc/sumtensor_doc.m	/^TT = full(ST); %<-- Form the sum of the tensors explicitly$/;"	v
TTB_CPAPR	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_CPAPR"><pre class="bibtex">@Article{TTB_CPAPR,$/;"	I
TTB_CPOPT	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_CPOPT"><pre class="bibtex">@article{TTB_CPOPT,$/;"	I
TTB_CPRALS	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_CPRALS"><pre class="bibtex">@misc{TTB_CPRALS,  $/;"	I
TTB_CPSYM	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_CPSYM"><pre class="bibtex">@article{TTB_CPSYM,  $/;"	I
TTB_CPWOPT	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_CPWOPT"><pre class="bibtex">@article{TTB_CPWOPT,$/;"	I
TTB_Dense	lib/tensor_toolbox/doc/html/bibtex.html	/^<pre id="TTB_Dense" class="bibtex">$/;"	I
TTB_EIGGEAP	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_EIGGEAP"><pre class="bibtex">@Article{TTB_EIGGEAP,$/;"	I
TTB_MET	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_MET"><pre class="bibtex">@inproceedings{TTB_MET,$/;"	I
TTB_SSHOPM	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_SSHOPM"><pre class="bibtex">@article{TTB_SSHOPM,$/;"	I
TTB_Software	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_Software"><pre class="bibtex">@misc{TTB_Software,$/;"	I
TTB_Sparse	lib/tensor_toolbox/doc/html/bibtex.html	/^<a name="TTB_Sparse" class="nameonly"><\/a>$/;"	a
TTB_Sparse	lib/tensor_toolbox/doc/html/bibtex.html	/^<p id="TTB_Sparse"><pre class="bibtex">@article{TTB_Sparse,$/;"	I
TenFun	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function TenFun(testCase, m, n, g)$/;"	f
Tenfun	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Tenfun(testCase, nd, maxdim, gen)$/;"	f
Tensor Toolbox	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^        <td colspan="3" id="content"><h2>Tensor Toolbox<\/h2><\/td>$/;"	i
Tensor Toolbox Contribution Guide	lib/tensor_toolbox/CONTRIBUTION_GUIDE.md	/^# Tensor Toolbox Contribution Guide$/;"	c
Tensor Toolbox for MATLAB	lib/tensor_toolbox/doc/html/index.html	/^      <h1 id="home">Tensor Toolbox for MATLAB<\/h1>$/;"	h
Tensor Types	lib/tensor_toolbox/doc/html/tensor_types.html	/^      <h1 id="home">Tensor Types<\/h1>$/;"	h
Tensor times matrix (ttm for tensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="28">Tensor times matrix (ttm for tensor)<\/h2><p>Compute a tensor times a matrix /;"	i
Tensor times tensor (ttt for tensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="52">Tensor times tensor (ttt for tensor)<\/h2><pre class="codeinput">X = tensor(r/;"	i
Tensor times vector (ttv for tensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Multiplying tensors<\/h1><!--introduction--><!/;"	i
Tensors	lib/tensor_toolbox/doc/html/tensor_doc.html	/^  <\/head><body><div class="content"><h1>Tensors<\/h1><!--introduction--><p>Tensors are extensio/;"	h
Terminating once a desired fit is achieved	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="10">Terminating once a desired fit is achieved<\/h2><p>If we know the noise level/;"	i
TestIsSymmetric	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function TestIsSymmetric(testCase,issymver)$/;"	f
Test_DenseSparseConvert	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^classdef Test_DenseSparseConvert < matlab.unittest.TestCase$/;"	c
Test_ExportData	lib/tensor_toolbox/tests/Test_ExportData.m	/^classdef Test_ExportData < matlab.unittest.TestCase$/;"	c
Test_ImportData	lib/tensor_toolbox/tests/Test_ImportData.m	/^classdef Test_ImportData < matlab.unittest.TestCase$/;"	c
Test_KtensorScore	lib/tensor_toolbox/tests/Test_KtensorScore.m	/^classdef Test_KtensorScore < matlab.unittest.TestCase$/;"	c
Test_NewTTM	lib/tensor_toolbox/tests/Test_NewTTM.m	/^classdef Test_NewTTM < matlab.unittest.TestCase$/;"	c
Test_Sptenmat	lib/tensor_toolbox/tests/Test_Sptenmat.m	/^classdef Test_Sptenmat < matlab.unittest.TestCase$/;"	c
Test_Symtensor	lib/tensor_toolbox/tests/Test_Symtensor.m	/^classdef Test_Symtensor < matlab.unittest.TestCase$/;"	c
Test_Tensor	lib/tensor_toolbox/tests/Test_Tensor.m	/^classdef Test_Tensor < matlab.unittest.TestCase$/;"	c
Tests for Tensor Toolbox for MATLAB	lib/tensor_toolbox/tests/README.md	/^# Tests for Tensor Toolbox for MATLAB$/;"	c
The constituent parts of a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="8">The constituent parts of a tensor<\/h2><pre class="codeinput">X = tenrand([4 3/;"	i
Third-party optimization software	lib/tensor_toolbox/doc/html/cp_opt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>All-at-once optimization for CP tensor decompo/;"	i
Third-party optimization software	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	i
ThreeWay	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^        function ThreeWay(testCase)$/;"	f
Time	lib/tensor_toolbox/tests/Test_NewTTM.m	/^        function Time(testCase, combo, ver)$/;"	f
TimeScale	lib/TrialData/util/openNSx_td.m	/^        TimeScale = inputArgument;$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = tRawData(1:4,:);$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^    Timestamp = typecast(Timestamp(:), 'uint32').';$/;"	v
Timestamp	lib/TrialData/util/openNEV_td.m	/^Timestamp = [];$/;"	v
Ttm	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Ttm(testCase)$/;"	f
TtmOrder	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function TtmOrder(testCase)$/;"	f
TtmSameMode	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function TtmSameMode(testCase)$/;"	f
Ttv	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function Ttv(testCase)$/;"	f
Tucker Decompositions	lib/tensor_toolbox/doc/html/tucker.html	/^      <h1 id="home">Tucker Decompositions<\/h1>$/;"	h
Tucker operator and matricized tensors	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="15">Tucker operator and matricized tensors<\/h2><p>The Tucker operator also has v/;"	i
Tucker tensor properties	lib/tensor_toolbox/doc/html/identities_doc.html	/^<\/pre><h2 id="8">Tucker tensor properties<\/h2><p>The properties of the Tucker operator follow /;"	i
Tucker tensor times matrix (ttm for ttensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="47">Tucker tensor times matrix (ttm for ttensor)<\/h2><p>The special structure of/;"	i
Tucker tensor times vector (ttv for ttensor)	lib/tensor_toolbox/doc/html/multiply_doc.html	/^<\/pre><h2 id="23">Tucker tensor times vector (ttv for ttensor)<\/h2><p>The special structure of/;"	i
Tucker tensors	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Tucker tensors<\/h1><!--introduction--><p>Tuck/;"	h
Tvals	lib/tensor_toolbox/cp_wopt.m	/^Tvals = Zvals - Bvals;$/;"	v
U	lib/tensor_toolbox/@ktensor/ktensor.m	/^    U = cell(nd,1);$/;"	v
U	lib/tensor_toolbox/@ktensor/norm.m	/^U = A.u;$/;"	v
U	lib/tensor_toolbox/@ktensor/symmetrize.m	/^U = X.u;$/;"	v
U	lib/tensor_toolbox/@ktensor/tocell.m	/^    U = X.u;$/;"	v
U	lib/tensor_toolbox/@ktensor/tocell.m	/^U = X.u;$/;"	v
U	lib/tensor_toolbox/@ktensor/viz.m	/^    U = K.u{k};$/;"	v
U	lib/tensor_toolbox/@sptensor/mttkrp.m	/^        U = redistribute(U,1);$/;"	v
U	lib/tensor_toolbox/@sptensor/mttkrp.m	/^        U = redistribute(U,2);$/;"	v
U	lib/tensor_toolbox/@sptensor/mttkrp.m	/^    U = U.u;$/;"	v
U	lib/tensor_toolbox/@symktensor/norm.m	/^U = A.u;$/;"	v
U	lib/tensor_toolbox/@tensor/mttkrp.m	/^        U = redistribute(U,1);$/;"	v
U	lib/tensor_toolbox/@tensor/mttkrp.m	/^        U = redistribute(U,2);$/;"	v
U	lib/tensor_toolbox/@tensor/mttkrp.m	/^    U = U.u;$/;"	v
U	lib/tensor_toolbox/cp_als.m	/^U = Uinit;$/;"	v
U	lib/tensor_toolbox/cp_apr.m	/^        U = M.U;$/;"	v
U	lib/tensor_toolbox/cp_apr.m	/^    U = M.U;$/;"	v
U	lib/tensor_toolbox/cp_arls.m	/^U = Uinit;$/;"	v
U	lib/tensor_toolbox/cp_nmu.m	/^U = Uinit;$/;"	v
U	lib/tensor_toolbox/create_guess.m	/^U = cell(nd,1);$/;"	v
U	lib/tensor_toolbox/create_problem.m	/^U = cell(nd,1);$/;"	v
U	lib/tensor_toolbox/doc/hosvd_doc.m	/^U = cell(3,1);$/;"	v
U	lib/tensor_toolbox/doc/multiply_doc.m	/^U = {rand(2,3), 2*rand(3,3), 3*rand(4,3)}; %<--the cell array$/;"	v
U	lib/tensor_toolbox/doc/test_problems_doc.m	/^U = create_guess('Soln', info.Soln, 'Factor_Generator', 'pertubation', ...$/;"	v
U	lib/tensor_toolbox/doc/test_problems_doc.m	/^U = info.Soln.U{1};$/;"	v
U	lib/tensor_toolbox/doc/ttensor_doc.m	/^U = {rand(5,3), rand(4,2), rand(3,1)}; %<-- The matrices.$/;"	v
U	lib/tensor_toolbox/hosvd.m	/^U = cell(d,1); % Allocate space for factor matrices$/;"	v
U	lib/tensor_toolbox/import_data.m	/^    U = {};$/;"	v
U	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            U = cell(nd,1);$/;"	v
U	lib/tensor_toolbox/tests/Test_Tensor.m	/^                U = nvecs(X, n, r);$/;"	v
U	lib/tensor_toolbox/tt_cp_fg.m	/^    U = mttkrp(Z,A,n);$/;"	v
U	lib/tensor_toolbox/tt_cp_fg.m	/^U = mttkrp(Z,A,1);$/;"	v
U	lib/tensor_toolbox/tucker_als.m	/^U = Uinit;$/;"	v
U	lib/tensor_toolbox/tucker_als.m	/^U = cell(N,1);$/;"	v
U0	lib/tensor_toolbox/doc/tucker_als_doc.m	/^U0 = {rand(5,2),rand(4,2),[]}; %<-- Initial guess for factors of T$/;"	v
U1	lib/tensor_toolbox/@ktensor/symmetrize.m	/^U1 = U{1};$/;"	v
U1	lib/tensor_toolbox/doc/nvecs_doc.m	/^U1 = nvecs(X,1,2); %<-- Mode 1$/;"	v
U1	lib/tensor_toolbox/doc/nvecs_doc.m	/^U1 = nvecs(X,1,4); %<-- Mode 1$/;"	v
U2	lib/tensor_toolbox/doc/nvecs_doc.m	/^U2 = nvecs(X,2,2); %<-- Mode 2$/;"	v
U2	lib/tensor_toolbox/doc/nvecs_doc.m	/^U2 = nvecs(X,2,3); %<-- Mode 2$/;"	v
U3	lib/tensor_toolbox/doc/nvecs_doc.m	/^U3 = nvecs(X,3,2); %<-- Mode 3$/;"	v
UU	lib/tensor_toolbox/tucker_sym.m	/^    UU = UU(:,1:ii);$/;"	v
U_mixed	lib/tensor_toolbox/cp_arls.m	/^U_mixed = Uinit;$/;"	v
U_mttkrp	lib/tensor_toolbox/cp_als.m	/^              U_mttkrp = Unew;$/;"	v
U_mttkrp	lib/tensor_toolbox/cp_als.m	/^U_mttkrp = zeros(size(X, dimorder(end)), R);$/;"	v
Uexp	lib/tensor_toolbox/tt_gcp_fg_est.m	/^Uexp = cell(d,1);$/;"	v
Ui	lib/tensor_toolbox/@ktensor/symmetrize.m	/^    Ui = U{i};$/;"	v
Uinit	lib/tensor_toolbox/cp_als.m	/^        Uinit = cell(N,1);$/;"	v
Uinit	lib/tensor_toolbox/cp_als.m	/^    Uinit = init;$/;"	v
Uinit	lib/tensor_toolbox/cp_arls.m	/^        Uinit = cell(N,1);$/;"	v
Uinit	lib/tensor_toolbox/cp_arls.m	/^    Uinit = init;$/;"	v
Uinit	lib/tensor_toolbox/cp_nmu.m	/^        Uinit = cell(N,1);$/;"	v
Uinit	lib/tensor_toolbox/cp_nmu.m	/^    Uinit = init;$/;"	v
Uinit	lib/tensor_toolbox/gcp_opt.m	/^    Uinit = cell(nd,1);$/;"	v
Uinit	lib/tensor_toolbox/gcp_opt.m	/^    Uinit = init;$/;"	v
Uinit	lib/tensor_toolbox/tucker_als.m	/^        Uinit = cell(N,1);$/;"	v
Uinit	lib/tensor_toolbox/tucker_als.m	/^    Uinit = init;$/;"	v
Ul	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Ul = khatrirao(U{1:N-1},'r');$/;"	v
Ul	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Ul = khatrirao(U{n+1:N},'r');$/;"	v
UnLab	lib/TrialData/util/lib/isomap/dijk.m	/^      UnLab = 1:n;$/;"	v
UnaryFuncs	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        function UnaryFuncs(testCase,uf)$/;"	f
UnaryFuncs	lib/tensor_toolbox/tests/Test_Tensor.m	/^        function UnaryFuncs(testCase,uf)$/;"	f
Unew	lib/tensor_toolbox/cp_als.m	/^                Unew = full(Unew);   % for the case R=1$/;"	v
Unew	lib/tensor_toolbox/cp_als.m	/^            Unew = Unew \/ Y;$/;"	v
Unew	lib/tensor_toolbox/cp_als.m	/^            Unew = bsxfun(@rdivide, Unew, lambda');$/;"	v
Unew	lib/tensor_toolbox/cp_als.m	/^            Unew = mttkrp(X,U,n);$/;"	v
Unew	lib/tensor_toolbox/cp_arls.m	/^                Unew = full(Unew);   % for the case R=1$/;"	v
Unew	lib/tensor_toolbox/cp_arls.m	/^            Unew = bsxfun(@rdivide, Unew, lambda');$/;"	v
Unew	lib/tensor_toolbox/cp_arls.m	/^            Unew = dense_sample_mttkrp(X_mixed,U_mixed,n,nsamplsq,mixinfo);$/;"	v
Unew	lib/tensor_toolbox/cp_nmu.m	/^        Unew = Unew .* tmp;$/;"	v
Unew	lib/tensor_toolbox/cp_nmu.m	/^        Unew = Unew .\/ (Y + epsilon);$/;"	v
Unew	lib/tensor_toolbox/cp_nmu.m	/^        Unew = U{n};$/;"	v
Union	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::Union(FibHeap *OtherHeap)$/;"	f	class:FibHeap	typeref:typename:void
Unique entries of a tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="3">Unique entries of a tensor<\/h2><p>Note from TGK: This needs to be added. It s/;"	i
Upsilon	lib/tensor_toolbox/tt_cp_fg.m	/^Upsilon = cell(N,1);$/;"	v
Ur	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Ur = khatrirao(U{2:N},'r');$/;"	v
Ur	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Ur = reshape(khatrirao(U{1:n-1},'r'), szl, 1, R);$/;"	v
Use HOSVD initial guess	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><h2 id="12">Use HOSVD initial guess<\/h2><p>Use the <tt>'nvecs'<\/tt> option to use the l/;"	i
Use a different ordering of the dimensions	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="4">Use a different ordering of the dimensions<\/h2><pre class="codeinput">T = tuc/;"	i
Use aatx to efficiently compute A * A' * x for a sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="34">Use aatx to efficiently compute A * A' * x for a sptenmat<\/h2><pre class="co/;"	i
Use arrange to normalize and sort a symktensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="16">Use arrange to normalize and sort a symktensor<\/h2><p>The function <tt>arran/;"	i
Use arrange to normalize the factors of a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="37">Use arrange to normalize the factors of a ktensor<\/h2><p>The function <tt>ar/;"	i
Use cp_als to find a CP decomposition of a sumtensor	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="13">Use cp_als to find a CP decomposition of a sumtensor<\/h2><p>One of the prima/;"	i
Use double to convert a ktensor to a multidimensional array	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="11">Use double to convert a ktensor to a multidimensional array<\/h2><pre class="/;"	i
Use double to convert a sptenmat to a MATLAB sparse matrix	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="20">Use double to convert a sptenmat to a MATLAB sparse matrix<\/h2><pre class="c/;"	i
Use double to convert a sptensor to a (dense) multidimensional array	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="21">Use double to convert a sptensor to a (dense) multidimensional array<\/h2><pr/;"	i
Use double to convert a sumtensor to a multidimensional array	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="8">Use double to convert a sumtensor to a multidimensional array<\/h2><p>The <tt>/;"	i
Use double to convert a symktensor to a multi-dimensional array	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="11">Use double to convert a symktensor to a multi-dimensional array<\/h2><p>The f/;"	i
Use double to convert a tenmat to a MATLAB matrix	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="18">Use double to convert a tenmat to a MATLAB matrix<\/h2><pre class="codeinput"/;"	i
Use double to convert a tensor to a (multidimensional) array	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="16">Use double to convert a tensor to a (multidimensional) array<\/h2><pre class=/;"	i
Use double to convert a ttensor to a (multidimensional) array	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="13">Use double to convert a ttensor to a (multidimensional) array<\/h2><pre class/;"	i
Use elemfun to manipulate the nonzeros of a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="44">Use elemfun to manipulate the nonzeros of a sptensor<\/h2><p>The function <tt/;"	i
Use end as the last index.	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="43">Use end as the last index.<\/h2><pre class="codeinput">X(end-10:end,end-10:en/;"	i
Use end for the last array index.	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="26">Use end for the last array index.<\/h2><pre class="codeinput">X(3:end,1,1)  </;"	i
Use end for the last index	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="30">Use end for the last index<\/h2><p>End is not supported.<\/p><h2 id="31">Basi/;"	i
Use end for the last index	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="23">Use end for the last index<\/h2><pre class="codeinput">A(end,end) <span class/;"	i
Use find for subscripts of nonzero elements of a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="37">Use find for subscripts of nonzero elements of a tensor<\/h2><p>The <tt>find</;"	i
Use find to extract nonzeros from a tensor and then create a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="22">Use find to extract nonzeros from a tensor and then create a sptensor<\/h2><p/;"	i
Use fixsigns for sign indeterminacies in a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="39">Use fixsigns for sign indeterminacies in a ktensor<\/h2><p>The largest magnit/;"	i
Use full or tensor to convert a ktensor to a tensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="9">Use full or tensor to convert a ktensor to a tensor<\/h2><pre class="codeinput/;"	i
Use full or tensor to convert a sptensor to a (dense) tensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="18">Use full or tensor to convert a sptensor to a (dense) tensor<\/h2><pre class=/;"	i
Use full or tensor to convert a ttensor to a tensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="10">Use full or tensor to convert a ttensor to a tensor<\/h2><pre class="codeinpu/;"	i
Use full to convert a sptenmat to a tenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="24">Use full to convert a sptenmat to a tenmat<\/h2><pre class="codeinput">B = sp/;"	i
Use full to convert a sumtensor to a "generic" tensor	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="7">Use full to convert a sumtensor to a "generic" tensor<\/h2><p>The <tt>full<\/t/;"	i
Use full to convert a symktensor to a tensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="10">Use full to convert a symktensor to a tensor<\/h2><p>The function <tt>full<\//;"	i
Use full to convert a symmetric tensor to a multidimensional array	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="11">Use full to convert a symmetric tensor to a multidimensional array<\/h2><pre /;"	i
Use innerprod to compute the inner product of a sumtensor	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="10">Use innerprod to compute the inner product of a sumtensor<\/h2><p>The <tt>inn/;"	i
Use ktensor to store the 'skinny' SVD of a matrix	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="41">Use ktensor to store the 'skinny' SVD of a matrix<\/h2><pre class="codeinput"/;"	i
Use ncomponents for the rank of symktensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="9">Use ncomponents for the rank of symktensor<\/h2><p>The function <tt>ncomponent/;"	i
Use ndims and size for the dimensions of a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="16">Use ndims and size for the dimensions of a ktensor<\/h2><pre class="codeinput/;"	i
Use ndims and size for the dimensions of a sumtensor	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="6">Use ndims and size for the dimensions of a sumtensor<\/h2><p>For a given sumte/;"	i
Use ndims and size for the dimensions of a symktensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><p>This method of declaring a symktensor is useful in comparing decomposition methods: th/;"	i
Use ndims and size to get the size of a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="23">Use ndims and size to get the size of a sptensor<\/h2><pre class="codeinput">/;"	i
Use ndims and size to get the size of a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="9">Use ndims and size to get the size of a symmetric tensor<\/h2><pre class="code/;"	i
Use ndims and size to get the size of a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="18">Use ndims and size to get the size of a tensor<\/h2><pre class="codeinput">nd/;"	i
Use ndims and size to get the size of a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="14">Use ndims and size to get the size of a ttensor<\/h2><pre class="codeinput">n/;"	i
Use nnz to get the number of nonzeros of a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="26">Use nnz to get the number of nonzeros of a sptensor<\/h2><pre class="codeinpu/;"	i
Use norm for compatibility with the other types of tensors.	lib/tensor_toolbox/doc/html/sumtensor_doc.html	/^<\/pre><h2 id="11">Use norm for compatibility with the other types of tensors.<\/h2><p>The <tt>n/;"	i
Use norm to compute the Frobenius norm of a symktensor	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="13">Use norm to compute the Frobenius norm of a symktensor<\/h2><p>The function </;"	i
Use normalize to normalize the components of a symktensor.	lib/tensor_toolbox/doc/html/symktensor_doc.html	/^<\/pre><h2 id="14">Use normalize to normalize the components of a symktensor.<\/h2><p>The functi/;"	i
Use permute to reorder the modes of a ktensor	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="36">Use permute to reorder the modes of a ktensor<\/h2><pre class="codeinput">per/;"	i
Use permute to reorder the modes of a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="59">Use permute to reorder the modes of a sptensor<\/h2><pre class="codeinput">A /;"	i
Use permute to reorder the modes of a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="68">Use permute to reorder the modes of a tensor<\/h2><pre class="codeinput">X = /;"	i
Use permute to reorder the modes of a ttensor	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="27">Use permute to reorder the modes of a ttensor<\/h2><pre class="codeinput">per/;"	i
Use size and tsize for the dimensions of a sptenmat	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="27">Use size and tsize for the dimensions of a sptenmat<\/h2><pre class="codeinpu/;"	i
Use size and tsize for the dimensions of a tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="20">Use size and tsize for the dimensions of a tenmat<\/h2><pre class="codeinput"/;"	i
Use sptenrand to create a random sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="15">Use sptenrand to create a random sptensor<\/h2><pre class="codeinput">X = spt/;"	i
Use sptensor to convert a (dense) tensor to a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="20">Use sptensor to convert a (dense) tensor to a sptensor<\/h2><pre class="codei/;"	i
Use sptensor to convert a sptenmat to a sptensor	lib/tensor_toolbox/doc/html/sptenmat_doc.html	/^<\/pre><h2 id="26">Use sptensor to convert a sptenmat to a sptensor<\/h2><pre class="codeinput">/;"	i
Use squeeze to remove singleton dimensions from a sptensor	lib/tensor_toolbox/doc/html/sptensor_doc.html	/^<\/pre><h2 id="17">Use squeeze to remove singleton dimensions from a sptensor<\/h2><pre class="c/;"	i
Use squeeze to remove singleton dimensions from a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="15">Use squeeze to remove singleton dimensions from a tensor<\/h2><pre class="cod/;"	i
Use tendiag or sptendiag to convert a ktensor to a ttensor.	lib/tensor_toolbox/doc/html/ktensor_doc.html	/^<\/pre><h2 id="12">Use tendiag or sptendiag to convert a ktensor to a ttensor.<\/h2><p>A ktensor/;"	i
Use tenone to create a tensor of all ones	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="12">Use tenone to create a tensor of all ones<\/h2><pre class="codeinput">X = ten/;"	i
Use tenrand to create a random tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="14">Use tenrand to create a random tensor<\/h2><pre class="codeinput">X = tenrand/;"	i
Use tensor to convert a tenmat to a tensor	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="19">Use tensor to convert a tenmat to a tensor<\/h2><pre class="codeinput">Y = te/;"	i
Use tenzeros to create a tensor of all zeros	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="13">Use tenzeros to create a tensor of all zeros<\/h2><pre class="codeinput">X = /;"	i
Use the n-vecs initialization method	lib/tensor_toolbox/doc/html/tucker_als_doc.html	/^<\/pre><h2 id="5">Use the n-vecs initialization method<\/h2><p>This initialization is more expen/;"	i
Using a generating function to populate a symmetric tensor	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><h2 id="8">Using a generating function to populate a symmetric tensor<\/h2><p>In general,/;"	i
Using end for last index	lib/tensor_toolbox/doc/html/ttensor_doc.html	/^<\/pre><h2 id="23">Using end for last index<\/h2><pre class="codeinput">X{end}  <span class="com/;"	i
Using end for the last array index.	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="34">Using end for the last array index.<\/h2><pre class="codeinput">X(end,end,end/;"	i
Using nvecs for the HOSVD	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^<\/pre><h2 id="11">Using nvecs for the HOSVD<\/h2><pre class="codeinput">X = tenrand([4 3 2]) <s/;"	i
Using nvecs to calculate the leading mode-n vectors	lib/tensor_toolbox/doc/html/nvecs_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Generating the leading mode-n vectors<\/h1><!-/;"	i
Using reshape to rearrange elements in a tensor	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="42">Using reshape to rearrange elements in a tensor<\/h2><p><tt>reshape<\/tt> res/;"	i
Using symtenfun for elementwise operations on one or more symmetric tensors	lib/tensor_toolbox/doc/html/symtensor_doc.html	/^<\/pre><p>The symtensor class supports the following additional MATLABbinary operations: and, or/;"	i
Using tenfun for elementwise operations on one or more tensors	lib/tensor_toolbox/doc/html/tensor_doc.html	/^<\/pre><h2 id="65">Using tenfun for elementwise operations on one or more tensors<\/h2><p>The fu/;"	i
UtU	lib/tensor_toolbox/@symktensor/norm.m	/^UtU = A.u'*A.u;$/;"	v
UtU	lib/tensor_toolbox/cp_als.m	/^    UtU = zeros(R,R,N);$/;"	v
Utilde	lib/tensor_toolbox/tucker_als.m	/^        Utilde = ttm(X, U, -n, 't');$/;"	v
V	lib/TrialData/Analysis/getModel.m	/^                    V = zeros(size(y,2));$/;"	v
V	lib/TrialData/Analysis/runDPCA.m	/^V = [];$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    V = V(:, order(1:L));$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    V = V(:, toKeep);$/;"	v
V	lib/TrialData/td_limblab/td_dpca/dpca.m	/^V = encoder;$/;"	v
V	lib/tensor_toolbox/@ktensor/mttkrp.m	/^V = X.u{n} * W;$/;"	v
V	lib/tensor_toolbox/@ktensor/symmetrize.m	/^    V = V + Ui;$/;"	v
V	lib/tensor_toolbox/@ktensor/symmetrize.m	/^V = U1;$/;"	v
V	lib/tensor_toolbox/@ktensor/symmetrize.m	/^V = V.\/ n;$/;"	v
V	lib/tensor_toolbox/@sptensor/mttkrp.m	/^V = zeros(size(X,n),R);$/;"	v
V	lib/tensor_toolbox/@sptensor/ttm.m	/^    V = V';$/;"	v
V	lib/tensor_toolbox/@sumtensor/mttkrp.m	/^    V = V + mttkrp(X.part{i},U,n);$/;"	v
V	lib/tensor_toolbox/@sumtensor/mttkrp.m	/^V = mttkrp(X.part{1},U,n);$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^        V = bsxfun(@times,Ur,Y);$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^        V = reshape(sum(V,1),szn,R);$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^        V = zeros(szn,R);$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^    V =  Y * Ur;$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^    V = Xn*Z;$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrp.m	/^    V = Y' * Ul;$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrps.m	/^    V = W_in;$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrps.m	/^    V = zeros(size(W_in,1), r);$/;"	v
V	lib/tensor_toolbox/@tensor/mttkrps.m	/^V = cell(d,1);$/;"	v
V	lib/tensor_toolbox/@ttensor/mttkrp.m	/^V = X.u{n} * Y;$/;"	v
V	lib/tensor_toolbox/@ttensor/norm.m	/^    V = cell(ndims(X),1);$/;"	v
V	lib/tensor_toolbox/@ttensor/nvecs.m	/^V = cell(ndims(X),1);$/;"	v
V	lib/tensor_toolbox/cp_apr.m	/^            V = (Phi{n} > 1) & (M{n} < kappaTol);$/;"	v
V	lib/tensor_toolbox/cp_apr.m	/^    V = M.U{n}*Pi';$/;"	v
V	lib/tensor_toolbox/cp_arls.m	/^    V = fft(bsxfun(@times,V,mixinfo.signflips{n}));$/;"	v
V	lib/tensor_toolbox/cp_arls.m	/^    V = real(bsxfun(@times,ifft(V),mixinfo.signflips{n}));$/;"	v
V	lib/tensor_toolbox/cp_arls.m	/^V = Xsamp \/ Zsamp.';$/;"	v
V	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^    V = 1.1 + cos(bsxfun(@times, 2*pi\/sz(k)*(0:sz(k)-1)', 1:nc));$/;"	v
V	lib/tensor_toolbox/doc/hosvd_doc.m	/^    V = matrandorth(xsz(k));$/;"	v
V	lib/tensor_toolbox/doc/hosvd_doc.m	/^    V = matrandorth(ysz(k));$/;"	v
V	lib/tensor_toolbox/doc/sptensor_doc.m	/^V = X(S) %<-- Extract the corresponding values.$/;"	v
V	lib/tensor_toolbox/doc/symktensor_doc.m	/^V = [L; X(:)]; %<--Forming the vectorized version$/;"	v
V	lib/tensor_toolbox/doc/tensor_doc.m	/^V = X(S) %<-- Extract the corresponding values from X.$/;"	v
V	lib/tensor_toolbox/doc/ttensor_doc.m	/^V = {rand(3,2),rand(2,2),rand(1,2)}; %<-- Create some random matrices.$/;"	v
V	lib/tensor_toolbox/teneye.m	/^V = (N-K+1):N;  % Final vector.$/;"	v
V	lib/tensor_toolbox/tt_cp_fg.m	/^V = A{1} .* U;$/;"	v
VAF	lib/TrialData/util/compute_vaf.m	/^VAF = 1-SSE.\/SS;$/;"	v
VL	lib/tensor_toolbox/teneye.m	/^VL = [-(N-1) D].';  % These values will be put into PR.$/;"	v
VX	lib/tensor_toolbox/@sptensor/innerprod.m	/^            VX = extract(X,SY);   %<-----VX = X(SY);$/;"	v
VY	lib/tensor_toolbox/@sptensor/innerprod.m	/^            VY = extract(Y,SX);   %<-----VY = Y(SX);$/;"	v
VY	lib/tensor_toolbox/@sptensor/innerprod.m	/^        VY = Y(SX,'extract');$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null                      = V(size(y,2)+1:end,:)';$/;"	v
V_null	lib/TrialData/Analysis/getPotentSpace.m	/^        V_null = [];$/;"	v
V_potent	lib/TrialData/Analysis/getPotentSpace.m	/^    V_potent                    = V(1:size(y,2),:)';$/;"	v
Varying epoch size	lib/tensor_toolbox/doc/html/cp_arls_doc.html	/^<\/pre><h2 id="6">Varying epoch size<\/h2><p>It is possible to vary that number of iterations pe/;"	i
Vectorize via tenmat	lib/tensor_toolbox/doc/html/tenmat_doc.html	/^<\/pre><h2 id="7">Vectorize via tenmat<\/h2><p>All the dimensions can be mapped to the rows or t/;"	i
Verbosity - Getting more or less information.	lib/tensor_toolbox/doc/html/hosvd_doc.html	/^<\/pre><h2 id="9">Verbosity - Getting more or less information.<\/h2><p>Setting the verbosity to/;"	i
Visualize the results	lib/tensor_toolbox/doc/html/cp_als_doc.html	/^<\/pre><p>We typically can achieve a final fit of f = 0.97. The method stops when the change in /;"	i
Vplotspace	lib/tensor_toolbox/@ktensor/viz.m	/^Vplotspace = 1 - res.TopSpace - res.BottomSpace - (nc - 1) * res.VertSpace;$/;"	v
Vpred	lib/TrialData/util/predict_kalman.m	/^        Vpred = A * Vprev * A' + Q;$/;"	v
Vpred	lib/TrialData/util/predict_kalman.m	/^        Vpred = V0;$/;"	v
Vprev	lib/TrialData/util/predict_kalman.m	/^        Vprev = Vpred;$/;"	v
Vprev	lib/TrialData/util/predict_kalman.m	/^        Vprev = squeeze(Vnew(:,:,t-1));$/;"	v
W	lib/TrialData/Analysis/getPotentSpace.m	/^    W = zeros( size(y,2), size(x,2) );$/;"	v
W	lib/TrialData/Analysis/runDPCA.m	/^W = [];$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    W = W(:, order(1:L));$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    W = W(:, toKeep);$/;"	v
W	lib/TrialData/td_limblab/td_dpca/dpca.m	/^W = decoder';$/;"	v
W	lib/tensor_toolbox/@ktensor/mttkrp.m	/^  W = W .* (X.u{i}' * U{i});$/;"	v
W	lib/tensor_toolbox/@ktensor/mttkrp.m	/^W = repmat(X.lambda,1,R);$/;"	v
W	lib/tensor_toolbox/@symktensor/fg.m	/^    W = Data.W;$/;"	v
W	lib/tensor_toolbox/@symktensor/fg_setup.m	/^            W = W .* fgopts.weights(I);$/;"	v
W	lib/tensor_toolbox/@symktensor/fg_setup.m	/^            W = W .* fgopts.weights.val;$/;"	v
W	lib/tensor_toolbox/@symktensor/fg_setup.m	/^        W = ones(size(W));$/;"	v
W	lib/tensor_toolbox/@symtensor/indices.m	/^W = zeros(sz,1);$/;"	v
W	lib/tensor_toolbox/@tensor/mttkrps.m	/^    W = mttv_left(W, U{k});$/;"	v
W	lib/tensor_toolbox/@tensor/mttkrps.m	/^W = reshape(X.data,[],size(K,1)) * K;$/;"	v
W	lib/tensor_toolbox/@tensor/mttkrps.m	/^W = reshape(X.data,size(K,1),[])' * K;$/;"	v
W	lib/tensor_toolbox/@ttensor/innerprod.m	/^        W = cell(ndims(X),1);$/;"	v
W	lib/tensor_toolbox/@ttensor/mttkrp.m	/^W = cell(N,1);$/;"	v
W	lib/tensor_toolbox/cp_apr.m	/^    W = Xn .\/ max(V, epsilon);$/;"	v
W	lib/tensor_toolbox/cp_wopt.m	/^        W = sptensor(W);$/;"	v
W	lib/tensor_toolbox/create_problem.m	/^        W = sptensor(subs,1,sz);$/;"	v
W	lib/tensor_toolbox/create_problem.m	/^        W = tenzeros(sz);$/;"	v
W	lib/tensor_toolbox/create_problem.m	/^    W = M;$/;"	v
W	lib/tensor_toolbox/create_problem.m	/^    W = [];$/;"	v
W	lib/tensor_toolbox/create_problem.m	/^W = tt_create_missing_data_pattern(sz, M, S);$/;"	v
W	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^W = tensor(double(rand(size(X))>p)); $/;"	v
W	lib/tensor_toolbox/doc/tensor_doc.m	/^W = tensor(rand(4,4,4));$/;"	v
W	lib/tensor_toolbox/gcp_opt.m	/^W = params.Results.mask;$/;"	v
W	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            W = symtensor(g, m, n);$/;"	v
W	lib/tensor_toolbox/tests/Test_Tensor.m	/^            W = tensor(gen,sz);$/;"	v
W	lib/tensor_toolbox/tt_cp_fg.m	/^W = Gamma{1} .* Upsilon{1};$/;"	v
W	lib/tensor_toolbox/tt_gcp_fg.m	/^        W = [];$/;"	v
WSVARS	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^WSVARS = vars(~ismember(vars, {'X', 'Y', 'LL', 'estParams',...$/;"	v
WV	lib/tensor_toolbox/teneye.m	/^WV = 1:K;  % Working vector.$/;"	v
WV	lib/tensor_toolbox/teneye.m	/^WV = ones(1,K,class(N));  % This is the working vector.$/;"	v
W_in	lib/tensor_toolbox/@tensor/mttkrps.m	/^    W_in = reshape(W_in, [], size(K,1), r);$/;"	v
W_in	lib/tensor_toolbox/@tensor/mttkrps.m	/^W_in = reshape(W_in, size(U1,1), [], r);$/;"	v
W_out	lib/tensor_toolbox/@tensor/mttkrps.m	/^W_out = zeros(size(W_in,2), r);$/;"	v
Weighted optimization for CP tensor decomposition with incomplete data	lib/tensor_toolbox/doc/html/cp_wopt_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	h
Weighted optimization for CP tensor decomposition with incomplete data	lib/tensor_toolbox/doc/html/cp_wopt_poblano_doc.html	/^  <\/style><\/head><body><div class="content"><h1>Weighted optimization for CP tensor decomposit/;"	h
Wf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Wf = full(W);$/;"	v
What's new in Version 3.0?	lib/tensor_toolbox/README.md	/^### What's new in Version 3.0?$/;"	S	chapter:MATLAB Tensor Toolbox, Version 3.1
What's new in Version 3.1?	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="whats-new">What's new in Version 3.1?<\/h3>$/;"	j
Working with Tensors	lib/tensor_toolbox/doc/html/working.html	/^      <h1 id="home">Working with Tensors<\/h1>$/;"	h
Wsubs	lib/tensor_toolbox/cp_wopt.m	/^Wsubs = W.subs;$/;"	v
Wvals	lib/tensor_toolbox/cp_wopt.m	/^Wvals = W.vals;$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^X = Xfull(:,:);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^X = bsxfun(@minus, X, mean(X,2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = bsxfun(@minus, X, mean(X(:,:),2));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = ipermute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = nanmean(X, length(size(X)));$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = permute(X, [dimrest dimlist]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^X = reshape(X, [dims(dimrest) prod(dims(dimlist))]);$/;"	v
X	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^X = Xfull(:,:)';$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      X              = [ws.seqTest.xsm];$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      X              = fastfa_estep(Y, ws.kern(k).estParams);$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    X               = [ws.kern(k).seqTrain.xpost];$/;"	v
X	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    X               = [ws.seqTrain.xsm];    $/;"	v
X	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^        X               = fastfa_estep(Y, estParams);$/;"	v
X	lib/tensor_toolbox/@ktensor/arrange.m	/^X = normalize(X);$/;"	v
X	lib/tensor_toolbox/@ktensor/normalize.m	/^        X = arrange(X,p);$/;"	v
X	lib/tensor_toolbox/@ktensor/symmetrize.m	/^X = normalize(X,0);$/;"	v
X	lib/tensor_toolbox/@ktensor/tocell.m	/^    X = normalize(X,N);$/;"	v
X	lib/tensor_toolbox/@ktensor/ttm.m	/^    X = ttm(X,{V},dims,varargin{end});$/;"	v
X	lib/tensor_toolbox/@sumtensor/full.m	/^    X = X + full(T.part{i});$/;"	v
X	lib/tensor_toolbox/@sumtensor/full.m	/^    X = tensor;$/;"	v
X	lib/tensor_toolbox/@sumtensor/full.m	/^X = full(T.part{1});$/;"	v
X	lib/tensor_toolbox/@symktensor/arrange.m	/^X = normalize(X);$/;"	v
X	lib/tensor_toolbox/@symktensor/entry.m	/^X = model.u;$/;"	v
X	lib/tensor_toolbox/@symktensor/fg.m	/^X = Model.u;$/;"	v
X	lib/tensor_toolbox/@symktensor/normalize.m	/^        X = arrange(X,p);$/;"	v
X	lib/tensor_toolbox/@symtensor/tenfun.m	/^    X = cell(2,1);$/;"	v
X	lib/tensor_toolbox/@symtensor/tenfun.m	/^    X = varargin{1}; % Must be a symtensor!$/;"	v
X	lib/tensor_toolbox/@symtensor/tenfun.m	/^X = zeros(p,nargin-1);$/;"	v
X	lib/tensor_toolbox/@tensor/tenfun.m	/^        X = X.data;$/;"	v
X	lib/tensor_toolbox/@tensor/tenfun.m	/^    X = reshape(X,1,[]);$/;"	v
X	lib/tensor_toolbox/@tensor/tenfun.m	/^    X = varargin{1}.data;$/;"	v
X	lib/tensor_toolbox/@tensor/tenfun.m	/^    X = varargin{1};$/;"	v
X	lib/tensor_toolbox/@tensor/tenfun.m	/^    X = zeros(nargin-1,prod(sz));$/;"	v
X	lib/tensor_toolbox/@ttensor/full.m	/^X = tensor(X);$/;"	v
X	lib/tensor_toolbox/@ttensor/full.m	/^X = tenzeros(size(T));$/;"	v
X	lib/tensor_toolbox/@ttensor/full.m	/^X = ttm(T.core,T.u);$/;"	v
X	lib/tensor_toolbox/@ttensor/ttm.m	/^    X = ttm(X,{V},dims,varargin{end});$/;"	v
X	lib/tensor_toolbox/create_guess.m	/^            X = matrandorth(sz(n));$/;"	v
X	lib/tensor_toolbox/create_guess.m	/^            X = params.Soln{n};$/;"	v
X	lib/tensor_toolbox/create_guess.m	/^            X = rand(sz(n), nf(n));$/;"	v
X	lib/tensor_toolbox/create_problem.m	/^X = matrandorth(M);$/;"	v
X	lib/tensor_toolbox/create_problem.m	/^X = rand(M,N);$/;"	v
X	lib/tensor_toolbox/create_problem_binary.m	/^    X = sptensor(random('Binomial',1,double(P)));$/;"	v
X	lib/tensor_toolbox/create_problem_binary.m	/^    X = sptensor(sz);$/;"	v
X	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^X = ones(sptenrand([3 4 5], 10)) %<-- Generate data.$/;"	v
X	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^X = sptenrand([4 3 2],6) %<-- Generate some data.$/;"	v
X	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^X = tenones([3,4,5]); %<-- Generate data $/;"	v
X	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^X = tenrand([4 3 2]) %<-- Generate some data.$/;"	v
X	lib/tensor_toolbox/doc/cp_als_doc.m	/^X = ktensor([1;1], {[1, 1; 1, -10],[1, 1; 1, -10]});$/;"	v
X	lib/tensor_toolbox/doc/cp_apr_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/cp_arls_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/cp_opt_doc.m	/^X = info.Data .* (info.Data > 0); % Force it to be nonnegative$/;"	v
X	lib/tensor_toolbox/doc/cp_opt_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^X = sptensor(Xfull); $/;"	v
X	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^X = tenfun(@raylrnd, full(M_true));$/;"	v
X	lib/tensor_toolbox/doc/hosvd_doc.m	/^X = full(ttensor(G,U));$/;"	v
X	lib/tensor_toolbox/doc/hosvd_doc.m	/^X = info.Data;$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^  X = ttm(Y,U,n); %<-- X = Y x_n U{n}$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ktensor(A);$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = sptensor(X);$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = tenrand([5 4 3]); Y = tenrand([5 4 3]);$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = tensor(1:60,[5 4 3]);$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttensor(K,{B1,B2,B3})$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttensor(Y,A)$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttensor(Y,A);$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttensor(Y,Q)$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttensor(ttensor(Y,A),B)$/;"	v
X	lib/tensor_toolbox/doc/identities_doc.m	/^X = ttm(Y,U); %<-- X = Y x_1 A x_2 B x_3 C$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = arrange(X) %<-- Normalize the factors.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor(diag(S),{U,V}) %<-- Store the SVD as a ktensor.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor(lambda,{A,B,C}) %<-- Create the ktensor.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor({A,B,C}) %<-- Create the ktensor.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor({[0.8 0.1 1e-10]',[1e-5 2 3 1e-4]',[0.5 0.5]'}); %<-- Create tensor.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor({rand(3,2),rand(4,2),rand(2,2)})  % <-- Unit weights.$/;"	v
X	lib/tensor_toolbox/doc/ktensor_doc.m	/^X = ktensor({rand(4,2),rand(2,2),rand(3,2)}) %<-- Data.$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ktensor([10;1],rand(5,2),rand(3,2),rand(4,2),rand(2,2)); %<-- Ktensor.$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ktensor({rand(4,2),rand(3,2)})$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ktensor({rand(5,1) rand(3,1) rand(4,1) rand(2,1)});$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([2 3],1); Y = sptenrand([3 2],1);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([2 3],20); Y = sptenrand([3 2],20);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 2 3 4],20); $/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 2 3 4],8); $/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 2 3 4],80);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 2 3],3); Y = sptenrand([3 4 2],3);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 3 2],5)$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([4 3 2],5); $/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([5 3 4 2],10);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([5 3 4],1);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([5 3 4],50);$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = sptenrand([5,3,4,2],5); %<-- Create a sparse tensor.$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tenrand([5,3,4,2]); %<-- Create a dense tensor.$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tensor(rand(2,2,2))$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tensor(rand(2,3,4)); %<--the tensor$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tensor(rand(4,2,3)); Y = tensor(rand(3,4,2));$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tensor(rand(4,3,2)); $/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = tensor(rand(5,3,4,2));$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ttensor(tenrand([2,2,2,2]),rand(5,2),rand(3,2),rand(4,2),rand(2,2));$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ttensor(tensor(rand(2,2)),{rand(4,2),rand(3,2)})$/;"	v
X	lib/tensor_toolbox/doc/multiply_doc.m	/^X = ttensor(tensor(rand(2,2,2,2)),{rand(5,2) rand(3,2) rand(4,2) rand(2,2)});$/;"	v
X	lib/tensor_toolbox/doc/nvecs_doc.m	/^X = ktensor({rand(3,2),rand(3,2),rand(2,2)}) %<-- A random ktensor$/;"	v
X	lib/tensor_toolbox/doc/nvecs_doc.m	/^X = sptenrand([4,3,2],6) %<-- A sparse tensor$/;"	v
X	lib/tensor_toolbox/doc/nvecs_doc.m	/^X = tenrand([4 3 2]) %<-- Generate data$/;"	v
X	lib/tensor_toolbox/doc/nvecs_doc.m	/^X = ttensor(tenrand([2,2,2,2]),{rand(3,2),rand(3,2),rand(2,2),rand(2,2)}); %<-- A random ttensor$/;"	v
X	lib/tensor_toolbox/doc/sptenmat_doc.m	/^X = sptenrand([10 10 10 10],10) %<-- Generate some data.$/;"	v
X	lib/tensor_toolbox/doc/sptenmat_doc.m	/^X = sptenrand([10 10 10 10],10); %<-- Create a tensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand(40,4) %<-- Create data.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand(50,5) %<-- A random, sparse, order-1 tensor with 5 nonzeros.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand([10 10 10],0.01) %<-- Create a tensor with 1% nonzeroes.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand([10 10 10],10) %<-- Create a tensor with 10 nonzeros.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand([10,10,10],3) %<-- Create some data.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptenrand([40 30 20],5); %<-- Create data.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([1 1 1; 2 2 2], [1; 1]); %<-- Create a sparse tensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([1 1 1]); %<-- Create an empty sptensor. $/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([10 10 10]) %<-- Same as above.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([1;3;5],1,10) %<-- Same as X = sptensor([1;3;5],[1;1;1],1,10).$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([1;3;5],1,7) %<-- Create a sparse tensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([30 40 20]) %<-- Create an emtpy 30 x 40 x 20 sptensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([4,4,4;2,2,1;2,3,2],[3;5;1],[4 4 4]) %<-- Create a sptensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor([],[],[10 10 10]) %<-- Creates an all-zero tensor.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor(subs,2) %<-- Equivalent to X = sptensor(subs,2*ones(6,1)).$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor(subs,2*ones(6,1),[4 4 4],@max) %<-- Maximum element.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor(subs,2*ones(6,1),[4 4 4],myfun) %<-- Custom accumulation function.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor(subs,vals) %<-- Create a sparse tensor with 3 nonzeros.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = sptensor(subs,vals,[3 5 2]) %<-- Or, specify the size explicitly.$/;"	v
X	lib/tensor_toolbox/doc/sptensor_doc.m	/^X = tensor(rand(5,4,2),[5 4 2]) %<-- Create a tensor.$/;"	v
X	lib/tensor_toolbox/doc/symktensor_doc.m	/^X = reshape(1:n*r,n,r); %The columns of this matrix are the vectors in decomposition$/;"	v
X	lib/tensor_toolbox/doc/tenmat_doc.m	/^X = tensor(1:24,[3 2 2 2]) %<-- Create a tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenones([3 4 2]) %<-- Creates a 3 x 4 x 2 tensor of ones.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenrand(10); %<-- Create a random tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenrand([3 4 2 1]); %<-- Create a 3 x 4 x 2 x 1 random tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenrand([3,4,2]); %<-- Create some data.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenrand([4 3 2]); %<-- Create data.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenrand([5 4 2]) %<-- Creates a random 5 x 4 x 2 tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor %<-- Creates an empty tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(1:24,[3 4 2]) %<-- Create a tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(1:24,[3 4 2]); %<-- Create a 3 x 4 x 2 tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(1:4,4); %<-- Create a 1-way tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(M) %<-- Convert to a tensor object.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(M,[2 3 4]) %<-- M has 24 elements.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(floor(3*rand(2,2,2))) %<-- Generate some data.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(rand(3,2,3));$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(rand(5,1)) %<-- Creates a 2-way tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(rand(5,1),5) %<-- Creates a 1-way tensor.$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tensor(randi(10,3,2,3));$/;"	v
X	lib/tensor_toolbox/doc/tensor_doc.m	/^X = tenzeros([1 4 2]) %<-- Creates a 1 x 4 x 2 tensor of zeros.$/;"	v
X	lib/tensor_toolbox/doc/ttensor_doc.m	/^X = ttensor %<-- empty ttensor$/;"	v
X	lib/tensor_toolbox/doc/ttensor_doc.m	/^X = ttensor(core,U) %<-- Create a tensor$/;"	v
X	lib/tensor_toolbox/doc/ttensor_doc.m	/^X = ttensor(core,U) %<-- Create the ttensor.$/;"	v
X	lib/tensor_toolbox/doc/ttensor_doc.m	/^X = ttensor(tenrand([2 2 2]),{rand(3,2),rand(1,2),rand(2,2)}) %<-- Data.$/;"	v
X	lib/tensor_toolbox/doc/tucker_als_doc.m	/^X = sptenrand([5 4 3], 10)$/;"	v
X	lib/tensor_toolbox/gcp_opt.m	/^        X = X .* W;$/;"	v
X	lib/tensor_toolbox/matrandcong.m	/^X = Q * CGR;$/;"	v
X	lib/tensor_toolbox/matrandcong.m	/^X = randn(m,n);$/;"	v
X	lib/tensor_toolbox/matrandnorm.m	/^    X = randn(varargin{1}, varargin{2});$/;"	v
X	lib/tensor_toolbox/matrandnorm.m	/^    X = varargin{1};$/;"	v
X	lib/tensor_toolbox/matrandnorm.m	/^X = bsxfun(@rdivide,X,norms);$/;"	v
X	lib/tensor_toolbox/sptendiag.m	/^X = sptensor(sz);$/;"	v
X	lib/tensor_toolbox/tendiag.m	/^X = tenzeros(sz);$/;"	v
X	lib/tensor_toolbox/tenones.m	/^    X = tensor();$/;"	v
X	lib/tensor_toolbox/tenones.m	/^X = tensor(data,sz);$/;"	v
X	lib/tensor_toolbox/tenrand.m	/^    X = tensor(data,sz);$/;"	v
X	lib/tensor_toolbox/tenrand.m	/^    X = tensor;$/;"	v
X	lib/tensor_toolbox/tenzeros.m	/^    X = tensor;$/;"	v
X	lib/tensor_toolbox/tenzeros.m	/^X = tensor(data,sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            X = tensor(@randn, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(1:p, m, n);$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(@ones, mlocal, nlocal); % 15 distinct elements$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(@ones,mlocal,nlocal); % 15 distinct elements$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(@rand, mlocal, nlocal); % 15 distinct elements$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(@rand, mlocal, nlocal);$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(@rand,4,3);$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(g, m, n);$/;"	v
X	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            X = symtensor(vals,m,n);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^                X = tensor(@rand, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^                X = tensor;$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tenones([3,4,5]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tenrand([4 4 4]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tenrand(szs);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(1:24, [4 3 2]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@ones, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@rand, [1 1]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@rand, [2 1 3]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@rand, [4 3 2]);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@rand, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@zeros, sz);             %#ok<NASGU>$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@zeros, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(@zeros,sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(Xdata, sz);             %#ok<NASGU>$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(Xdata, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(gen, sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(2,3,4));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(3,2,4));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(4,3,2));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(4,3,3,4));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(5,3,4,2));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand([4 3 2]));$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(sz), sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor(rand(sz),sz);$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^            X = tensor;$/;"	v
X	lib/tensor_toolbox/tests/Test_Tensor.m	/^           X = tensor(@rand, [5,3,4,2]);$/;"	v
X	lib/tensor_toolbox/tucker_sym.m	/^    X = 2*N*UU*(UU'*X);$/;"	v
X	lib/tensor_toolbox/tucker_sym.m	/^X = Xinit;$/;"	v
X1	lib/tensor_toolbox/doc/identities_doc.m	/^X1 = ttm( ttm(Y,A,1), B, 2); %<-- Y x_1 A x_2 B$/;"	v
X1	lib/tensor_toolbox/doc/sumtensor_doc.m	/^X1 = rand(500, 3); %Generating some factor matrices$/;"	v
X2	lib/tensor_toolbox/doc/identities_doc.m	/^X2 = ttm( ttm(Y,B,2), A, 1); %<-- Y x_2 B x_1 A$/;"	v
X2	lib/tensor_toolbox/doc/sumtensor_doc.m	/^X2 = rand(500, 3); $/;"	v
X3	lib/tensor_toolbox/doc/sumtensor_doc.m	/^X3 = rand(500, 3);$/;"	v
XF	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    XF = options.X_extra(:,:)';$/;"	v
XFcen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    XFcen = bsxfun(@minus, XF, mean(X));$/;"	v
X_mat	lib/tensor_toolbox/cp_apr.m	/^            X_mat = double(tenmat(X,n));$/;"	v
X_mixed	lib/tensor_toolbox/cp_arls.m	/^        X_mixed = fft(bsxfun(@times, X_mixed, flips),[],n);$/;"	v
X_mixed	lib/tensor_toolbox/cp_arls.m	/^    X_mixed = X.data;$/;"	v
X_mixed	lib/tensor_toolbox/cp_arls.m	/^    X_mixed = X; % no mixing$/;"	v
X_mixed	lib/tensor_toolbox/cp_arls.m	/^    X_mixed = tensor(X_mixed);$/;"	v
Xcell	lib/tensor_toolbox/tucker_sym.m	/^Xcell = cell(N,1);$/;"	v
Xcen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Xcen = bsxfun(@minus, X, mean(X));$/;"	v
Xdata	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Xdata = gen([sz 1]);$/;"	v
Xf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Xf = full(X);$/;"	v
Xfit_mean	lib/tensor_toolbox/cp_arls.m	/^    Xfit_mean = mean((Xfit_vals - Pfit_vals).^2);$/;"	v
Xfit_subs	lib/tensor_toolbox/cp_arls.m	/^Xfit_subs = sample_all_modes(nsampfitles, sz);$/;"	v
Xfit_vals	lib/tensor_toolbox/cp_arls.m	/^Xfit_vals = X(Xfit_subs);$/;"	v
Xfull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Xfull = bsxfun(@minus, Xfull, mean(X,2));$/;"	v
Xfull	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^Xfull = 1.0*(tensor(@rand, sz) < Mprobs); $/;"	v
Xfull	lib/tensor_toolbox/tt_gcp_fg.m	/^Xfull = full(X);$/;"	v
XfullCen	lib/TrialData/td_limblab/td_dpca/dpca.m	/^XfullCen = reshape(X, size(Xfull));$/;"	v
XfullCen	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^XfullCen = bsxfun(@minus, Xfull, mean(X)');$/;"	v
XfullNN	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XfullNN = bsxfun(@times, ones(dims(1:end-1)), options.numOfTrials);$/;"	v
Xinit	lib/tensor_toolbox/tucker_sym.m	/^        Xinit = nvecs(S,1,R);$/;"	v
Xinit	lib/tensor_toolbox/tucker_sym.m	/^        Xinit = rand(D,R);$/;"	v
Xinit	lib/tensor_toolbox/tucker_sym.m	/^    Xinit = init;$/;"	v
Xm1	lib/tensor_toolbox/doc/identities_doc.m	/^Xm1 = B * tenmat(Y,2,[3 1]) * kron(A,C)'; %<-- Kronecker product version$/;"	v
Xm1	lib/tensor_toolbox/doc/identities_doc.m	/^Xm1 = kron(B,A)*tenmat(Y,[1 2])*C';  %<-- Kronecker product version$/;"	v
Xm1	lib/tensor_toolbox/doc/identities_doc.m	/^Xm1 = tenmat(Y,[],[1 2 3]) * kron(kron(C,B),A)'; %<-- Vectorized via Kronecker$/;"	v
Xm2	lib/tensor_toolbox/doc/identities_doc.m	/^Xm2 = tenmat(X,2,[3 1]); %<-- Matricized version$/;"	v
Xm2	lib/tensor_toolbox/doc/identities_doc.m	/^Xm2 = tenmat(X,[1 2]); %<-- Matriczed version$/;"	v
Xm2	lib/tensor_toolbox/doc/identities_doc.m	/^Xm2 = tenmat(X,[],[1 2 3]); %<-- Vectorized via matricize$/;"	v
Xmargs	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Xmargs = dpca_marginalize(Xfull, 'combinedParams', options.combinedParams, 'ifFlat', 'yes');$/;"	v
XmargsNoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XmargsNoise = dpca_marginalize(XnoiseFull, 'combinedParams', options.combinedParams);$/;"	v
Xn	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Xn = permute(X,[n 1:n-1,n+1:N]);$/;"	v
Xn	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Xn = reshape(Xn.data, size(X,n), []);$/;"	v
Xn	lib/tensor_toolbox/@tensor/nvecs.m	/^Xn = double(tenmat(X,n));$/;"	v
Xn	lib/tensor_toolbox/cp_apr.m	/^    Xn = double(tenmat(X,n));$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^  Xn = A{n} * tenmat(Y,rdims,cdims) * kron(A{cdims(2)}, A{cdims(1)})';$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^  Xn = U{n} * tenmat(Y,n); %<-- Xn = U{n} * Yn$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^  Xn = khatrirao(A{rdims}) * khatrirao(A{cdims},'r')';$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^  Xn = khatrirao(A{rdims},'r') * khatrirao(A{cdims})';$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^Xn = khatrirao(A{rdims},'r') * ones(length(X.lambda),1);$/;"	v
Xn	lib/tensor_toolbox/doc/identities_doc.m	/^Xn = ones(length(X.lambda),1)' * khatrirao(A{cdims},'r')';$/;"	v
Xnoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Xnoise = XnoiseFull(:,:);$/;"	v
Xnoise	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    Xnoise = bsxfun(@minus, Xnoise, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XnoiseFull = bsxfun(@minus, XnoiseFull, mean(Xnoise,2));$/;"	v
XnoiseFull	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    XnoiseFull = reshape(dif, dims(1:end-1));$/;"	v
Xnt	lib/tensor_toolbox/@sptensor/ttm.m	/^Xnt = sptenmat(X,n,'t');$/;"	v
Xold	lib/tensor_toolbox/tucker_sym.m	/^    Xold = X;$/;"	v
Xorth	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Xorth   = estParams.Corth' * bsxfun(@minus, Y, estParams.d);$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = TT * X;$/;"	v
Xorth	lib/TrialData/util/orthogonalize.m	/^    Xorth = mag * X;    $/;"	v
Xsamp	lib/tensor_toolbox/cp_arls.m	/^Xsamp = reshape(X(tensor_idx), dims(n), []);$/;"	v
XtX	lib/tensor_toolbox/@symktensor/fg.m	/^    XtX = X'*X;$/;"	v
XtXM	lib/tensor_toolbox/@symktensor/fg.m	/^    XtXM = XtXMM .* XtX;$/;"	v
XtXMM	lib/tensor_toolbox/@symktensor/fg.m	/^    XtXMM = XtX.^(M-1);$/;"	v
Xv	lib/tensor_toolbox/tt_gcp_fg.m	/^Xv = Xfull(:);$/;"	v
Xvals	lib/tensor_toolbox/create_problem_binary.m	/^        Xvals = random('Binomial',1,Pvals);$/;"	v
Xvalsqr_mean	lib/tensor_toolbox/cp_arls.m	/^Xvalsqr_mean = mean((Xfit_vals).^2);$/;"	v
Y	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    Y = X;$/;"	v
Y	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^Y = X;$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Y              = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      Y       = [ws.kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^        Y = [kern(k).seqTest.y];$/;"	v
Y	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    Y = [kern(k).seqTrain.y];$/;"	v
Y	lib/tensor_toolbox/@ktensor/nvecs.m	/^Y = X.u{n} * M * X.u{n}';$/;"	v
Y	lib/tensor_toolbox/@ktensor/symmetrize.m	/^Y = cell(n,1);$/;"	v
Y	lib/tensor_toolbox/@ktensor/symmetrize.m	/^Y = ktensor(lambda,Y);$/;"	v
Y	lib/tensor_toolbox/@sptensor/divide.m	/^Y = X;$/;"	v
Y	lib/tensor_toolbox/@sptensor/squeeze.m	/^        Y = sptensor(X.subs(:,idx), X.vals, siz);$/;"	v
Y	lib/tensor_toolbox/@sptensor/squeeze.m	/^        Y = sptensor([],[],siz);$/;"	v
Y	lib/tensor_toolbox/@sptensor/squeeze.m	/^    Y = X.vals;$/;"	v
Y	lib/tensor_toolbox/@sptensor/squeeze.m	/^  Y = X;$/;"	v
Y	lib/tensor_toolbox/@sptensor/ttm.m	/^        Y = ttm(Y, V{vidx(i)}, dims(i), tflag);$/;"	v
Y	lib/tensor_toolbox/@sptensor/ttm.m	/^    Y = sptensor(Ynt);$/;"	v
Y	lib/tensor_toolbox/@sptensor/ttm.m	/^    Y = tensor(Ynt);$/;"	v
Y	lib/tensor_toolbox/@sptensor/ttm.m	/^    Y = ttm(X, V{vidx(1)}, dims(1), tflag);$/;"	v
Y	lib/tensor_toolbox/@symktensor/fg.m	/^    Y = zeros(size(X));$/;"	v
Y	lib/tensor_toolbox/@symtensor/full.m	/^        Y = tensor(reshape(newdata, [size(X) 1]), size(X));$/;"	v
Y	lib/tensor_toolbox/@symtensor/full.m	/^        Y = tenzeros(sz);$/;"	v
Y	lib/tensor_toolbox/@tensor/collapse.m	/^    Y = X;$/;"	v
Y	lib/tensor_toolbox/@tensor/collapse.m	/^    Y = [];$/;"	v
Y	lib/tensor_toolbox/@tensor/collapse.m	/^    Y = fun(X.data(:));$/;"	v
Y	lib/tensor_toolbox/@tensor/collapse.m	/^Y = tensor(tenmat(B,1:numel(remdims),[],newsiz));$/;"	v
Y	lib/tensor_toolbox/@tensor/issymmetric.m	/^                Y = permute(X,q);$/;"	v
Y	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Y = Y * Ul;$/;"	v
Y	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Y = reshape(X.data,[],szr);$/;"	v
Y	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Y = reshape(X.data,szl,szn);$/;"	v
Y	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Y = reshape(X.data,szn,szr);$/;"	v
Y	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Y = reshape(Y,szl,szn,R);$/;"	v
Y	lib/tensor_toolbox/@tensor/nvecs.m	/^    Y = Xn*Xn';$/;"	v
Y	lib/tensor_toolbox/@tensor/scale.m	/^Y = tensor(tenmat(B,dims,remdims,X.size));$/;"	v
Y	lib/tensor_toolbox/@tensor/squeeze.m	/^    Y = X.data;$/;"	v
Y	lib/tensor_toolbox/@tensor/squeeze.m	/^    Y = tensor(squeeze(X.data),siz);$/;"	v
Y	lib/tensor_toolbox/@tensor/squeeze.m	/^  Y = X;$/;"	v
Y	lib/tensor_toolbox/@tensor/symmetrize.m	/^            Y = Y + permute(X,sym_perms(i,:));$/;"	v
Y	lib/tensor_toolbox/@tensor/symmetrize.m	/^        Y = X;$/;"	v
Y	lib/tensor_toolbox/@tensor/symmetrize.m	/^        Y = Y \/ total_perms;$/;"	v
Y	lib/tensor_toolbox/@tensor/symmetrize.m	/^        Y = tenzeros(size(X));$/;"	v
Y	lib/tensor_toolbox/@tensor/tenfun.m	/^        Y = Y.data;$/;"	v
Y	lib/tensor_toolbox/@tensor/tenfun.m	/^    Y = varargin{2};    $/;"	v
Y	lib/tensor_toolbox/@tensor/times.m	/^    Y = full(Y);$/;"	v
Y	lib/tensor_toolbox/@tensor/ttm.m	/^        Y = ttm(Y, V{vidx(k)}, dims(k), tflag);$/;"	v
Y	lib/tensor_toolbox/@tensor/ttm.m	/^    Y = ipermute(Y,order);$/;"	v
Y	lib/tensor_toolbox/@tensor/ttm.m	/^    Y = tensor(B, newsz);$/;"	v
Y	lib/tensor_toolbox/@tensor/ttm.m	/^    Y = tensor(newdata,newsz);$/;"	v
Y	lib/tensor_toolbox/@tensor/ttm.m	/^    Y = ttm(X, V{vidx(1)}, dims(1), tflag);$/;"	v
Y	lib/tensor_toolbox/@ttensor/mttkrp.m	/^Y = mttkrp(X.core,W,n);$/;"	v
Y	lib/tensor_toolbox/@ttensor/norm.m	/^    Y = ttm(X.core,V);$/;"	v
Y	lib/tensor_toolbox/@ttensor/nvecs.m	/^Y = HnT'*GnT*X.u{n}';$/;"	v
Y	lib/tensor_toolbox/cp_als.m	/^            Y = prod(UtU(:,:,[1:n-1 n+1:N]),3);$/;"	v
Y	lib/tensor_toolbox/cp_apr.m	/^    Y = W * Pi;$/;"	v
Y	lib/tensor_toolbox/cp_nmu.m	/^            Y = Y .* (U{i}'*U{i});$/;"	v
Y	lib/tensor_toolbox/cp_nmu.m	/^        Y = U{n} * Y;$/;"	v
Y	lib/tensor_toolbox/cp_nmu.m	/^        Y = ones(R,R);$/;"	v
Y	lib/tensor_toolbox/create_problem.m	/^Y = X * diag(1.\/S);$/;"	v
Y	lib/tensor_toolbox/create_problem.m	/^Y = X(:,1:N);$/;"	v
Y	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Y = S .* X %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Y = collapse(X,-1) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Y = collapse(X,[1 2],@max) %<-- Max entry in each mode-3 slice.$/;"	v
Y	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Y = collapse(X,[1 2],@min) %<-- Min *nonzero* entry in each mode-3 slice.$/;"	v
Y	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Y = collapse(X,[2 3]) %<-- Sum of entries in each mode-1 slice.$/;"	v
Y	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^Y = tensor(X(:) .* (X(:) > 0), size(X));$/;"	v
Y	lib/tensor_toolbox/doc/hosvd_doc.m	/^Y = full(ttensor(G,U));$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = ktensor({B1*A1, B2*A2, B3*A3});$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = ktensor({[1:5]',[1:4]',[1:3]'});$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = tenrand([4 3 2]);$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = tenrand([5 4 3]);$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = tensor(1:24,[4 3 2]);$/;"	v
Y	lib/tensor_toolbox/doc/identities_doc.m	/^Y = ttensor(Y,AB)$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = X;$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ktensor(X.lambda,X.U) %<-- Recreate X.$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ktensor({rand(4,1),rand(2,1),rand(3,1)}) %<-- Another ktensor.$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ktensor({rand(4,2),rand(2,2),rand(3,2)}) %<-- More data.$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ktensor({rand(4,5)}) %<-- A one-dimensional ktensor.$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ttensor(core, X.u) %<-- Assemble the ttensor$/;"	v
Y	lib/tensor_toolbox/doc/ktensor_doc.m	/^Y = ttensor(core, X.u) %<-- Assemble the ttensor.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = contract(X,1,4) %<-- should be dense$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = contract(X,1,4) %<-- should be sparse$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ktensor({rand(2,2),rand(2,2),rand(2,2)})$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = sptenrand([3 2 4],5);$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A', 1, 't')    %<-- Same as above$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A', 1, 't')    %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A, 1) %<-- Dense result.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A, 1) %<-- Sparse result.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A, 1);         %<-- X times A in mode-1.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, A, 1);         %<-- computes X times A in mode-1.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A',B',C',D'}, 't')    %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D});            %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, -3)       %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, 1); %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, [1 2 3 4]); %<-- 4-way multiply.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, [1 2 3 4]); %<-- 4-way mutliply.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, [1 2 4]); %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,C,D}, [3 4]) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,D}, -3);        %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,D}, [1 2 4]);   %<-- 3-way multiply$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {A,B,D}, [1 2 4]);   %<-- 3-way multiply.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {C,D}, [3 4]);    %<-- X times C in mode-3 & D in mode-4$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {C,D}, [3 4]);    %<-- X times C in mode-3 & D in mode-4.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttm(X, {D,C,B,A}, [4 3 2 1]); %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, A, 1) %<-- X times A in mode 1. Result is a ktensor.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, A, 1) %<-- X times A in mode 1. Result is sparse.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, A, 1) %<-- X times A in mode 1.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}) %<-- All-mode multiply -- scalar result.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, -3) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, 1) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, [1 2 3 4]) %<-- All-mode multiply -- scalar result.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, [1 2 3 4]) %<-- All-mode multiply produces a scalar.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, [1 2 3 4]) %<-- All-mode multiply.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, [1 2 4]) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,C,D}, [3 4]) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,D}, -3) %<-- 3-way multiplication. Result is *dense*!$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,D}, -3) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {A,B,D}, [1 2 4]) %<-- 3-way multiplication.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {C,D}, [3 4]) %<-- X times C in mode-3 & D in mode-4. $/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {C,D}, [3 4]) %<-- X times C in mode-3 & D in mode-4.$/;"	v
Y	lib/tensor_toolbox/doc/multiply_doc.m	/^Y = ttv(X, {D,C,B,A}, [4 3 2 1]) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/nvecs_doc.m	/^Y = ttensor(S,{U1,U2,U3}) %<-- HOSVD of X$/;"	v
Y	lib/tensor_toolbox/doc/nvecs_doc.m	/^Y = ttensor(S,{U1,U2,U3}) %<-- Rank-(2,2,2) HOSVD approximation of X$/;"	v
Y	lib/tensor_toolbox/doc/sptenmat_doc.m	/^Y = sptensor(A) %<-- Convert a sptenmat to a sptensor$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = double(X) %<-- Creates a MATLAB array.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = full(X) %<-- Convert it to a (dense) tensor.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = sptensor %<-- Create an empty sptensor.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = sptensor(S,V,[5 4 2]) %<-- Create a new tensor.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = sptensor(X.subs,X.vals,X.size) %<-- Copies X.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = sptensor([1 1 1; 2 1 1], 1, [2 1 1]) %<-- Create a sparse tensor.$/;"	v
Y	lib/tensor_toolbox/doc/sptensor_doc.m	/^Y = tensor(X) %<-- Same as above.$/;"	v
Y	lib/tensor_toolbox/doc/tenmat_doc.m	/^Y = tensor(A)$/;"	v
Y	lib/tensor_toolbox/doc/tensor_doc.m	/^Y = tensor(X.data,X.size) %<-- Copies X.$/;"	v
Y	lib/tensor_toolbox/doc/tensor_doc.m	/^Y = tensor(rand(4,3,1)) %<-- Creates a 2-way tensor.$/;"	v
Y	lib/tensor_toolbox/doc/tensor_doc.m	/^Y = tensor(rand(4,3,1),[4 3 1]) %<-- Creates a 3-way tensor.$/;"	v
Y	lib/tensor_toolbox/doc/ttensor_doc.m	/^Y = ttensor(X.core,X.U) %<-- Recreate a tensor from its parts.$/;"	v
Y	lib/tensor_toolbox/doc/ttensor_doc.m	/^Y = ttensor(core1,U) %<-- Core is a sptensor.$/;"	v
Y	lib/tensor_toolbox/doc/ttensor_doc.m	/^Y = ttensor(core2,U) %<-- Core is a ktensor.$/;"	v
Y	lib/tensor_toolbox/doc/ttensor_doc.m	/^Y = ttensor(core3,U) %<-- Core is a ttensor.$/;"	v
Y	lib/tensor_toolbox/eig_sshopm.m	/^Y = ttsv(A,x,-2);$/;"	v
Y	lib/tensor_toolbox/hosvd.m	/^        Y = ttm(Y,U{k}',k);$/;"	v
Y	lib/tensor_toolbox/hosvd.m	/^Y = X; % Copy input tensor, shrinks at each step for sequentially-truncated$/;"	v
Y	lib/tensor_toolbox/sptenrand.m	/^Y = sptensor(subs,vals,sz);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Y = X+1;$/;"	v
Y	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Y = X;$/;"	v
Y	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Y = symtensor(X.vals, m, n);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Y = symtensor(g, m, n);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Y = symtensor(vals',m,n);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = X+1;$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = X.data;$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = collapse(X, [1 2], @max);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = collapse(X, [2,3]);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = collapse(X,1:ndims(X)-1,@max);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = collapse(X,2:ndims(X));$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = mttkrp(X, {A,B,C}, 3);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = permute(X, [1 3 2]);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = reshape(X, [2 3 4]);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = scale(X,S,-3);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = scale(X,S,1:3);            $/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = scale(X,S,3);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = scale(X,S,[1 2]);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = squeeze(X);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = symmetrize(X,1:m,symver);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = tensor(gen, sz);$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = tensor(gen,sz); % Should be the same as X$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = tensor(rand(3,2,4));$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = tensor(rand([3 4 2]));$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = ttm(X, A, 1); %<-- computes X times A in mode-1$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = ttm(X, {A,B,C,D}, [1 2 3 4]); %<-- 4-way multiply$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = ttm(X, {A,B,D}, [1 2 4]);   %<-- 3-way multiply$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y = ttm(X, {C,D}, [3 4]); %<-- X times C in mode-3 & D in mode-4$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Y = ttv(X, A, 1); %<-- X times A in mode 1$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Y = ttv(X, {A,B,C,D}, [1 2 3 4]); %<-- All-mode multiply$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Y = ttv(X, {A,B,D}, [1 2 4]); %<-- 3-way multiplication$/;"	v
Y	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Y = ttv(X, {C,D}, [3 4]); %<-- X times C in mode-3 & D in mode-4$/;"	v
Y	lib/tensor_toolbox/tt_gcp_fg.m	/^    Y = W.*Y;$/;"	v
Y	lib/tensor_toolbox/tt_gcp_fg.m	/^Y = g(Xv,Mv); % Result is a vector$/;"	v
Y	lib/tensor_toolbox/tt_gcp_fg.m	/^Y = tensor(Y,size(X));$/;"	v
Y0	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y0 = symmetrize(X,{ [1 4], [2 3]},symver);$/;"	v
Y1	lib/tensor_toolbox/doc/multiply_doc.m	/^Y1 = ttv(X,A,1)$/;"	v
Y1	lib/tensor_toolbox/tests/Test_NewTTM.m	/^                Y1 = ttm(X,U{n},n,[],0);$/;"	v
Y1	lib/tensor_toolbox/tests/Test_NewTTM.m	/^                Y1 = ttm(X,U{n},n,[],ver);$/;"	v
Y1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y1 = eval(['X(' substr ')']);$/;"	v
Y2	lib/tensor_toolbox/doc/identities_doc.m	/^Y2 = ttensor(full(X),Apinv);$/;"	v
Y2	lib/tensor_toolbox/doc/identities_doc.m	/^Y2 = ttensor(full(X),Qt)$/;"	v
Y2	lib/tensor_toolbox/doc/multiply_doc.m	/^Y2 = ttm(X,A,1,'t')$/;"	v
Y2	lib/tensor_toolbox/tests/Test_NewTTM.m	/^                Y2 = ttm(X,U{n},n,[],1);$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = eval(['Xdata(' substr ')']);$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = mttkrp(X, {A,B,[]}, 3);$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, A', 1, 't');   %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A',B',C',D'}, 't');   %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,C,D});$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,C,D}, -3);      %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,C,D}, 1); %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,C,D}, [1 2 4]); %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,C,D}, [3 4]); %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {A,B,D}, -3);        %<-- same as above$/;"	v
Y2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Y2 = ttm(X, {D,C,B,A}, [4 3 2 1]); %<-- same as above$/;"	v
Y3	lib/tensor_toolbox/doc/multiply_doc.m	/^Y3 = contract(Z,1,3)$/;"	v
YY	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    YY = YYY;$/;"	v
YY	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    YY = ZZ;$/;"	v
Y_new	lib/TrialData/util/train_kalman.m	/^    Y_new =  Y(2:end,:);$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,C,D}); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,C,D}, -3); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,C,D}, 1); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,C,D}, [1 2 4]); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,C,D}, [3 4]); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {A,B,D}, -3); %<-- same as above$/;"	v
Yalt	lib/tensor_toolbox/tests/Test_Tensor.m	/^           Yalt = ttv(X, {D,C,B,A}, [4 3 2 1]); %<-- same as above$/;"	v
Ycs	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_fa(Y, kern(k).estParams);$/;"	v
Ycs	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^            Ycs             = cosmoother_pca(Y, kern(k).estParams);$/;"	v
Yf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Yf = full(Y);$/;"	v
Yk	lib/tensor_toolbox/hosvd.m	/^    Yk = double(tenmat(Y,k));$/;"	v
Ynt	lib/tensor_toolbox/@sptensor/ttm.m	/^    Ynt = sptenmat(Z, rdims, cdims, siz);$/;"	v
Ynt	lib/tensor_toolbox/@sptensor/ttm.m	/^    Ynt = tenmat(Z, rdims, cdims, siz);$/;"	v
Yr	lib/tensor_toolbox/cp_apr.m	/^        Yr = accumarray(xsubs, wvals .* Pi(:,r), [size(X,n) 1]);$/;"	v
YtestRaw	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    YtestRaw  = [seqTest.y];$/;"	v
YtrainRaw	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^    YtrainRaw = [seqTrain.y];$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        Z = W(:,components)'*X;$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        Z = X - V(:,i)*(W(:,i)'*X);$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^Z = W'*X;$/;"	v
Z	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Z = Xcen * W;$/;"	v
Z	lib/TrialData/util/train_kalman.m	/^    Z = Y(1:end-1,:);$/;"	v
Z	lib/tensor_toolbox/@sptensor/mttkrp.m	/^    Z = cell(N,1);$/;"	v
Z	lib/tensor_toolbox/@sptensor/ttm.m	/^Z = double(Xnt) * V';$/;"	v
Z	lib/tensor_toolbox/@symktensor/fg.m	/^    Z = zeros(P,1);$/;"	v
Z	lib/tensor_toolbox/@symtensor/and.m	/^Z = tenfun(@and,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/eq.m	/^Z = tenfun(@eq,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/ge.m	/^Z = tenfun(@ge,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/gt.m	/^Z = tenfun(@gt,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/ldivide.m	/^Z = tenfun(@ldivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/le.m	/^Z = tenfun(@le,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/lt.m	/^Z = tenfun(@lt,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/minus.m	/^Z = tenfun(@minus,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/mldivide.m	/^    Z = tenfun(@ldivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/mrdivide.m	/^    Z = tenfun(@rdivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/ne.m	/^Z = tenfun(@ne,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/or.m	/^Z = tenfun(@or,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/plus.m	/^Z = tenfun(@plus,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/power.m	/^Z = tenfun(@power,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/rdivide.m	/^Z = tenfun(@rdivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/tenfun.m	/^    Z = symtensor(Zvals, m, n);$/;"	v
Z	lib/tensor_toolbox/@symtensor/tenfun.m	/^    Z = symtensor(Zvals, ndims(X), size(X,1));$/;"	v
Z	lib/tensor_toolbox/@symtensor/tenfun.m	/^Z = symtensor(Zvals, m, n);$/;"	v
Z	lib/tensor_toolbox/@symtensor/times.m	/^Z = tenfun(@times,X,Y);$/;"	v
Z	lib/tensor_toolbox/@symtensor/xor.m	/^Z = tenfun(@xor,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tenmat/minus.m	/^    Z = X;$/;"	v
Z	lib/tensor_toolbox/@tenmat/minus.m	/^    Z = Y;$/;"	v
Z	lib/tensor_toolbox/@tenmat/minus.m	/^Z = tenmat(Y);$/;"	v
Z	lib/tensor_toolbox/@tenmat/plus.m	/^    Z = X;$/;"	v
Z	lib/tensor_toolbox/@tenmat/plus.m	/^    Z = Y;$/;"	v
Z	lib/tensor_toolbox/@tenmat/plus.m	/^Z = tenmat(Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/and.m	/^Z = tenfun(@and,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/eq.m	/^Z = tenfun(@eq,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/ge.m	/^Z = tenfun(@ge,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/gt.m	/^Z = tenfun(@gt,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/ldivide.m	/^Z = tenfun(@ldivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/le.m	/^Z = tenfun(@le,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/lt.m	/^Z = tenfun(@lt,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/minus.m	/^Z = tenfun(@minus,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/mldivide.m	/^    Z = tenfun(@ldivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/mrdivide.m	/^    Z = tenfun(@rdivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/mttkrp.m	/^    Z = khatrirao(U{[1:n-1,n+1:N]},'r');$/;"	v
Z	lib/tensor_toolbox/@tensor/ne.m	/^Z = tenfun(@ne,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/or.m	/^Z = tenfun(@or,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/plus.m	/^    Z = tenfun(@plus,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/power.m	/^Z = tenfun(@power,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/rdivide.m	/^Z = tenfun(@rdivide,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/symmetrize.m	/^            Z = permute(Y,sym_perms(i,:));$/;"	v
Z	lib/tensor_toolbox/@tensor/tenfun.m	/^    Z = tensor(data, sz);$/;"	v
Z	lib/tensor_toolbox/@tensor/tenfun.m	/^Z = tensor(data,sz);$/;"	v
Z	lib/tensor_toolbox/@tensor/times.m	/^Z = tenfun(@times,X,Y);$/;"	v
Z	lib/tensor_toolbox/@tensor/xor.m	/^Z = tenfun(@xor,X,Y);$/;"	v
Z	lib/tensor_toolbox/@ttensor/innerprod.m	/^            Z = full(X);$/;"	v
Z	lib/tensor_toolbox/@ttensor/innerprod.m	/^        Z = ttm(Y,X.u,'t');$/;"	v
Z	lib/tensor_toolbox/cp_wopt.m	/^        Z = sptensor(Z);$/;"	v
Z	lib/tensor_toolbox/cp_wopt.m	/^    Z = Z.*W;$/;"	v
Z	lib/tensor_toolbox/create_problem.m	/^        Z = W.*S;$/;"	v
Z	lib/tensor_toolbox/create_problem.m	/^        Z = W.*full(S);$/;"	v
Z	lib/tensor_toolbox/create_problem.m	/^    Z = full(S);   $/;"	v
Z	lib/tensor_toolbox/create_problem.m	/^Z = sptensor(allsubs,1,sz);$/;"	v
Z	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Z = collapse(X,-3,@mean) %<-- Average *nonzero* entry in each mode-3 slice.$/;"	v
Z	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Z = collapse(X,-3,@mean) %<-- Average entry in each mode-3 slice.$/;"	v
Z	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Z = collapse(X,2) %<-- Sum of entries in each row fiber.$/;"	v
Z	lib/tensor_toolbox/doc/collapse_scale_doc.m	/^Z = scale(X,Y,1:3) %<-- Scale by a sparse tensor.$/;"	v
Z	lib/tensor_toolbox/doc/identities_doc.m	/^  Z = double(tenmat(full(X),rdims,cdims));$/;"	v
Z	lib/tensor_toolbox/doc/identities_doc.m	/^Z = double(tenmat(full(X), [], cdims));$/;"	v
Z	lib/tensor_toolbox/doc/identities_doc.m	/^Z = double(tenmat(full(X), rdims, []));$/;"	v
Z	lib/tensor_toolbox/doc/identities_doc.m	/^Z = ttensor(Y,R);$/;"	v
Z	lib/tensor_toolbox/doc/ktensor_doc.m	/^Z = X + Y %<-- Concatenates the factor matrices.$/;"	v
Z	lib/tensor_toolbox/doc/ktensor_doc.m	/^Z = X - Y %<-- Concatenates as with plus, but changes the weights.$/;"	v
Z	lib/tensor_toolbox/doc/ktensor_doc.m	/^Z = ktensor %<-- Empty ktensor.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = innerprod(X,permute(Y, [2 3 1])) %<-- Same as above.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X, Y) %<-- Dense result.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X, Y) %<-- Sparse result.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,X,1:3) %<-- Inner product of X with itself.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,Y) %<--Outer product of X and Y.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,Y); %<-- Outer product of X and Y.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,Y,[1 2 3],[2 3 1]) %<-- Inner product of X & Y.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,Y,[1 2],[2 1]) %<-- inner product of X & Y$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(X,Y,[1 3],[2 1]) %<-- Product of X & Y along specified dims.$/;"	v
Z	lib/tensor_toolbox/doc/multiply_doc.m	/^Z = ttt(tensor(A),X);$/;"	v
Z	lib/tensor_toolbox/doc/sptensor_doc.m	/^Z = elemfun(X, @(x) x+1) %<-- Use a custom function.$/;"	v
Z	lib/tensor_toolbox/doc/sptensor_doc.m	/^Z = elemfun(X, @(x) x~=0) %<-- Set every nonzero to one.$/;"	v
Z	lib/tensor_toolbox/doc/sptensor_doc.m	/^Z = elemfun(X, @sqrt) %<-- Square root of every nonzero.$/;"	v
Z	lib/tensor_toolbox/doc/sptensor_doc.m	/^Z = ones(X) %<-- An easier way to change every nonzero to one.$/;"	v
Z	lib/tensor_toolbox/doc/sptensor_doc.m	/^Z = sptensor(Y) %<-- Convert a tensor to a sptensor.$/;"	v
Z	lib/tensor_toolbox/doc/tensor_doc.m	/^Z = symmetrize(X,[1,3]);$/;"	v
Z	lib/tensor_toolbox/doc/ttensor_doc.m	/^Z = ttensor(tensor(rand(2,1),2), rand(4,2)) %<-- One-dimensional ttensor.$/;"	v
Z	lib/tensor_toolbox/hosvd.m	/^    Z = Yk*Yk';$/;"	v
Z	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z  = tenfun(fh, W, X, Y);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z  = tenfun(fh, X );$/;"	v
Z	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z  = tenfun(fh, X , 1);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z  = tenfun(fh, X , Y);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^                Z = max(Z,[],j);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^                Z = sum(Z,j);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = A * reshape(X.data, 5, []);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = X.data;$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = X;$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = double(tenmat(X,3))*khatrirao(B,A);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = scale(X, 1.\/Y, 1);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = scale(X, 1.\/Y, 3);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = tenfun(@(x) x + 1, X);            $/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = tenfun(@eq, X, 1);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = tenfun(@max, W, X, Y);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = tenfun(@plus, X, Y);$/;"	v
Z	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z = tensor(gen, sz+1);$/;"	v
Z1	lib/tensor_toolbox/doc/multiply_doc.m	/^Z1 = contract(X,1,4)        % sparse version of contract$/;"	v
Z1	lib/tensor_toolbox/doc/multiply_doc.m	/^Z1 = ttt(X,Y,1,3); %<-- Normal tensor multiplication$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z1 = feval(bf, X, 5);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z1 = feval(bf, X, Y);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z1 = feval(sfl, 5, X);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z1 = feval(sfr, X, 5);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z1 = feval(uf,X);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z1 = feval(bf, X, Y);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z1 = feval(sfl, 5, X);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z1 = feval(sfr, X, 5);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z1 = feval(uf,X);$/;"	v
Z1	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z1 = ttt(X,Y,1,3); %<-- Normal tensor multiplication$/;"	v
Z2	lib/tensor_toolbox/doc/multiply_doc.m	/^Z2 = contract(full(X),1,4)  % dense version of contract$/;"	v
Z2	lib/tensor_toolbox/doc/multiply_doc.m	/^Z2 = contract(ttt(X,Y),1,6); %<-- Outer product + contract$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z2 = symtensor(feval(bf, X.vals, 5), mlocal, nlocal);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z2 = symtensor(feval(bf, X.vals, Y.vals), mlocal, nlocal);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z2 = symtensor(feval(sfl, 5, X.vals), mlocal, nlocal);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z2 = symtensor(feval(sfr, X.vals, 5), mlocal, nlocal);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Z2 = symtensor(feval(uf,X.vals), mlocal, nlocal);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z2 = contract(ttt(X,Y),1,6); %<-- Outer product + contract$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z2 = tensor(feval(bf, X.data, Y.data), sz);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z2 = tensor(feval(sfl, 5, X.data), sz);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z2 = tensor(feval(sfr, X.data, 5), sz);$/;"	v
Z2	lib/tensor_toolbox/tests/Test_Tensor.m	/^            Z2 = tensor(feval(uf,X.data), sz);$/;"	v
ZF	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    ZF = XFcen * W;$/;"	v
ZZ	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^        ZZ = Xmargs{j} - V(:,i)*(W(:,i)'*Xmargs{j});$/;"	v
ZZ	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    ZZ = {};$/;"	v
Zero	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^        function Zero(testCase)$/;"	f
Zexp	lib/tensor_toolbox/tt_gcp_fg_est.m	/^Zexp = cell(1,d);$/;"	v
Zf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Zf = tenfun(fh, Wf, Xf, Yf);$/;"	v
Zf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Zf = tenfun(fh, Xf);$/;"	v
Zf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Zf = tenfun(fh, Xf, 1);$/;"	v
Zf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            Zf = tenfun(fh, Xf, Yf);$/;"	v
Zfull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    Zfull = reshape(ZF(:,componentsToPlot)', [length(componentsToPlot) dataDimFull(2:end)]);$/;"	v
Zfull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^Zfull = reshape(Z(:,componentsToPlot)', [length(componentsToPlot) dataDim(2:end)]);$/;"	v
Zsamp	lib/tensor_toolbox/cp_arls.m	/^Zsamp = skr(U{[1:n-1,n+1:N]}, factor_idx);$/;"	v
Zsubs	lib/tensor_toolbox/cp_wopt.m	/^Zsubs = Z.subs;$/;"	v
Zvals	lib/tensor_toolbox/@symtensor/tenfun.m	/^    Zvals = fun(X.val);$/;"	v
Zvals	lib/tensor_toolbox/@symtensor/tenfun.m	/^    Zvals = fun(X{1},X{2});$/;"	v
Zvals	lib/tensor_toolbox/@symtensor/tenfun.m	/^Zvals = zeros(p,1);$/;"	v
Zvals	lib/tensor_toolbox/cp_wopt.m	/^    Zvals = tt_cp_wfg_sparse_setup(Z,W);$/;"	v
Zvals	lib/tensor_toolbox/cp_wopt.m	/^Zvals = zeros(size(W.vals));$/;"	v
_AddToRootList	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_AddToRootList(FibHeapNode *x)$/;"	f	class:FibHeap	typeref:typename:void
_CascadingCut	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_CascadingCut(FibHeapNode *y)$/;"	f	class:FibHeap	typeref:typename:void
_Consolidate	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Consolidate()$/;"	f	class:FibHeap	typeref:typename:void
_Cut	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Cut(FibHeapNode *x, FibHeapNode *y)$/;"	f	class:FibHeap	typeref:typename:void
_Exchange	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Exchange(FibHeapNode*& N1, FibHeapNode*& N2)$/;"	f	class:FibHeap	typeref:typename:void
_FIBHEAP_CPP	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^#define _FIBHEAP_CPP$/;"	d	file:
_Link	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeap::_Link(FibHeapNode *y, FibHeapNode *x)$/;"	f	class:FibHeap	typeref:typename:void
a	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^a = corr(Z(:,1:numCompToShow));$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = 180;$/;"	v
a	lib/TrialData/util/angleDiff.m	/^    a = pi;$/;"	v
a	lib/TrialData/util/lib/isomap/L2_distance.m	/^        a = [a; zeros(1, size(a, 2))]; $/;"	v
a	lib/TrialData/util/resample_signals.m	/^a = zeros(2,size(data,2));$/;"	v
a	lib/plotErrorEllipse.m	/^    a = (V * sqrt(D)) * [cos(t(:))'; sin(t(:))'];$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^                a  = a + b;$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^                a = tt_subsubsref(t.lambda,s);$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^                a = tt_subsubsref(t.u,s);$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^            a = 0;$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^            a = sum(b,2);$/;"	v
a	lib/tensor_toolbox/@ktensor/subsref.m	/^        a = subsref(t.u,s);$/;"	v
a	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    a = class(a, 'sptenmat');$/;"	v
a	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^a = class(a, 'sptenmat');$/;"	v
a	lib/tensor_toolbox/@sptenmat/subsref.m	/^		a = t.cdims;$/;"	v
a	lib/tensor_toolbox/@sptenmat/subsref.m	/^		a = t.rdims;$/;"	v
a	lib/tensor_toolbox/@sptenmat/subsref.m	/^		a = t.tsize;$/;"	v
a	lib/tensor_toolbox/@sptenmat/subsref.m	/^                a = tt_subsubsref(t.subs,s);$/;"	v
a	lib/tensor_toolbox/@sptenmat/subsref.m	/^                a = tt_subsubsref(t.vals,s);$/;"	v
a	lib/tensor_toolbox/@sptensor/double.m	/^a = zeros([size(s) 1 1]);$/;"	v
a	lib/tensor_toolbox/@sptensor/nnz.m	/^    a = 0;$/;"	v
a	lib/tensor_toolbox/@sptensor/nnz.m	/^    a = size(t.subs,1);$/;"	v
a	lib/tensor_toolbox/@sptensor/private/extract.m	/^a = zeros(p,1);$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                    a = 0;$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                    a = vals;$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                a = sptensor([],[],sz(kpdims));$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                a = sptensor(subs(:,kpdims), vals, sz(kpdims));$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                a = tt_subsubsref(t.size, s);$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                a = tt_subsubsref(t.subs, s);$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^                a = tt_subsubsref(t.vals, s);$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^        a = extract(t,srchsubs);$/;"	v
a	lib/tensor_toolbox/@sptensor/subsref.m	/^        a = tt_subsubsref(a,s);$/;"	v
a	lib/tensor_toolbox/@sptensor/ttt.m	/^    a = varargin{1};$/;"	v
a	lib/tensor_toolbox/@symktensor/subsref.m	/^                a  = a + b;$/;"	v
a	lib/tensor_toolbox/@symktensor/subsref.m	/^                a = tt_subsubsref(t.lambda,s);$/;"	v
a	lib/tensor_toolbox/@symktensor/subsref.m	/^                a = tt_subsubsref(t.m,s);$/;"	v
a	lib/tensor_toolbox/@symktensor/subsref.m	/^                a = tt_subsubsref(t.u,s);$/;"	v
a	lib/tensor_toolbox/@symktensor/subsref.m	/^            a = 0;$/;"	v
a	lib/tensor_toolbox/@tenmat/double.m	/^a = t.data;$/;"	v
a	lib/tensor_toolbox/@tenmat/subsref.m	/^                a = tt_subsubsref(t.cindices,s);$/;"	v
a	lib/tensor_toolbox/@tenmat/subsref.m	/^                a = tt_subsubsref(t.data,s);$/;"	v
a	lib/tensor_toolbox/@tenmat/subsref.m	/^                a = tt_subsubsref(t.rindices,s);$/;"	v
a	lib/tensor_toolbox/@tenmat/subsref.m	/^                a = tt_subsubsref(t.tsize,s);$/;"	v
a	lib/tensor_toolbox/@tenmat/subsref.m	/^        a = t.data(s.subs{:});$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^                    a = tensor(newdata,newsiz);$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^                    a = tensor(permute(newdata,[kpdims rmdims]),newsiz);$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^                a = newdata;$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^                a = tt_subsubsref(t.data,s);$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^                a = tt_subsubsref(t.size,s);$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^            a = squeeze(t.data(tt_sub2ind(t.size,subs)));$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^            a = tt_subsubsref(a,s);$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^        a = squeeze(t.data(idx));$/;"	v
a	lib/tensor_toolbox/@tensor/subsref.m	/^        a = tt_subsubsref(a,s);$/;"	v
a	lib/tensor_toolbox/@tensor/ttt.m	/^    a = varargin{1};$/;"	v
a	lib/tensor_toolbox/@ttensor/subsref.m	/^	a = subsref(t, new_s);$/;"	v
a	lib/tensor_toolbox/@ttensor/subsref.m	/^                a = tt_subsubsref(t.core,s);$/;"	v
a	lib/tensor_toolbox/@ttensor/subsref.m	/^                a = tt_subsubsref(t.u,s);$/;"	v
a	lib/tensor_toolbox/doc/html/ttb.css	/^a { color:#005fce; text-decoration:none; }$/;"	s
a	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
a	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="a">$/;"	m
a	lib/tensor_toolbox/teneye.m	/^        a = b + 1;$/;"	v
a	lib/tensor_toolbox/teneye.m	/^    a = m + 1;$/;"	v
a	lib/tensor_toolbox/tt_subsubsref.m	/^    a = obj;$/;"	v
a	lib/tensor_toolbox/tt_subsubsref.m	/^    a = subsref(obj, s(2:end));$/;"	v
a.name	lib/tensor_toolbox/doc/html/ttb.css	/^a.name { color:default; text-decoration:none; }$/;"	c
a.name:hover	lib/tensor_toolbox/doc/html/ttb.css	/^a.name:hover { color:default; text-decoration:none; }$/;"	c
a.name:visited	lib/tensor_toolbox/doc/html/ttb.css	/^a.name:visited { color:default; text-decoration:none; }$/;"	c
a:hover	lib/tensor_toolbox/doc/html/ttb.css	/^a:hover { color:#005fce; text-decoration:underline; }$/;"	s
a:visited	lib/tensor_toolbox/doc/html/ttb.css	/^a:visited { color:#004aa0; text-decoration:none; }$/;"	s
aa	lib/tensor_toolbox/@sptensor/ttt.m	/^aa = sparse(aii,ajj,a.vals,m,n);$/;"	v
aatx	lib/tensor_toolbox/@sptenmat/aatx.m	/^function z = aatx(a,x)$/;"	f
abbr	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
absolute_acc_thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^absolute_acc_thresh = [];$/;"	v
absref	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    absref = 0;$/;"	v
absref	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    absref = ihprs.absref;$/;"	v
acc	bumpcurl_lda.m	/^                    acc = zeros(1,size(fr_train,3));$/;"	v
acc_table	bumpcurl_lda.m	/^        acc_table = cell(length(spikes_in_td),num_repeats,num_folds);$/;"	v
acronym	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
actual_red	lib/tensor_toolbox/cp_apr.m	/^                actual_red = f_old - f_unit;$/;"	v
actual_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^actual_signals  =  {};$/;"	v
actual_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^actual_signals = check_signals(trial_data(1),actual_signals);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = actual_spikes(~ismember(actual_spikes,artifacts));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = find(ismember(in_bin,bins_to_keep));$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = reshape(actual_spikes,[],1);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        actual_spikes = unique([actual_spikes;new_spikes]);$/;"	v
actual_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^actual_spikes = [];$/;"	v
ad_color	plotBumpcurlTuning.m	/^ad_color = colormap('summer');$/;"	v
ad_eval	bumpcurl_analysis.m	/^    ad_eval = evalModel(td_ad,eval_params);$/;"	v
ad_idx	bumpcurl_analysis.m	/^    ad_idx = getTDidx(td,'epoch','AD');$/;"	v
ad_idx	bumpcurl_dpca.m	/^        ad_idx = getTDidx(td,'epoch','AD');$/;"	v
ad_idx	exploreData.m	/^ad_idx = getTDidx(td,'epoch','AD');$/;"	v
ad_idx	plotBumpcurlTuning.m	/^ad_idx = floor(linspace(1,length(ad_color),4));$/;"	v
ad_offset	bumpcurl_tensors.m	/^        ad_offset = 100;$/;"	v
adapt_shift	lib/tensor_toolbox/eig_sshopm.m	/^function alpha = adapt_shift(A,x,tau,concave)$/;"	f
adaptive	lib/tensor_toolbox/eig_geap.m	/^    adaptive = false;$/;"	v
adaptive	lib/tensor_toolbox/eig_geap.m	/^    adaptive = true;$/;"	v
adaptive	lib/tensor_toolbox/eig_sshopm.m	/^    adaptive = false;$/;"	v
adaptive	lib/tensor_toolbox/eig_sshopm.m	/^    adaptive = true;$/;"	v
addCoordPoint2TD	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function trial_data = addCoordPoint2TD(trial_data,params)$/;"	f
addCorrelatedNoise	lib/TrialData/Tools/addCorrelatedNoise.m	/^function [td] = addCorrelatedNoise(trial_data,params)$/;"	f
addFiringRates	lib/TrialData/Tools/addFiringRates.m	/^function td = addFiringRates(trial_data,params)$/;"	f
addProcessedSignal	lib/TrialData/td_limblab/addProcessedSignal.m	/^function trial_data = addProcessedSignal(trial_data,params)$/;"	f
add_interactions	lib/TrialData/Analysis/runDPCA.m	/^add_interactions = true;$/;"	v
add_pred_to_td	lib/TrialData/Analysis/getModel.m	/^add_pred_to_td       =  true;      % whether to add predictions to trial_data$/;"	v
add_proj_to_td	lib/TrialData/Analysis/getPotentSpace.m	/^add_proj_to_td     =  true;   % add projections to trial data$/;"	v
add_proj_to_td	lib/TrialData/Analysis/runDPCA.m	/^add_proj_to_td = true;$/;"	v
add_proj_to_td	lib/TrialData/Tools/dimReduce.m	/^add_proj_to_td    = true;   % whether to add projections$/;"	v
add_spike_times	lib/TrialData/DataProcessing/convertDataToTD.m	/^add_spike_times = false; % (not implemented) add unbinned spike times$/;"	v
add_std	lib/TrialData/Tools/trialAverage.m	/^add_std     =  false;$/;"	v
add_vals	lib/TrialData/Tools/dupeAndShift.m	/^add_vals     =  true;$/;"	v
address	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
addsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                    addsubs = setdiff(addsubs,t.subs,'rows');$/;"	v
addsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                addsubs = irenumber(rhs, t.size, s.subs);$/;"	v
addsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                addsubs = zeros(prod(nssubs),N);$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^    adiff = abs(adiff);$/;"	v
adiff	lib/TrialData/util/angleDiff.m	/^adiff = angle2 - angle1;$/;"	v
adims	lib/tensor_toolbox/@sptensor/ttt.m	/^    adims = [];$/;"	v
adims	lib/tensor_toolbox/@sptensor/ttt.m	/^    adims = varargin{3};$/;"	v
adims	lib/tensor_toolbox/@tensor/ttt.m	/^    adims = [];$/;"	v
adims	lib/tensor_toolbox/@tensor/ttt.m	/^    adims = varargin{3};$/;"	v
aii	lib/tensor_toolbox/@sptensor/ttt.m	/^    aii = loc(1:nnz(a));$/;"	v
aii	lib/tensor_toolbox/@sptensor/ttt.m	/^    aii = ones(nnz(a),1);$/;"	v
ajj	lib/tensor_toolbox/@sptensor/ttt.m	/^    ajj = ones(nnz(a),1);$/;"	v
akvals	lib/tensor_toolbox/@ktensor/mask.m	/^        akvals = A{k}(wsubs(:,k),j);$/;"	v
alg	lib/tensor_toolbox/cp_apr.m	/^alg   = params.Results.alg;$/;"	v
alg	lib/tensor_toolbox/cp_sym.m	/^alg = params.Results.alg;$/;"	v
algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^algorithm          =  'pca';$/;"	v
algorithm	lib/TrialData/Tools/dimReduce.m	/^algorithm       = 'pca';$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = cell(size(signals,1),1);$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^    alias = {alias};$/;"	v
alias	lib/TrialData/Tools/getDifferential.m	/^alias    =  ''; % what to call the differentiated field$/;"	v
aliasTDfields	lib/TrialData/Tools/aliasTDfields.m	/^function out = aliasTDfields(trial_data,params)$/;"	f
alias_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^                alias_idx = find(strcmpi(event_alias(:,1),event_list{e}));$/;"	v
alias_list	lib/TrialData/Tools/aliasTDfields.m	/^alias_list = {};$/;"	v
allExtraDataPacketIndices	lib/TrialData/util/openNEV_td.m	/^    allExtraDataPacketIndices  = [commentIndices, ...$/;"	v
all_block_inds	lib/get_dpca_var.m	/^        all_block_inds = horzcat(learning_blocks{:});$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = combvec(temp{:})';$/;"	v
all_conds	lib/TrialData/Tools/trialAverage.m	/^    all_conds = {'all'};$/;"	v
all_diffs	lib/tensor_toolbox/@tensor/issymmetric.m	/^        all_diffs = zeros(cnt,1);$/;"	v
all_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^    all_events = trials.(event_list{e});$/;"	v
all_perms	lib/tensor_toolbox/@tensor/issymmetric.m	/^        all_perms = zeros(cnt,n);$/;"	v
all_points	lib/TrialData/td_limblab/parseFileByTrial.m	/^all_points     =  false;$/;"	v
all_shifts	lib/TrialData/Tools/dupeAndShift.m	/^all_shifts = {varargin{2:2:end}};$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^            all_spikes  = all_spikes.\/trial_data(1).bin_size;$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,td.([array '_spikes']));$/;"	v
all_spikes	lib/TrialData/Tools/removeBadNeurons.m	/^        all_spikes = cat(1,trial_data(use_trials).([array '_spikes']));$/;"	v
all_trials	lib/TrialData/Analysis/runDPCA.m	/^        all_trials = intersect(all_trials,varargin{i});$/;"	v
all_trials	lib/TrialData/Analysis/runDPCA.m	/^    all_trials = varargin{1};$/;"	v
allsubs	lib/tensor_toolbox/@sptensor/private/allsubs.m	/^function s = allsubs(x)$/;"	f
allsubs	lib/tensor_toolbox/create_problem.m	/^allsubs = cell2mat(subs);$/;"	v
alpha	lib/TrialData/Analysis/estimateDimensionality.m	/^alpha           =  0.95; % what fraction of non-noise variance$/;"	v
alpha	lib/TrialData/Tools/softNormalize.m	/^alpha    =  5;$/;"	v
alpha	lib/plot_trace_projections.m	/^    alpha = 1;$/;"	v
alpha	lib/plot_traces.m	/^    alpha = 1;$/;"	v
alpha	lib/tensor_toolbox/@symktensor/fg.m	/^    alpha = fgopts.l1param;$/;"	v
alpha	lib/tensor_toolbox/cp_apr.m	/^    alpha = ones(lbfgsSize,1);$/;"	v
alpha	lib/tensor_toolbox/eig_geap.m	/^    alpha = 0;$/;"	v
alpha	lib/tensor_toolbox/eig_sshopm.m	/^        alpha = (tau\/m) - ((m-1)*min(e));$/;"	v
alpha	lib/tensor_toolbox/eig_sshopm.m	/^        alpha = -(tau\/m) - ((m-1)*max(e));$/;"	v
alpha	lib/tensor_toolbox/eig_sshopm.m	/^        alpha = 0;$/;"	v
alpha_cutoff	lib/neuron-table/getTDClassicalPDs.m	/^alpha_cutoff = 0.05;$/;"	v
alreadyProcessed	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^alreadyProcessed = containers.Map;$/;"	v
amatrix	lib/tensor_toolbox/@tensor/ttt.m	/^amatrix = tenmat(a,adims,'t');$/;"	v
and	lib/tensor_toolbox/@sptensor/and.m	/^function C = and(A,B)$/;"	f
and	lib/tensor_toolbox/@symtensor/and.m	/^function Z = and(X,Y)$/;"	f
and	lib/tensor_toolbox/@tensor/and.m	/^function Z = and(X,Y)$/;"	f
angleDiff	lib/TrialData/util/angleDiff.m	/^function adiff = angleDiff(angle1,angle2,useRad,preserveSign)$/;"	f
angsDL	lib/neuron-table/irisPlot.m	/^angsDL = DL_pdData.velPD;$/;"	v
angsPM	lib/neuron-table/irisPlot.m	/^angsPM = PM_pdData.velPD;$/;"	v
animateBumpcurlTrials	lib/animateBumpcurlTrials.m	/^function animateBumpcurlTrials(trial_data,field,bump_colors,waitperiod,tail_length)$/;"	f
appendTDs	lib/TrialData/Tools/appendTDs.m	/^function combined_td = appendTDs(varargin)$/;"	f
applet	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
aremdims	lib/tensor_toolbox/@sptensor/ttt.m	/^aremdims = setdiff(1:ndims(a),adims);$/;"	v
arg2	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^arg2 = varargin; $/;"	v
arr_append	lib/neuron-table/makeNeuronTableStarter.m	/^        arr_append = repmat(metafield,tab_height,1);$/;"	v
arrange	lib/tensor_toolbox/@ktensor/arrange.m	/^function X = arrange(X,foo)$/;"	f
arrange	lib/tensor_toolbox/@symktensor/arrange.m	/^function X = arrange(X,perm)$/;"	f
array	lib/TrialData/Tools/addFiringRates.m	/^        array = params;$/;"	v
array	lib/TrialData/Tools/addFiringRates.m	/^array         = '';$/;"	v
array	lib/TrialData/Tools/getCommonUnits.m	/^    array = arrays{idx_array};$/;"	v
array	lib/TrialData/Tools/getLFPidx.m	/^        array = getTDfields(trial_data,'arrays');$/;"	v
array	lib/TrialData/Tools/getLFPidx.m	/^array       =  '';$/;"	v
array	lib/TrialData/Tools/removeBadNeurons.m	/^    array = arrays{a};$/;"	v
array	lib/TrialData/td_limblab/getNeuronTuning.m	/^array      =  params.array;$/;"	v
array_alias	lib/TrialData/td_limblab/parseFileByTrial.m	/^array_alias    =  {};$/;"	v
arrayname	lib/load_curl_data.m	/^            arrayname = arrays_in_td{arraynum};$/;"	v
arrays	bumpcurl_dpca.m	/^    arrays = {'PMd_spikes','M1_spikes','PMdM1_spikes','S1_spikes'};$/;"	v
arrays	lib/TrialData/Plotting/visData.m	/^arrays = fn(cellfun(@(x) ~isempty(regexp(x,'_spikes','ONCE')),fn));$/;"	v
arrays	lib/TrialData/Tools/getCommonUnits.m	/^arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/getTDfields.m	/^        arrays = getTDfields(trial_data,'arrays');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^    arrays = getTDfields(trial_data,'spikes');$/;"	v
arrays	lib/TrialData/Tools/removeBadNeurons.m	/^arrays          =  [];$/;"	v
arrays	lib/TrialData/TrialData_tutorial.m	/^arrays = {'M1','PMd'};$/;"	v
arrays	lib/TrialData/td_limblab/parseFileByTrial.m	/^    arrays = strsplit(cds.meta.array,', ');$/;"	v
arrays	lib/TrialData/td_limblab/subspace_demo.m	/^arrays = strrep(spiking_inputs,'_spikes','');$/;"	v
arrays_in_td	lib/load_curl_data.m	/^        arrays_in_td = getTDfields(td,'arrays');$/;"	v
arraytic	bumpcurl_lda.m	/^        arraytic = tic;$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^        artifacts = unique([artifacts; find(ismember(in_bin,bins_to_reject))]);$/;"	v
artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^artifacts = [];$/;"	v
asiz	lib/tensor_toolbox/@sptensor/ttt.m	/^asiz = size(a);$/;"	v
assignParams	lib/TrialData/util/assignParams.m	/^function assignParams(opts,params)$/;"	f
asubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    asubs = [];$/;"	v
asubs	lib/tensor_toolbox/@symtensor/subsasgn.m	/^                asubs = indices(A);$/;"	v
asubs	lib/tensor_toolbox/@symtensor/subsref.m	/^                asubs = indices(A);$/;"	v
aux_smoothed_FR	lib/TrialData/util/smooth_data.m	/^    aux_smoothed_FR     = conv(kernel',data(:,i)) .\/ nm;$/;"	v
avals	lib/tensor_toolbox/@sptensor/rdivide.m	/^        avals = A.vals;       $/;"	v
avals	lib/tensor_toolbox/@symktensor/fg.m	/^    avals = Data.avals;$/;"	v
avals	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    avals = A.val;$/;"	v
avg	lib/tensor_toolbox/@tensor/symmetrize.m	/^            avg = classsum .\/ classnum;              $/;"	v
avgTable	lib/neuron-table/neuronAverage.m	/^avgTable = horzcat(keyTable,vertcat(tab_append{:}));$/;"	v
avg_class_table	bumpcurl_lda.m	/^    avg_class_table = neuronAverage(lda_class_acc,struct(...$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = reorderTDfields(avg_data);$/;"	v
avg_data	lib/TrialData/Tools/trialAverage.m	/^avg_data = repmat(struct(),1,num_conds);$/;"	v
axBar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    axBar = subplot(4,4,9);$/;"	v
axColormap	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^axColormap = subplot(4,4,13);$/;"	v
axCum	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    axCum = subplot(4,4,5);$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^    b = zeros(size(x,2)+1,size(y,2));$/;"	v
b	lib/TrialData/Analysis/getModel.m	/^b                    =  [];        % b and s identify if model_info was$/;"	v
b	lib/TrialData/Analysis/getPotentSpace.m	/^    b = zeros(size(x,2),size(y,2));$/;"	v
b	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^b = ihprs.b;$/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    b = bar(options.explainedVar.margVar(:,1:numCompToShow)' , 'stacked', 'BarWidth', 0.75,'Face/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^b = V(:,1:numCompToShow)'*V(:,1:numCompToShow);$/;"	v
b	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^b = [103 0 31]\/256;      %# start$/;"	v
b	lib/TrialData/util/lib/isomap/L2_distance.m	/^        b = [b; zeros(1, size(b, 2))]; $/;"	v
b	lib/tensor_toolbox/@ktensor/permute.m	/^b = ktensor(a.lambda, a.u(order));$/;"	v
b	lib/tensor_toolbox/@ktensor/subsref.m	/^                    b = b * t.u{i}(s.subs{i},k);$/;"	v
b	lib/tensor_toolbox/@ktensor/subsref.m	/^                b = t.lambda(k);$/;"	v
b	lib/tensor_toolbox/@ktensor/subsref.m	/^                b = tmp .* t.u{k}(subs(:,k),:);$/;"	v
b	lib/tensor_toolbox/@ktensor/subsref.m	/^            b = repmat(reshape(t.lambda,1,r),ns,1);$/;"	v
b	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^          b = repmat(b, numel(rsubs) * numel(csubs), 1);$/;"	v
b	lib/tensor_toolbox/@sptensor/ttt.m	/^    b = varargin{2};$/;"	v
b	lib/tensor_toolbox/@symktensor/permute.m	/^b = a;$/;"	v
b	lib/tensor_toolbox/@symktensor/subsref.m	/^                    b = b * t.u(s.subs{i},k);$/;"	v
b	lib/tensor_toolbox/@symktensor/subsref.m	/^                b = t.lambda(k);$/;"	v
b	lib/tensor_toolbox/@tensor/ttt.m	/^    b = varargin{2};$/;"	v
b	lib/tensor_toolbox/@ttensor/permute.m	/^b = ttensor(newcore,newu);$/;"	v
b	lib/tensor_toolbox/cp_apr.m	/^        b = rho(k) * delta_g(:, k)' * d;$/;"	v
b	lib/tensor_toolbox/create_problem.m	/^b = isa(x,'function_handle') || ...$/;"	v
b	lib/tensor_toolbox/create_problem.m	/^b = isa(x,'function_handle') || ismember(lower(x),{'rand','randn'});$/;"	v
b	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
b	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="b">$/;"	m
b	lib/tensor_toolbox/teneye.m	/^        b = a + m - 1;$/;"	v
b	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        b = param;$/;"	v
b_pc	lib/TrialData/Analysis/getPotentSpace.m	/^        b_pc = x\\y(:,i);$/;"	v
b_pi	lib/tensor_toolbox/cp_apr.m	/^        b_pi = m * Pi';$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^        badUnits = [badUnits; setxor(temp1,temp2,'rows')];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = [];$/;"	v
badUnits	lib/TrialData/util/checkUnitGuides.m	/^badUnits = unique(badUnits,'rows');$/;"	v
bad_idx	lib/TrialData/Tools/getCommonUnits.m	/^        bad_idx = checkUnitGuides(master_sg,trial_data(i).([array '_unit_guide']));$/;"	v
bad_idx	lib/TrialData/Tools/getTDfields.m	/^            bad_idx = bad_idx | ismember(fn,fn_idx) | ismember(fn,fn_ug) | ismember(fn,meta_vars/;"	v
bad_idx	lib/TrialData/Tools/removeBadTrials.m	/^bad_idx = false(1,length(trial_data));$/;"	v
bad_idx	lib/TrialData/Tools/trimTD.m	/^bad_idx = false(1,length(trial_data));$/;"	v
bad_trial	lib/load_curl_data.m	/^            bad_trial = false(length(td),1);$/;"	v
bad_trials	lib/TrialData/Tools/removeBadTrials.m	/^bad_trials = trial_data(bad_idx);$/;"	v
bad_trials	lib/TrialData/td_limblab/getRWMovements.m	/^    bad_trials = cellfun(@(x) ~any(isnan(x)),{trial_data.(go_cue_name)});$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = [];$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = bad_units | mean(all_spikes,1) < min_fr;$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^        bad_units = find(bad_units);$/;"	v
bad_units	lib/TrialData/Tools/removeBadNeurons.m	/^    bad_units = zeros(1,size(all_spikes,2));$/;"	v
bad_units	lib/load_curl_data.m	/^            bad_units = checkUnitGuides({td.([arrayname '_unit_guide'])});$/;"	v
badidx	lib/tensor_toolbox/@sptensor/private/extract.m	/^    badidx = tt_sub2ind(size(t),badsubs);$/;"	v
badloc	lib/tensor_toolbox/@sptensor/private/extract.m	/^badloc = find(sum(invalid,2));       $/;"	v
badsubs	lib/tensor_toolbox/@sptensor/private/extract.m	/^    badsubs = srchsubs(badloc,:);$/;"	v
bandwidth	lib/TrialData/util/process_lfp.m	/^bandwidth         =  50; % max frequency. Add  case to default to  fs\/2?$/;"	v
bar	lib/tensor_toolbox/@symktensor/entry.m	/^bar = squeeze(prod(foo,2));$/;"	v
bar	lib/tensor_toolbox/@symktensor/fg.m	/^        bar = foo;$/;"	v
bar	lib/tensor_toolbox/@symktensor/fg.m	/^        bar = reshape(bar,Q*M,P);$/;"	v
bar	lib/tensor_toolbox/@symktensor/fg.m	/^        bar = reshape(bar,Q,M,P);$/;"	v
baseline_cols	lib/neuron-table/getPDsFromWeights.m	/^baseline_cols = contains(weightTable.Properties.VariableNames,'baseline');$/;"	v
baseline_cols_idx	lib/neuron-table/getPDsFromWeights.m	/^baseline_cols_idx = find(baseline_cols);$/;"	v
bb	lib/tensor_toolbox/@sptensor/ttt.m	/^bb = sparse(bii,bjj,b.vals,m,p);$/;"	v
bdims	lib/tensor_toolbox/@sptensor/ttt.m	/^    bdims = adims;$/;"	v
bdims	lib/tensor_toolbox/@sptensor/ttt.m	/^    bdims = varargin{4};$/;"	v
bdims	lib/tensor_toolbox/@tensor/ttt.m	/^    bdims = adims;$/;"	v
bdims	lib/tensor_toolbox/@tensor/ttt.m	/^    bdims = varargin{4};$/;"	v
bend	lib/tensor_toolbox/tenrandblk.m	/^bend = cumsum(bsz,1);$/;"	v
best_match	lib/tensor_toolbox/@ktensor/score.m	/^best_match = M(max_score_id,:);$/;"	v
best_perm	lib/tensor_toolbox/@ktensor/score.m	/^    best_perm = zeros(1,RA);$/;"	v
best_perm	lib/tensor_toolbox/@ktensor/score.m	/^best_perm = [best_match setdiff(1:RA, best_match)];$/;"	v
best_score	lib/tensor_toolbox/@ktensor/score.m	/^        best_score = best_score + C(i,j);$/;"	v
best_score	lib/tensor_toolbox/@ktensor/score.m	/^    best_score = 0;$/;"	v
best_score	lib/tensor_toolbox/@ktensor/score.m	/^    best_score = best_score \/ RB;$/;"	v
best_sign	lib/tensor_toolbox/@ktensor/fixsigns.m	/^best_sign = ones(N,RA);$/;"	v
beta	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    beta = L' * MM; % zDim x xDim$/;"	v
beta	lib/tensor_toolbox/eig_geap.m	/^    beta = -1;$/;"	v
beta	lib/tensor_toolbox/eig_geap.m	/^    beta = 1;$/;"	v
beta1	lib/tensor_toolbox/gcp_opt.m	/^beta1 = params.Results.beta1;$/;"	v
beta2	lib/tensor_toolbox/gcp_opt.m	/^beta2 = params.Results.beta2;$/;"	v
bf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        bf = struct('and', @and, 'eq', @eq, 'ge', @ge, 'gt', @gt, 'ldivide', @ldivide, 'le', @le/;"	v
bf	lib/tensor_toolbox/tests/Test_Tensor.m	/^        bf = struct('and', @and, 'eq', @eq, 'ge', @ge, 'gt', @gt, 'ldivide', @ldivide, 'le', @le/;"	v
big	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
bigAr	lib/tensor_toolbox/cp_wopt.m	/^        bigAr = cell(N,1);$/;"	v
bigArn	lib/tensor_toolbox/cp_wopt.m	/^                bigArn = A{n}(Wsubs(:,n),r);$/;"	v
bigArn	lib/tensor_toolbox/cp_wopt.m	/^        bigArn = A{n}(Wsubs(:,n),r);$/;"	v
bigsubs	lib/tensor_toolbox/@sptensor/sptensor.m	/^                    bigsubs = [bigsubs; subs, k*ones(size(subs,1),1)];$/;"	v
bigsubs	lib/tensor_toolbox/@sptensor/sptensor.m	/^                    bigsubs = [subs, k*ones(size(subs,1),1)];$/;"	v
bigsubs	lib/tensor_toolbox/@sptensor/sptensor.m	/^            bigsubs = [];$/;"	v
bigvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^                    bigvals = [bigvals; vals];$/;"	v
bigvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^                    bigvals = [vals];$/;"	v
bigvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^            bigvals = [];$/;"	v
bigw	lib/tensor_toolbox/@sptensor/ttv.m	/^        bigw = w(idx);         % stretch out the vector$/;"	v
bii	lib/tensor_toolbox/@sptensor/ttt.m	/^    bii = loc(nnz(a)+1:end);$/;"	v
bii	lib/tensor_toolbox/@sptensor/ttt.m	/^    bii = ones(nnz(b),1);$/;"	v
binTD	lib/TrialData/Tools/binTD.m	/^function trial_data = binTD(trial_data,num_bins)$/;"	f
binWidth	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^binWidth      = 20; % in msec$/;"	v
binWidth	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^binWidth      = 20; % in msec$/;"	v
bin_angles	lib/TrialData/util/bin_angles.m	/^function theta = bin_angles(theta,angle_bin_size)$/;"	f
bin_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_events = bin_events(data,t_bin)$/;"	f
bin_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = bin_events(trials,event_list,t_bin)$/;"	f
bin_size	lib/TrialData/DataProcessing/convertDataToTD.m	/^bin_size        =  0.01;    % start at 10ms bins by default$/;"	v
bin_size	lib/TrialData/Tools/addFiringRates.m	/^            bin_size = trial_data(trial).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/convBasisFunc.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/removeBadNeurons.m	/^bin_size        =  trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/Tools/smoothSignals.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/td_limblab/getNeuronTuning.m	/^bin_size = trial_data(1).bin_size;$/;"	v
bin_size	lib/TrialData/td_limblab/parseFileByTrial.m	/^    bin_size = .01;$/;"	v
bin_size	lib/TrialData/td_limblab/parseFileByTrial.m	/^    bin_size = round(1000*mode(diff(cds.kin.t)))\/1000;$/;"	v
bin_size	lib/TrialData/util/resample_signals.m	/^bin_size        =  [];$/;"	v
bin_size	lib/load_curl_data.m	/^        bin_size = td(1).bin_size;$/;"	v
bin_spacing	lib/neuron-table/getTuningCurves.m	/^bin_spacing = mean(unique(diff(bins)));$/;"	v
bin_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^function binned_spikes = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [binned_spikes,sg] = bin_spikes(units,unit_idx,t_bin)$/;"	f
bin_w	lib/TrialData/Analysis/runGPFA.m	/^bin_w       =  0.02;$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^        binned_events = binned_events';$/;"	v
binned_events	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_events = zeros(length(data),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/DataProcessing/convertDataToTD.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^            binned_spikes = cds_bin.([arrays{array} '_spikes']);$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^binned_spikes = binned_spikes';$/;"	v
binned_spikes	lib/TrialData/td_limblab/parseFileByTrial.m	/^binned_spikes = zeros(size(unit_idx,1),length(t_bin));$/;"	v
bins	lib/TrialData/util/remove_spike_artifacts.m	/^        bins = i + (0:rejection_samples:last_timestamp+rejection_samples);$/;"	v
bins	lib/neuron-table/getTuningCurves.m	/^bins = bins(2:end);$/;"	v
bins	lib/neuron-table/getTuningCurves.m	/^bins = linspace(-pi,pi,num_bins+1);$/;"	v
bins	lib/neuron-table/plotTuning.m	/^        bins = curve.bins;$/;"	v
bins	lib/tensor_toolbox/create_problem.m	/^bins = min([0 cumsum(prob')],1);$/;"	v
bins_to_combine	lib/TrialData/td_limblab/BBDemoScript.m	/^bins_to_combine = 5;$/;"	v
bins_to_keep	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_keep = find(spike_count_in_bin<rejection_num_chans);$/;"	v
bins_to_reject	lib/TrialData/util/remove_spike_artifacts.m	/^        bins_to_reject = find(spike_count_in_bin>=rejection_num_chans);$/;"	v
bjj	lib/tensor_toolbox/@sptensor/ttt.m	/^    bjj = ones(nnz(b),1);$/;"	v
bl_clust	lib/estimateBumpFromPCA.m	/^bl_clust = cell(8,1);$/;"	v
bl_color	plotBumpcurlTuning.m	/^bl_color = colormap('autumn');$/;"	v
bl_dir	bumpcurl_analysis.m	/^    bl_dir = atan2(bl_vel(:,2),bl_vel(:,1));$/;"	v
bl_dir_lmpred	bumpcurl_analysis.m	/^    bl_dir_lmpred = atan2(bl_lmvel_pred(:,2),bl_lmvel_pred(:,1));$/;"	v
bl_dir_nnpred	bumpcurl_analysis.m	/^    bl_dir_nnpred = atan2(bl_nnvel_pred(:,2),bl_nnvel_pred(:,1));$/;"	v
bl_idx	bumpcurl_analysis.m	/^    bl_idx = getTDidx(td,'epoch','BL');$/;"	v
bl_idx	exploreData.m	/^bl_idx = getTDidx(td,'epoch','BL');$/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    bl_idx = getTDidx(trial_data,'epoch','bl',target_dir_fieldname,utheta(iDir))/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                bl_idx = getTDidx(trial_data,'epoch','bl',target_dir_fieldname,utheta(iDir));$/;"	v
bl_idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^            bl_idx = getTDidx(trial_data,'epoch','bl',target_dir_fieldname,utheta(iDir));$/;"	v
bl_idx	plotBumpcurlTuning.m	/^bl_idx = 1;$/;"	v
bl_lmvel_pred	bumpcurl_analysis.m	/^    bl_lmvel_pred = cat(1,td_bl.linmodel_vel_from_spikes);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^                bl_metric = lm_bl.predict(usincos);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),1);$/;"	v
bl_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        bl_metric = zeros(length(utheta),corr_samples,2);$/;"	v
bl_nnvel_pred	bumpcurl_analysis.m	/^    bl_nnvel_pred = cat(1,td_bl.nn_vel_from_spikes);$/;"	v
bl_temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            bl_temp = zeros(length(bl_idx),2,corr_samples);$/;"	v
bl_vel	bumpcurl_analysis.m	/^    bl_vel = cat(1,td_bl.vel);$/;"	v
blkrange	lib/tensor_toolbox/tenrandblk.m	/^    blkrange = cell(D,1);$/;"	v
block	lib/tensor_toolbox/tenrandblk.m	/^    block = Grnd .* dltpattern;$/;"	v
block	lib/tensor_toolbox/tenrandblk.m	/^    block = Grnd .* pattern;$/;"	v
block	lib/tensor_toolbox/tenrandblk.m	/^    block = sqrt(bns(i)\/sse) .* block;$/;"	v
block	lib/tensor_toolbox/tenrandblk.m	/^    block = sqrt(dltnrmsqr\/sse) .* block;$/;"	v
block_colors	lib/get_dpca_var.m	/^                    block_colors = colorfunc(num_blocks);$/;"	v
block_dist	lib/load_curl_data.m	/^            block_dist = angleDiff(td(trialnum).tgtDir,tgt_block_assign);$/;"	v
block_ends	lib/TrialData/util/process_emg.m	/^block_ends = find(diff([0;data_idx;0])<0);$/;"	v
block_ends	lib/TrialData/util/process_lfp.m	/^block_ends   = find(diff([0;data_idx;0])<0);$/;"	v
block_learning_dPC	lib/get_dpca_var.m	/^                        block_learning_dPC = mean(data);$/;"	v
block_learning_metric	lib/get_dpca_var.m	/^                        block_learning_metric = mean(cat(1,td_block.learning_metric));$/;"	v
block_starts	lib/TrialData/util/process_emg.m	/^block_starts = find(diff([0;data_idx;0])>0);$/;"	v
block_starts	lib/TrialData/util/process_lfp.m	/^block_starts = find(diff([0;data_idx;0])>0);$/;"	v
block_trials	lib/TrialData/Analysis/evalModel.m	/^block_trials     =  false;$/;"	v
blockquote	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
blockquote:after	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
blockquote:before	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
bmatrix	lib/tensor_toolbox/@tensor/ttt.m	/^bmatrix = tenmat(b,bdims);$/;"	v
body	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
body-cells	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^    <xsl:variable name="body-cells" select="cell[not(@style = 'overview')]"\/>$/;"	v	matchedTemplate:mscript
body-cells	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  <xsl:param name="body-cells"\/>$/;"	p	namedTemplate:contents
bootForTuning	lib/neuron-table/getTDClassicalPDs.m	/^bootForTuning = true;$/;"	v
bootForTuning	lib/neuron-table/getTDPDs.m	/^    bootForTuning = false;$/;"	v
bootForTuning	lib/neuron-table/getTDPDs.m	/^bootForTuning = true;$/;"	v
bootPD	lib/neuron-table/getTDClassicalPDs.m	/^        bootPD = zeros(num_boots,1);$/;"	v
boot_coef	lib/neuron-table/getTDPDs.m	/^        boot_coef = bootfunc(data_arr);$/;"	v
boot_coef	lib/neuron-table/getTDPDs.m	/^        boot_coef = bootstrp(num_boots,@(data) bootfunc(data),data_arr);$/;"	v
boot_mean	lib/neuron-table/getTDClassicalPDs.m	/^            boot_mean = circ_mean(bootPD);$/;"	v
boot_r	lib/neuron-table/getTDClassicalPDs.m	/^        boot_r = zeros(num_boots,1);$/;"	v
bootfunc	lib/neuron-table/getTDPDs.m	/^bootfunc = @(data) transpose(glmfit(data(:,2:end),data(:,1),distribution));$/;"	v
bottom	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^bottom = pos(2);$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^            bounds = fliplr(bounds);$/;"	v
bounds	lib/TrialData/Tools/getTDidx.m	/^    bounds = fv{idx};$/;"	v
bounds	lib/neuron-table/getNTidx.m	/^        bounds = fliplr(bounds);$/;"	v
bounds	lib/neuron-table/getNTidx.m	/^    bounds = fv{idx};$/;"	v
breakpt	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    breakpt = find(sort_sgn_score < 0, 1, 'last');$/;"	v
bremdims	lib/tensor_toolbox/@sptensor/ttt.m	/^bremdims = setdiff(1:ndims(b),bdims);$/;"	v
brighten	lib/matlab-colors/linspecer/linspecer.m	/^function varIn = brighten(varIn,varargin) % increase the brightness$/;"	f
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = 1:length(y_test);$/;"	v
bs	lib/TrialData/Analysis/evalModel.m	/^    bs = randi(length(y_test),length(y_test),num_bootstraps);$/;"	v
bsiz	lib/tensor_toolbox/@sptensor/ttt.m	/^bsiz = size(b);$/;"	v
bsiz	lib/tensor_toolbox/@tensor/subsasgn.m	/^            bsiz = max(subs,[],1);$/;"	v
bsn	lib/tensor_toolbox/doc/hosvd_doc.m	/^bsn = [.9 .09 .009]';$/;"	v
bsubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    bsubs = [];$/;"	v
bsxdims	lib/tensor_toolbox/cp_arls.m	/^        bsxdims = ones(1,N);$/;"	v
bsz	lib/tensor_toolbox/doc/hosvd_doc.m	/^bsz = [3 2 1; 2 2 2; 2 3 4];$/;"	v
bumpDir_idx	exploreData.m	/^        bumpDir_idx = td(i).bumpDir\/90+1; % only works for 4 bump files$/;"	v
bumpDir_idx	lib/animateBumpcurlTrials.m	/^            bumpDir_idx = td(i).bumpDir\/90+1; % only works for 4 bump files$/;"	v
bumpDir_names	exploreData.m	/^bumpDir_names = {0,90,180,270};$/;"	v
bump_colors	exploreData.m	/^bump_colors = colors(length(epoch_names)+1:end,:);$/;"	v
bumpcurl_analysis	bumpcurl_analysis.m	/^function bumpcurl_analysis(trial_data)$/;"	f
bumpcurl_dpca	bumpcurl_dpca.m	/^function bumpcurl_dpca$/;"	f
bvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^            bvals = bvals + tvals;$/;"	v
bvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^        bvals = zeros(NZ,1);$/;"	v
c	lib/TrialData/Analysis/pairwiseCorr.m	/^c = cluster(linkage(pdist(rho),'average'),'cutoff',1);$/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp); [NEV.Data.SerialDigitalIO(1:length(NEV.Data.Seri/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = num2cell(DataBegTimestamp\/NEV.MetaTags.SampleRes); [NEV.Data.SerialDigitalI/;"	v
c	lib/TrialData/util/openNEV_td.m	/^                c = {Inputs{NEV.Data.SerialDigitalIO.InsertionReason(AsteriskIndices)}}; [NEV.Da/;"	v
c	lib/curvature.m	/^    c = varargin{1};$/;"	v
c	lib/tensor_toolbox/@ktensor/ttv.m	/^    c = ktensor(newlambda,a.u{remdims});$/;"	v
c	lib/tensor_toolbox/@ktensor/ttv.m	/^    c = sum(newlambda);$/;"	v
c	lib/tensor_toolbox/@ktensor/ttv.m	/^    c = ttv(a,{v},dims);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttt.m	/^        c = 0;$/;"	v
c	lib/tensor_toolbox/@sptensor/ttt.m	/^        c = sptensor([],[],[a.size(aremdims) b.size(bremdims)]);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttt.m	/^    c = sum(nonzeros(cc));$/;"	v
c	lib/tensor_toolbox/@sptensor/ttt.m	/^    c = tensor(c);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttt.m	/^c = sptensor(newsubs,newvals,[a.size(aremdims) b.size(bremdims)]);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^        c = sptensor((1:newsiz)',c,newsiz);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^        c = tensor(c,newsiz);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^    c = accumarray(newsubs,newvals,[newsiz 1]);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^    c = sum(newvals);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^    c = tensor(c);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^    c = ttv(a,{v},dims);$/;"	v
c	lib/tensor_toolbox/@sptensor/ttv.m	/^c = sptensor(newsubs, newvals, newsiz);$/;"	v
c	lib/tensor_toolbox/@sumtensor/ttv.m	/^    c = sum(cell2mat(tmp));$/;"	v
c	lib/tensor_toolbox/@sumtensor/ttv.m	/^    c = sumtensor(tmp{:});$/;"	v
c	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^c = floor(exp(gammaln(n+1) - sum(gammaln(k+1),dim)) + .5); $/;"	v
c	lib/tensor_toolbox/@tensor/ttt.m	/^    c = cmatrix;$/;"	v
c	lib/tensor_toolbox/@tensor/ttt.m	/^    c = tensor(cmatrix);$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^        c = ttv_single(c,v{vidx(i)},dims(i));$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = a;$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = c * v{vidx(i)};$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = permute(c,[remdims dims]);$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = reshape(c,prod(sz(1:n-1)),sz(n));$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = tensor(c,sz(1:n));$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^    c = ttv(a,{v},dims);$/;"	v
c	lib/tensor_toolbox/@tensor/ttv.m	/^c = a.data;$/;"	v
c	lib/tensor_toolbox/@ttensor/ttv.m	/^    c = newcore;$/;"	v
c	lib/tensor_toolbox/@ttensor/ttv.m	/^    c = ttensor(newcore,a.u{remdims});$/;"	v
c	lib/tensor_toolbox/@ttensor/ttv.m	/^    c = ttv(a,{v},dims);$/;"	v
c	lib/tensor_toolbox/cp_apr.m	/^            c = free_indices(i);$/;"	v
c1	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^c1 = zeros(128,3);$/;"	v
c2	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^c2 = zeros(128,3);$/;"	v
cX	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  cX    = cov(X', 1);$/;"	v
cX_beta	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    cX_beta = cX * beta'; % xDim x zDim$/;"	v
calc_CIs	lib/neuron-table/getTuningCurves.m	/^calc_CIs = true;$/;"	v
calc_fr	lib/TrialData/Tools/removeBadNeurons.m	/^calc_fr         =  false;$/;"	v
calc_grad	lib/tensor_toolbox/cp_apr.m	/^function [grad_row, phi_row] = calc_grad(isSparse, Pi, eps_div_zero, x_row, m_row)$/;"	f
calc_rate	lib/TrialData/Tools/smoothSignals.m	/^calc_rate       =  false;$/;"	v
calculatePhi	lib/tensor_toolbox/cp_apr.m	/^function Phi = calculatePhi(X, M, R, n, Pi, epsilon)$/;"	f
calculatePi	lib/tensor_toolbox/cp_apr.m	/^function Pi = calculatePi(X, M, R, n, N)$/;"	f
caption	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
cart2pol_wrap	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function cyl = cart2pol_wrap(cart)$/;"	f
cart2sph_wrap	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^function sph = cart2sph_wrap(cart)$/;"	f
cart_names	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_names = repmat({'opensim'},length(coord_postfix),1);$/;"	v
cart_names	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_names = {'markers','marker_vel','marker_acc'};$/;"	v
cart_postfix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_postfix = strcat('_', point, {'Pos','Vel','Acc'});$/;"	v
cart_prefix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cart_prefix = {'X','Y','Z'};$/;"	v
catTDs	lib/TrialData/Tools/catTDs.m	/^function master_td = catTDs(varargin)$/;"	f
cb	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^cb = colorbar('location', 'southoutside');$/;"	v
cc	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    cc = componentsToPlot(c);$/;"	v
cc	lib/tensor_toolbox/@sptensor/ttt.m	/^cc = transpose(aa)*bb; $/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^            cdims = [rdims+1:n, 1:rdims-1];$/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^            cdims = [rdims-1:-1:1, n:-1:rdims+1];$/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^            cdims = varargin{2};$/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cdims = setdiff(1:n, rdims);$/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cdims = varargin{3};$/;"	v
cdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cdims = varargin{4};$/;"	v
cdims	lib/tensor_toolbox/@sptensor/ttm.m	/^cdims = Xnt.cdims;$/;"	v
cdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^            cdims = [rdims+1:n, 1:rdims-1];$/;"	v
cdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^            cdims = [rdims-1:-1:1, n:-1:rdims+1];$/;"	v
cdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^            cdims = varargin{2};$/;"	v
cdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^    cdims = find(tmp);   % i.e., cdims = setdiff(1:n, rdims);$/;"	v
cdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^    cdims = varargin{3};$/;"	v
cdims	lib/tensor_toolbox/doc/identities_doc.m	/^  cdims = n;$/;"	v
cdims	lib/tensor_toolbox/doc/identities_doc.m	/^  cdims = setdiff(1:ndims(X),rdims);$/;"	v
cdims	lib/tensor_toolbox/doc/identities_doc.m	/^  cdims = setdiff(1:ndims(Y),rdims);$/;"	v
cdims	lib/tensor_toolbox/doc/identities_doc.m	/^cdims = 1:ndims(X);$/;"	v
cds_bin	lib/TrialData/td_limblab/parseFileByTrial.m	/^cds_bin = struct();$/;"	v
cell_cols	lib/neuron-table/neuronAverage.m	/^    cell_cols = strcmpi(dataTable.Properties.VariableDescriptions,'cell');$/;"	v
cell_idx	lib/TrialData/Analysis/runDPCA.m	/^    cell_idx = find(cellfun(@iscell,varargin),1,'first');$/;"	v
center	lib/TrialData/Tools/getEnvelope.m	/^center       =  true;$/;"	v
center	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
centerSignals	lib/TrialData/Tools/centerSignals.m	/^function [trial_data, signal_means] = centerSignals(trial_data,params)$/;"	f
center_data	lib/TrialData/Tools/dimReduce.m	/^center_data       = true;   % whether to center data$/;"	v
centered_boot	lib/neuron-table/getTDClassicalPDs.m	/^            centered_boot = minusPi2Pi(bootPD-boot_mean);$/;"	v
centered_clust	lib/neuron-table/comparePDClouds.m	/^    centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/neuron-table/comparePDClouds.m	/^    centered_clust = minusPi2Pi(clust-repmat(means,size(clust,1),1));$/;"	v
centered_clust	lib/neuron-table/getTuningHull.m	/^        centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/neuron-table/getTuningHull.m	/^        centered_clust = clust-repmat(means,size(clust,1),1);$/;"	v
centered_clust	lib/neuron-table/plotWeightClouds.m	/^    centered_clust = centered_clust(inliers,:);$/;"	v
centered_clust	lib/neuron-table/plotWeightClouds.m	/^    centered_clust = clust-repmat(means,size(clust,1),1);$/;"	v
cgfh	lib/tensor_toolbox/create_problem.m	/^        cgfh = get_generator(params.Core_Generator);$/;"	v
chanNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            chanNames = cds.units(~cellfun(@isempty,([strfind({cds.units.array},arrays{array})])/;"	v
chan_idx	lib/TrialData/DataProcessing/processNEV.m	/^            chan_idx = NEV.Data.Spikes.Electrode == spiking_chans(iElec);$/;"	v
channelIDToDelete	lib/TrialData/util/openNSx_td.m	/^channelIDToDelete = setdiff(1:ChannelCount, userRequestedChanRow);$/;"	v
channelThatWereRead	lib/TrialData/util/openNSx_td.m	/^channelThatWereRead = min(userRequestedChanRow):max(userRequestedChanRow);$/;"	v
channels	lib/TrialData/Tools/getLFPidx.m	/^    channels = chans;$/;"	v
channels	lib/TrialData/Tools/getLFPidx.m	/^channels    =  'all';$/;"	v
chans	lib/TrialData/Tools/getLFPidx.m	/^        chans = [];$/;"	v
chans	lib/TrialData/Tools/getLFPidx.m	/^chans = unique(lfp_guide(:,1));$/;"	v
checkUnitGuides	lib/TrialData/util/checkUnitGuides.m	/^function [badUnits, varargout] = checkUnitGuides(varargin)$/;"	f
check_field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^function field_extra = check_field_extra(field_extra,signals)$/;"	f
check_signals	lib/TrialData/util/subfcn/check_signals.m	/^function signals = check_signals(trial_data,signals)$/;"	f
check_td_quality	lib/TrialData/util/subfcn/check_td_quality.m	/^function trial_data = check_td_quality(trial_data)$/;"	f
ciHiArr	lib/neuron-table/neuronAverage.m	/^        ciHiArr = prctile(dataTable{:,lin_cols},97.5,1);$/;"	v
ciHiTable	lib/neuron-table/neuronAverage.m	/^        ciHiTable = meanTable_lin;$/;"	v
ciLoArr	lib/neuron-table/neuronAverage.m	/^        ciLoArr = prctile(dataTable{:,lin_cols},2.5,1);$/;"	v
ciLoTable	lib/neuron-table/neuronAverage.m	/^        ciLoTable = meanTable_lin;$/;"	v
cidx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cidx = [];$/;"	v
cidx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cidx = ones(nnz(T),1);$/;"	v
cidx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    cidx = tt_sub2ind(csize,tsubs(:,cdims));$/;"	v
circ_cols	lib/neuron-table/neuronAverage.m	/^    circ_cols = contains(dataTable.Properties.VariableDescriptions,'circular');$/;"	v
circular_mean	lib/TrialData/util/circular_mean.m	/^function [mu, ul, ll] = circular_mean(alpha, w, dim)$/;"	f
cite	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
cl	lib/tensor_toolbox/@sumtensor/sumtensor.m	/^    cl = class(varargin{i});$/;"	v
class_test	bumpcurl_lda.m	/^                    class_test = cat(1,td_test.learning_block);$/;"	v
class_train	bumpcurl_lda.m	/^                    class_train = cat(1,td_train.learning_block);$/;"	v
classdir	lib/tensor_toolbox/maintenance/update_classlist.m	/^    classdir = fullfile(ttbdir,strcat('@',classname));$/;"	v
classidx	lib/tensor_toolbox/@symtensor/full.m	/^        classidx = sort(idx, 2);   %Sort indices$/;"	v
classidx	lib/tensor_toolbox/@tensor/issymmetric.m	/^            classidx = idx;$/;"	v
classidx	lib/tensor_toolbox/@tensor/symmetrize.m	/^            classidx = idx;$/;"	v
classlist	lib/tensor_toolbox/maintenance/update_classlist.m	/^    classlist = {'tensor','sptensor','ttensor','ktensor','tenmat',...$/;"	v
classlist	lib/tensor_toolbox/maintenance/update_classlist.m	/^    classlist = {classlist};$/;"	v
classlist	lib/tensor_toolbox/maintenance/update_classlist.m	/^classlist = params.Results.Class;$/;"	v
classmembers	lib/tensor_toolbox/maintenance/capabilitychart.m	/^classmembers = cell(nclasses,1);$/;"	v
classname	lib/tensor_toolbox/maintenance/update_classlist.m	/^    classname = classlist{j}; $/;"	v
classnames	lib/tensor_toolbox/maintenance/capabilitychart.m	/^classnames = {'tensor'; 'sptensor'; 'symtensor'; 'ttensor'; 'ktensor'; 'symktensor'; 'sumtensor'/;"	v
classnum	lib/tensor_toolbox/@tensor/symmetrize.m	/^            classnum = accumarray(linclassidx, 1);            $/;"	v
classsum	lib/tensor_toolbox/@tensor/symmetrize.m	/^            classsum = accumarray(linclassidx, X.data(:));$/;"	v
cln	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    cln = {c};$/;"	v
clust	lib/neuron-table/comparePDClouds.m	/^    clust = [pdTable_unit1.([move_corr 'PD']) pdTable_unit2.([move_corr 'PD'])];$/;"	v
clust	lib/neuron-table/getTuningHull.m	/^        clust = clust(inliers,:);$/;"	v
clust	lib/neuron-table/getTuningHull.m	/^        clust = tuningTable_unit{:,weight_col};$/;"	v
clust	lib/neuron-table/plotWeightClouds.m	/^    clust = clust(inliers,:);$/;"	v
clust	lib/neuron-table/plotWeightClouds.m	/^    clust = tuningTable_unit.([move_corr 'Weight']);$/;"	v
clust_hull	lib/neuron-table/getTuningHull.m	/^            clust_hull = [min(centered_clust)+means max(centered_clust)+means];$/;"	v
clust_hull	lib/neuron-table/getTuningHull.m	/^            clust_hull = {centered_clust(hull_idx,:) + repmat(means,length(hull_idx),1)};$/;"	v
cluster_order	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_order    =  false;$/;"	v
cluster_rho	lib/TrialData/Analysis/pairwiseCorr.m	/^function sort_idx = cluster_rho(rho)$/;"	f
cluster_signals	lib/TrialData/Analysis/pairwiseCorr.m	/^cluster_signals  =  false;$/;"	v
cm	lib/matlab-colors/PythonColors/Colormaps/fake_parula.m	/^cm = [[0.2081, 0.1663, 0.5292], $/;"	v
cm	lib/matlab-colors/PythonColors/Colormaps/inferno.m	/^cm = [[  1.46159096e-03,   4.66127766e-04,   1.38655200e-02],$/;"	v
cm	lib/matlab-colors/PythonColors/Colormaps/magma.m	/^cm = [[  1.46159096e-03,   4.66127766e-04,   1.38655200e-02],$/;"	v
cm	lib/matlab-colors/PythonColors/Colormaps/plasma.m	/^cm = [[  5.03832136e-02,   2.98028976e-02,   5.27974883e-01],$/;"	v
cm	lib/matlab-colors/PythonColors/Colormaps/viridis.m	/^cm = [[ 0.26700401,  0.00487433,  0.32941519],$/;"	v
cm_data	lib/matlab-colors/PythonColors/Colormaps/fake_parula.m	/^    cm_data = cm;$/;"	v
cm_data	lib/matlab-colors/PythonColors/Colormaps/inferno.m	/^    cm_data = cm;$/;"	v
cm_data	lib/matlab-colors/PythonColors/Colormaps/magma.m	/^    cm_data = cm;$/;"	v
cm_data	lib/matlab-colors/PythonColors/Colormaps/plasma.m	/^    cm_data = cm;$/;"	v
cm_data	lib/matlab-colors/PythonColors/Colormaps/viridis.m	/^    cm_data = cm;$/;"	v
cm_viridis	bumpcurl_tensors.m	/^        cm_viridis = viridis(200);$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^     cmap =  [0.2005    0.5593    0.7380;$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^    cmap =  [0.2005    0.5593    0.7380];$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^    cmap = (cmap\/255); % flipud??$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^    cmap = zeros(n,3);$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^cmap = flipud(cmap\/255);$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^cmap = interpomap(n,cmapp);$/;"	v
cmap	lib/matlab-colors/linspecer/linspecer.m	/^cmap = zeros(n,3);$/;"	v
cmap2linspecer	lib/matlab-colors/linspecer/linspecer.m	/^function vOut = cmap2linspecer(vIn) % changes the format from a double array to a cell array wit/;"	f
cmapp	lib/matlab-colors/linspecer/linspecer.m	/^        cmapp = [247,251,255;222,235,247;198,219,239;158,202,225;107,174,214;66,146,198;33,113,1/;"	v
cmapp	lib/matlab-colors/linspecer/linspecer.m	/^        cmapp = [247,252,245;229,245,224;199,233,192;161,217,155;116,196,118;65,171,93;35,139,69/;"	v
cmapp	lib/matlab-colors/linspecer/linspecer.m	/^        cmapp = [255,245,240;254,224,210;252,187,161;252,146,114;251,106,74;239,59,44;203,24,29;/;"	v
cmapp	lib/matlab-colors/linspecer/linspecer.m	/^        cmapp = [255,255,255;240,240,240;217,217,217;189,189,189;150,150,150;115,115,115;82,82,8/;"	v
cmapp	lib/matlab-colors/linspecer/linspecer.m	/^cmapp = [158, 1, 66; 213, 62, 79; 244, 109, 67; 253, 174, 97; 254, 224, 139; 255*frac, 255*frac,/;"	v
cmatrix	lib/tensor_toolbox/@tensor/ttt.m	/^cmatrix = amatrix * bmatrix;$/;"	v
cnl	lib/tensor_toolbox/maintenance/capabilitychart.m	/^cnl = cellfun(@length,classnames);$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.ObjTrackInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^                cnt = size(NEV.VideoSyncInfo, 2) + 1;$/;"	v
cnt	lib/TrialData/util/openNEV_td.m	/^            cnt = 1;$/;"	v
cnt	lib/tensor_toolbox/@sptensor/sptensor.m	/^        cnt = cnt + 1;$/;"	v
cnt	lib/tensor_toolbox/@sptensor/sptensor.m	/^    cnt = 0;$/;"	v
cnt	lib/tensor_toolbox/@tensor/issymmetric.m	/^        cnt = sum(cellfun(@(x) factorial(length(x)), grps));$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 1;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 2;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 3;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 4;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 5;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 6;$/;"	v
cnt	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^cnt = 7;$/;"	v
cnt	lib/tensor_toolbox/sptenrand.m	/^    cnt = cnt + 1;$/;"	v
cnt	lib/tensor_toolbox/sptenrand.m	/^cnt = 0;$/;"	v
cnt	lib/tensor_toolbox/teneye.m	/^            cnt = cnt-1;  % Work backwards in WV.$/;"	v
cnt	lib/tensor_toolbox/teneye.m	/^        cnt = K-1;  % Work backwards in WV.$/;"	v
cnt	lib/tensor_toolbox/teneye.m	/^    cnt = cnt + L;  % Increment base index.    $/;"	v
cnt	lib/tensor_toolbox/teneye.m	/^cnt = 1+L;$/;"	v
cnts	lib/tensor_toolbox/create_problem_binary.m	/^        cnts = cellfun(@length, modeidx);$/;"	v
code	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
code	lib/tensor_toolbox/doc/html/ttb.css	/^pre, code { font-size:12px; }$/;"	s
coef	lib/tensor_toolbox/cp_apr.m	/^    coef = 1 \/ rho(lbfgs_pos) \/ (delta_g(:, lbfgs_pos)' * delta_g(:, lbfgs_pos));$/;"	v
coefMatrix	lib/tensor_toolbox/@ktensor/norm.m	/^  coefMatrix = coefMatrix .* (U{i}'*U{i});$/;"	v
coefMatrix	lib/tensor_toolbox/@ktensor/norm.m	/^coefMatrix = A.lambda * A.lambda';$/;"	v
coefMatrix	lib/tensor_toolbox/@symktensor/norm.m	/^coefMatrix = A.lambda * A.lambda';$/;"	v
coefMatrix	lib/tensor_toolbox/@symktensor/norm.m	/^coefMatrix = coefMatrix .* ((UtU).^(A.m));$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = coinc > cutoff_val;$/;"	v
coinc	lib/TrialData/Tools/removeBadNeurons.m	/^        coinc = zeros(size(all_spikes,2));$/;"	v
col	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^        col = useColor(n,:);$/;"	v
col	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^        col = useColor;$/;"	v
col_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            col_name = [marker_names{marker_ctr} marker_postfix{col_ctr}];$/;"	v
col_title	lib/neuron-table/getPDsFromWeights.m	/^        col_title = weightTable_select.Properties.VariableNames{baseline_cols_idx(in_signal_idx)/;"	v
col_title	lib/neuron-table/getPDsFromWeights.m	/^        col_title = weightTable_select.Properties.VariableNames{weight_cols_idx(in_signal_idx)};$/;"	v
coll	lib/tensor_toolbox/doc/cp_arls_doc.m	/^coll = 0.9;$/;"	v
collapse	lib/tensor_toolbox/@sptensor/collapse.m	/^function s = collapse(t,dims,fun)$/;"	f
collapse	lib/tensor_toolbox/@tensor/collapse.m	/^function Y = collapse(X,dims,fun)$/;"	f
color	bumpcurl_lda.m	/^                color = 'k';$/;"	v
color	bumpcurl_lda.m	/^                color = [102,194,165]\/255;$/;"	v
color	bumpcurl_lda.m	/^                color = [141,160,203]\/255;$/;"	v
color	bumpcurl_lda.m	/^                color = [252,141,98]\/255;$/;"	v
color	lib/neuron-table/plotTuning.m	/^    color = 'k';$/;"	v
color	lib/plot_trace_projections.m	/^    color = 'k';$/;"	v
color	lib/plot_traces.m	/^    color = [0 0 0];$/;"	v
colorBrew2mat	lib/matlab-colors/linspecer/linspecer.m	/^function varIn = colorBrew2mat(varIn)$/;"	f
colorGradient	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^colorGradient = false;$/;"	v
colorblindFlag	lib/matlab-colors/linspecer/linspecer.m	/^            colorblindFlag = 1;$/;"	v
colorblindFlag	lib/matlab-colors/linspecer/linspecer.m	/^            colorblindFlag = false;$/;"	v
colorblindFlag	lib/matlab-colors/linspecer/linspecer.m	/^colorblindFlag = 0;$/;"	v
colorblindSet	lib/matlab-colors/linspecer/linspecer.m	/^colorblindSet = {[215,25,28];[253,174,97];[171,217,233]*.8;[44,123,182]*.8};$/;"	v
colorfunc	lib/get_dpca_var.m	/^    colorfunc = @viridis;$/;"	v
colorm	lib/matlab-colors/linspecer/linspecer.m	/^function cmap = colorm(varargin)$/;"	f
colors	exploreData.m	/^colors = linspecer(length(epoch_names)+length(bumpDir_names));$/;"	v
colors	exploreData.m	/^colors = {'b','r','g'};$/;"	v
colors	lib/TrialData/td_limblab/BBDemoScript.m	/^colors = linspecer(4);$/;"	v
colors	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^        colors = lines(numOfStimuli);$/;"	v
colors	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    colors = lines(numOfStimuli);$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^            combined_params = [combined_params, {{combs(i,:)+1,[1 combs(i,:)+1]}}];$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^    combined_params = [combined_params, {{i+1, [1 i+1]}}];$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^combined_params  = {};$/;"	v
combined_params	lib/TrialData/Analysis/runDPCA.m	/^combined_params = { {1} };$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td  =  check_td_quality(combined_td);$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td = reorderTDfields(combined_td);$/;"	v
combined_td	lib/TrialData/Tools/appendTDs.m	/^combined_td = varargin{1};$/;"	v
combo	lib/tensor_toolbox/tests/Test_NewTTM.m	/^        combo = struct('small3d', [3 10 50], 'small4d', [4 10 25], 'small5d', [5 5 10], 'large3d/;"	v
combos	lib/tensor_toolbox/@tensor/symmetrize.m	/^        combos = cell(ngrps,1);$/;"	v
combs	lib/TrialData/Analysis/runDPCA.m	/^        combs = nchoosek(1:length(conditions),2);$/;"	v
combs_no_rep	lib/tensor_toolbox/teneye.m	/^function CN = combs_no_rep(N,K)$/;"	f
combs_rep	lib/tensor_toolbox/teneye.m	/^function CR = combs_rep(N,K)$/;"	f
commentIndices	lib/TrialData/util/openNEV_td.m	/^commentIndices             = find(PacketIDs == commentPacketID);$/;"	v
commentPacketID	lib/TrialData/util/openNEV_td.m	/^commentPacketID = 65535;$/;"	v
comp	lib/TrialData/util/lib/isomap/IsomapII.m	/^comp = options.comp; $/;"	v
comp	lib/TrialData/util/lib/isomap/isomap.m	/^comp = options.comp; $/;"	v
comp_to_plot	lib/get_dpca_var.m	/^    comp_to_plot = 'learning';$/;"	v
comparePDClouds	lib/neuron-table/comparePDClouds.m	/^function comparePDClouds(pdTable1,pdTable2,params,varargin)$/;"	f
comparePDs	lib/neuron-table/comparePDs.m	/^function comparePDs(pdTable1,pdTable2,params,varargin)$/;"	f
compareTuning	lib/neuron-table/compareTuning.m	/^function compareTuning(neuron_table,params)$/;"	f
components	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        components = find(ismember(whichMarg, find(margNums==i)));$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            componentsToPlot = [componentsToPlot find(options.whichMarg==uni(u), 2)];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            componentsToPlot = componentsToPlot(1:12);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = 1:12;$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = [];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = [componentsToPlot moreComponents];$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = componentsToPlot(1:numCompToShow);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        componentsToPlot = sort(componentsToPlot);$/;"	v
componentsToPlot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    componentsToPlot = [];$/;"	v
comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^comps = comps(comp_order(end:-1:1));    $/;"	v
comps	lib/TrialData/util/lib/isomap/isomap.m	/^comps = comps(comp_order(end:-1:1));    $/;"	v
computeF	lib/tensor_toolbox/tt_gcp_fg.m	/^        computeF = true;$/;"	v
computeF	lib/tensor_toolbox/tt_gcp_fg_est.m	/^        computeF = true;$/;"	v
computeG	lib/tensor_toolbox/tt_gcp_fg.m	/^        computeG = (nargout > 1);$/;"	v
computeG	lib/tensor_toolbox/tt_gcp_fg_est.m	/^        computeG = (nargout > 1);$/;"	v
compute_pseudo_R2	lib/TrialData/util/compute_pseudo_R2.m	/^function R2 = compute_pseudo_R2(Y, Yhat, Ymean, distr, Yhat_null)$/;"	f
compute_r2	lib/TrialData/util/compute_r2.m	/^function r2 = compute_r2(sig1,sig2,which_method)$/;"	f
compute_rel_pseudo_R2	lib/TrialData/util/compute_rel_pseudo_R2.m	/^function R2 = compute_rel_pseudo_R2(Y, Yhat1, Yhat2)$/;"	f
compute_vaf	lib/TrialData/util/compute_vaf.m	/^function VAF = compute_vaf(Y,Yhat,Yhat2)$/;"	f
concave	lib/tensor_toolbox/eig_geap.m	/^concave = p.Results.Concave;$/;"	v
concave	lib/tensor_toolbox/eig_sshopm.m	/^    concave = (shift < 0);$/;"	v
concave	lib/tensor_toolbox/eig_sshopm.m	/^concave = p.Results.Concave;$/;"	v
cond_cell	lib/neuron-table/compareTuning.m	/^        cond_cell = [conditions.Properties.VariableNames; table2cell(conditions(cond_idx,:))];$/;"	v
cond_colors	lib/neuron-table/compareTuning.m	/^    cond_colors = linspecer(height(conditions));$/;"	v
cond_colors	lib/neuron-table/compareTuning.m	/^cond_colors = [];$/;"	v
cond_cols	lib/neuron-table/compareTuning.m	/^cond_cols = {};$/;"	v
cond_idx	lib/TrialData/Tools/subtractConditionMean.m	/^cond_idx  =  1:length(trial_data);$/;"	v
cond_idx	lib/TrialData/Tools/trialAverage.m	/^cond_idx = cell(1,num_conds);$/;"	v
cond_idx	lib/neuron-table/neuronAverage.m	/^cond_idx = false(height(keyTable),height(neuronTable));$/;"	v
cond_vals	lib/TrialData/Tools/trialAverage.m	/^    cond_vals = cell(1,length(conditions));$/;"	v
condition	lib/TrialData/Analysis/estimateDimensionality.m	/^condition       =  'target_direction';$/;"	v
conditions	lib/TrialData/Analysis/runDPCA.m	/^conditions = cell(1,length(varargin)-1);$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^    conditions = params;$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^    conditions = {'all'};$/;"	v
conditions	lib/TrialData/Tools/trialAverage.m	/^conditions  =  {};$/;"	v
conditions	lib/neuron-table/compareTuning.m	/^conditions = unique(neuron_table(:,cond_cols),'rows');$/;"	v
conformal	lib/TrialData/util/lib/isomap/IsomapII.m	/^conformal = options.conformal;  % [RMS]$/;"	v
congruences	lib/tensor_toolbox/doc/test_problems_doc.m	/^congruences = U'*U$/;"	v
const	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  const = -xDim\/2*log(2*pi);$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = [cont_idx; cont_idx(emg_idx)];$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx = cont_idx_new;$/;"	v
cont_idx	lib/TrialData/Tools/reorderTDfields.m	/^cont_idx = find(ismember(fn,fn_cont));$/;"	v
cont_idx_new	lib/TrialData/Tools/reorderTDfields.m	/^    cont_idx_new = zeros(size(cont_idx));$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^        cont_var_ref = {cont_var_ref};$/;"	v
cont_var_ref	lib/TrialData/Tools/getTDfields.m	/^    cont_var_ref = cont_vars;$/;"	v
cont_vars	lib/TrialData/Tools/getTDfields.m	/^cont_vars = {'pos','vel','speed','acc','force','emg','t','x','y','z'}; % hard coded list of opti/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^            cont_vars_here = fn(ismember(fn,cont_var_ref));$/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^        cont_vars_here = cont_vars_here(cellfun(@isempty,regexp(cont_vars_here,'_shift_vals')));$/;"	v
cont_vars_here	lib/TrialData/Tools/getTDfields.m	/^        cont_vars_here = getTDfields(trial_data,'spikes');$/;"	v
contact	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="contact">Contact<\/h2>$/;"	I
content	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^        <td colspan="3" id="content"><h2>Tensor Toolbox<\/h2><\/td>$/;"	I
contents	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template name="contents">$/;"	n
contract	lib/tensor_toolbox/@sptensor/contract.m	/^function y = contract(x,i,j)$/;"	f
contract	lib/tensor_toolbox/@tensor/contract.m	/^function y = contract(x,i,j)$/;"	f
contribute	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="contribute">How to Contribute<\/h2>$/;"	I
convBasisFunc	lib/TrialData/Tools/convBasisFunc.m	/^function trial_data = convBasisFunc(trial_data,params)$/;"	f
convertDataToTD	lib/TrialData/DataProcessing/convertDataToTD.m	/^function [trial_data,td_params,error_flag] = convertDataToTD(varargin)$/;"	f
convert_bound	lib/tensor_toolbox/cp_opt.m	/^function newbound = convert_bound(bound,sz,R)$/;"	f
convert_bound	lib/tensor_toolbox/cp_wopt.m	/^function newbound = convert_bound(bound,sz,R)$/;"	f
convert_to_mv	lib/TrialData/DataProcessing/processNSx.m	/^convert_to_mv = true;$/;"	v
coord	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^coord = 'sph';$/;"	v
coord_postfix	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^coord_postfix = {'pos','vel','acc'};$/;"	v
coord_test	lib/TrialData/td_limblab/coord_test.m	/^function pass = coord_test(trial_data)$/;"	f
copyright	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="copyright">$/;"	m
core	lib/tensor_toolbox/create_problem.m	/^        core = tensor(cgfh(nfactors));$/;"	v
core	lib/tensor_toolbox/doc/ktensor_doc.m	/^core = sptendiag(X.lambda, repmat(R,1,ndims(X))); %<-- Sparse diagonal core.$/;"	v
core	lib/tensor_toolbox/doc/ktensor_doc.m	/^core = tendiag(X.lambda, repmat(R,1,ndims(X))); %<-- Create a diagonal core.$/;"	v
core	lib/tensor_toolbox/doc/test_problems_doc.m	/^core = info.Soln.core$/;"	v
core	lib/tensor_toolbox/doc/ttensor_doc.m	/^core = tensor(rand(3,2,1),[3 2 1]); %<-- The core tensor.$/;"	v
core	lib/tensor_toolbox/tucker_als.m	/^    core = ttm(Utilde, U, n, 't');$/;"	v
core	lib/tensor_toolbox/tucker_sym.m	/^    core = ttm(S, Xcell, 1:N, 't');$/;"	v
core1	lib/tensor_toolbox/doc/ttensor_doc.m	/^core1 = sptenrand([3 2 1],3); %<-- Create a 3 x 2 x 1 sptensor.$/;"	v
core2	lib/tensor_toolbox/doc/ttensor_doc.m	/^core2 = ktensor(V); %<-- Create a 3 x 2 x 1 ktensor.$/;"	v
core3	lib/tensor_toolbox/doc/ttensor_doc.m	/^core3 = ttensor(tensor(1:8,[2 2 2]),V); %<-- Create a 3 x 2 x 1 ttensor.$/;"	v
coresize	lib/tensor_toolbox/doc/hosvd_doc.m	/^coresize = size(T.core)$/;"	v
corr_samples	lib/TrialData/td_limblab/getLearningMetrics.m	/^corr_samples = 1000;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/convertDataToTD.m	/^count = 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^                count = count + 1;$/;"	v
count	lib/TrialData/DataProcessing/processNEV.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                    count = count + n_signals(iSig);$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                count = 0;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^                count = count + N;$/;"	v
count	lib/TrialData/Tools/dimReduce.m	/^            count = 0;$/;"	v
count	lib/TrialData/Tools/getSigByTrial.m	/^    count = count + length(signals{iSig,2});$/;"	v
count	lib/TrialData/Tools/getSigByTrial.m	/^count = 0;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^                count = count + 1;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/Tools/splitTD.m	/^count = 0;$/;"	v
count	lib/TrialData/td_limblab/getRWMovements.m	/^            count = count + 1;$/;"	v
count	lib/TrialData/td_limblab/getRWMovements.m	/^count = 0;$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^    count = count + length(idx{iSig});$/;"	v
count	lib/TrialData/util/subfcn/get_vars.m	/^count = 0;$/;"	v
count	lib/tensor_toolbox/cp_apr.m	/^                count = count + 1;$/;"	v
count	lib/tensor_toolbox/cp_apr.m	/^            count = count + 1;$/;"	v
count	lib/tensor_toolbox/cp_apr.m	/^    count = 1;$/;"	v
countInnerIters	lib/tensor_toolbox/cp_apr.m	/^    countInnerIters = zeros(1,N);$/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+(K+1); $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+K; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^             counter = counter+l; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^         counter = 0; $/;"	v
counter	lib/TrialData/util/lib/isomap/IsomapII.m	/^     counter = 0; $/;"	v
covar	lib/TrialData/td_limblab/getNeuronTuning.m	/^        covar = [trial_data.target_direction]';$/;"	v
covariate	lib/TrialData/td_limblab/getNeuronTuning.m	/^covariate  =  'target';$/;"	v
cp_als	lib/tensor_toolbox/cp_als.m	/^function [P,Uinit,output] = cp_als(X,R,varargin)$/;"	f
cp_apr	lib/tensor_toolbox/cp_apr.m	/^function [M, Minit, output] = cp_apr(X, R, varargin)$/;"	f
cp_arls	lib/tensor_toolbox/cp_arls.m	/^function [P,Uinit,output] = cp_arls(X,R,varargin)$/;"	f
cp_nmu	lib/tensor_toolbox/cp_nmu.m	/^function [P,Uinit] = cp_nmu(X,R,opts)$/;"	f
cp_opt	lib/tensor_toolbox/cp_opt.m	/^function [P, P0, output] = cp_opt(Z,R,varargin)$/;"	f
cp_sym	lib/tensor_toolbox/cp_sym.m	/^function [Model,Info] = cp_sym(A,P,varargin)$/;"	f
cp_wopt	lib/tensor_toolbox/cp_wopt.m	/^function [P, P0, output] = cp_wopt(Z,W,R,varargin)$/;"	f
create_dircontents	lib/tensor_toolbox/maintenance/create_dircontents.m	/^function C = create_dircontents(dirname,varargin)/;"	f
create_guess	lib/tensor_toolbox/create_guess.m	/^function U = create_guess(varargin)$/;"	f
create_problem	lib/tensor_toolbox/create_problem.m	/^function [info,params] = create_problem(varargin)$/;"	f
create_problem_binary	lib/tensor_toolbox/create_problem_binary.m	/^function [X,Mtrue,info] = create_problem_binary(sz,r,varargin)$/;"	f
create_topcontents	lib/tensor_toolbox/maintenance/create_topcontents.m	/^function create_topcontents$/;"	f
crng	lib/tensor_toolbox/gcp_opt.m	/^            crng = 1:gsamp(1);$/;"	v
crng	lib/tensor_toolbox/gcp_opt.m	/^    crng = []; % Default value$/;"	v
crng	lib/tensor_toolbox/tt_gcp_fg_est.m	/^        crng = [];$/;"	v
csample	lib/tensor_toolbox/create_problem.m	/^csample = prosample(nedges, P.lambda);$/;"	v
csize	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^csize = tsize(cdims);$/;"	v
csubs	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^        csubs = s.subs{2};$/;"	v
csubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^        csubs = A.subs;$/;"	v
csubs	lib/tensor_toolbox/@sptensor/times.m	/^        csubs = A.subs;$/;"	v
csubs	lib/tensor_toolbox/create_problem_binary.m	/^            csubs = tt_ind2sub(cnts',(1:fcnt)');$/;"	v
csums	lib/tensor_toolbox/create_problem.m	/^csums = accumarray(csample,1,[nc 1]);$/;"	v
ctranspose	lib/tensor_toolbox/@tenmat/ctranspose.m	/^function a = ctranspose(a)$/;"	f
ctrs	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ctrs = yrnge(1):db:yrnge(2);   % centers (peak locations) for basis vectors$/;"	v
cumsum2	lib/tensor_toolbox/teneye.m	/^function A = cumsum2(A)$/;"	f
curr_path	lib/TrialData/util/getGitInfo.m	/^curr_path = mfilename('fullpath');$/;"	v
currentLocation	lib/TrialData/util/openNEV_td.m	/^currentLocation = ftell(FID);$/;"	v
currentParams	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^currentParams = startParams;$/;"	v
curvature	lib/curvature.m	/^function k = curvature(varargin)$/;"	f
curve	lib/neuron-table/getTuningCurves.m	/^curve = zeros(size(response_var,2),num_bins);$/;"	v
curve_CIhigh	lib/neuron-table/getTuningCurves.m	/^curve_CIhigh = zeros(size(response_var,2),num_bins);$/;"	v
curve_CIlow	lib/neuron-table/getTuningCurves.m	/^curve_CIlow = zeros(size(response_var,2),num_bins);$/;"	v
curve_colname	lib/neuron-table/compareTuning.m	/^curve_colname = 'velCurve';$/;"	v
curve_colname	lib/neuron-table/plotTuning.m	/^    curve_colname = 'velCurve';$/;"	v
curve_colname	lib/neuron-table/plotTuning.m	/^curve_colname = 'velCurve';$/;"	v
curve_stderr	lib/neuron-table/getTuningCurves.m	/^        curve_stderr = std(response_var_in_bin,0,2)\/sqrt(size(response_var_in_bin,2)); % standa/;"	v
curve_wrap	lib/neuron-table/plotTuning.m	/^        curve_wrap = curve_wrap(~isnan(curve_wrap));$/;"	v
curve_wrap	lib/neuron-table/plotTuning.m	/^        curve_wrap = repmat(curve.(curve_colname),1,3);$/;"	v
curves	lib/neuron-table/getTuningCurves.m	/^curves = horzcat(makeNeuronTableStarter(trial_data,params),tab_append);$/;"	v
cutoff_val	lib/TrialData/Tools/removeBadNeurons.m	/^        cutoff_val = prctile_dist(floor(10*prctile_cutoff));$/;"	v
cvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^        cvals = A.vals .\/ B(csubs); $/;"	v
cvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^        cvals = avals .\/ bvals;$/;"	v
cvals	lib/tensor_toolbox/@sptensor/times.m	/^            cvals = cvals + tvals;$/;"	v
cvals	lib/tensor_toolbox/@sptensor/times.m	/^        cvals = A.vals .* B(csubs); $/;"	v
cvals	lib/tensor_toolbox/@sptensor/times.m	/^        cvals = A.vals(ia) .* B.vals(ib);$/;"	v
cvals	lib/tensor_toolbox/@sptensor/times.m	/^        cvals = zeros(size(A.vals));       $/;"	v
cyc	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  cyc        = 1e8;$/;"	v
cyl	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    cyl = [th r z];$/;"	v
d	lib/TrialData/Analysis/pairwiseCorr.m	/^d = squareform(pdist(rho));$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^d = length(X);$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            d = d\/sum(d)*100;$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar \/ options.explainedVar.totalVar * 100;$/;"	v
d	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        d = options.explainedVar.totalMarginalizedVar_signal \/ options.explainedVar.totalVar_si/;"	v
d	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  d     = mean(X, 2);$/;"	v
d	lib/TrialData/util/lib/isomap/IsomapII.m	/^         d = feval(d_func,i); $/;"	v
d	lib/TrialData/util/lib/isomap/L2_distance.m	/^    d = real(d);/;"	v
d	lib/TrialData/util/lib/isomap/L2_distance.m	/^    d = sqrt(bsxfun(@plus, sum(a .* a)', bsxfun(@minus, sum(b .* b), 2 * a' * b)));$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^                d = filtfilt(bhigh,ahigh,double(d));$/;"	v
d	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            d = data(i,:);$/;"	v
d	lib/tensor_toolbox/@ktensor/mask.m	/^d = ndims(X);$/;"	v
d	lib/tensor_toolbox/@ktensor/subsref.m	/^            d = size(subs,2);$/;"	v
d	lib/tensor_toolbox/@tensor/mttkrps.m	/^d = length(sz);$/;"	v
d	lib/tensor_toolbox/@tensor/ttsv.m	/^d = ndims(A); % Number of modes in tensor$/;"	v
d	lib/tensor_toolbox/cp_apr.m	/^            d = free_indices(j);$/;"	v
d	lib/tensor_toolbox/cp_apr.m	/^        d = d + (alpha(k) - b) * delta_m(:, k);$/;"	v
d	lib/tensor_toolbox/cp_apr.m	/^        d = d - alpha(k) * delta_g(:, k);$/;"	v
d	lib/tensor_toolbox/cp_apr.m	/^    d = -grad;$/;"	v
d	lib/tensor_toolbox/cp_apr.m	/^    d = coef * d;$/;"	v
d	lib/tensor_toolbox/create_problem_binary.m	/^d = length(sz);$/;"	v
d	lib/tensor_toolbox/eig_geap.m	/^        d = newlambda-lambda;$/;"	v
d	lib/tensor_toolbox/eig_sshopm.m	/^        d = newlambda-lambda;$/;"	v
d	lib/tensor_toolbox/eig_sshopmc.m	/^        d = abs(newlambda) - abs(lambda);$/;"	v
d	lib/tensor_toolbox/eig_sshopmc.m	/^        d = imag(newlambda-lambda);$/;"	v
d	lib/tensor_toolbox/eig_sshopmc.m	/^        d = real(newlambda-lambda);$/;"	v
d	lib/tensor_toolbox/hosvd.m	/^d = ndims(X);$/;"	v
d	lib/tensor_toolbox/tt_gcp_fg_est.m	/^d = ndims(M);$/;"	v
d	lib/tensor_toolbox/tt_gcp_fg_est.m	/^d = size(subs,2);$/;"	v
d	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        d = param;$/;"	v
d	lib/tensor_toolbox/tt_sample_semistrat.m	/^d = ndims(X);$/;"	v
d	lib/tensor_toolbox/tt_sample_uniform.m	/^d = ndims(X);$/;"	v
d	lib/tensor_toolbox/tt_sample_zeros.m	/^d = ndims(X);$/;"	v
dM	lib/tensor_toolbox/cp_apr.m	/^    dM = double(tenmat(M,1));$/;"	v
dPD	plotBumpcurlTuning.m	/^dPD = PD-repmat(PD(1,:),num_epochs,1);$/;"	v
dX	lib/tensor_toolbox/cp_apr.m	/^    dX = double(tenmat(X,1));$/;"	v
d_func	lib/TrialData/util/lib/isomap/IsomapII.m	/^     d_func = D; $/;"	v
dat	lib/TrialData/Analysis/runGPFA.m	/^dat = repmat(struct(),size(trial_data));$/;"	v
dat	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    dat = seq(n).(xspec)(dimsToPlot,:);$/;"	v
data	lib/TrialData/Analysis/getNoiseCovar.m	/^data = get_vars(td,noise_signals);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = (data - repmat(mu_in,size(data,1),1)) * w_in;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = data(:,1:in_dims);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = get_vars(trial_data(trial),in_signals);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^            data = trial_data(trial).([sig_name_in{:} '_pca']);$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = (data - repmat(mu_out,size(data,1),1)) * w_out;$/;"	v
data	lib/TrialData/Analysis/getPotentSpace.m	/^        data = get_vars(trial_data(trial),out_signals);$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^    data = [data, temp(:,signals{i,2})];$/;"	v
data	lib/TrialData/Analysis/pairwiseCorr.m	/^data = [];$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data = data(idx_keep,:);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data = process_emg(data,temp_params);$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        data = which_operation(data')';$/;"	v
data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    data = file_data_temp.data(:,idx);$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^            data = [];$/;"	v
data	lib/TrialData/DataProcessing/processNEV.m	/^        data = cell(1,length(labels));$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^    data = data\/4e3;$/;"	v
data	lib/TrialData/DataProcessing/processNSx.m	/^data = double(NSx.Data)';$/;"	v
data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    data = get_vars(td(trial),signals);$/;"	v
data	lib/TrialData/Tools/convBasisFunc.m	/^                data = trial_data(trial).(signals{iSig,1});$/;"	v
data	lib/TrialData/Tools/convBasisFunc.m	/^                data = zeros(size(trial_data(trial).(fn_time{1}),1),1);$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^                data = data - repmat(mu,size(data,1),1);$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^                data = zeros(size(trial_data(trial).(signals{1,1}),1),sum(n_signals));$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^        data = [data, temp_data(:,signals{i,2})];$/;"	v
data	lib/TrialData/Tools/dimReduce.m	/^    data = [];$/;"	v
data	lib/TrialData/Tools/getDifferential.m	/^        data = trial_data(trial).(signal);$/;"	v
data	lib/TrialData/Tools/getNorm.m	/^        data = getSig(trial_data(trial),signals(iSig,:));$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^                data = smooth_data(data,bin_size,width);$/;"	v
data	lib/TrialData/Tools/smoothSignals.m	/^            data = getSig(trial_data(trial),signals(iSig,1));$/;"	v
data	lib/TrialData/Tools/sqrtTransform.m	/^        data = getSig(trial_data(trial),signals{iSig,:});$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = data';$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = reshape(data, size(data,1), []);$/;"	v
data	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    data = squeeze(data);$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data -  repmat(mean(data,1),size(data,1),1);$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data - repmat(mean(data,2),1,size(data,2));$/;"	v
data	lib/TrialData/util/process_lfp.m	/^    data = data_ds;$/;"	v
data	lib/TrialData/util/process_lfp.m	/^data = double(data);$/;"	v
data	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^data = file_data.data;$/;"	v
data	lib/get_dpca_var.m	/^                        data = get_vars(...$/;"	v
data	lib/get_dpca_var.m	/^                    data = get_vars(...$/;"	v
data	lib/get_dpca_var.m	/^                    data = get_vars(td_avg,{sprintf('%s_dpca_%s',spikes_in_td{arraynum},comp_to_/;"	v
data	lib/get_dpca_var.m	/^                data = getSig(td_boot,spikes_in_td(arraynum));$/;"	v
data	lib/plot_traces.m	/^        data = get_vars(td_select(trialnum),signals);$/;"	v
data	lib/plot_traces.m	/^    data = get_vars(td_avg,signals);$/;"	v
data	lib/tensor_toolbox/@ktensor/full.m	/^        data = khatrirao(t.u(1:minS),'r') * diag(t.lambda) * khatrirao(t.u(minS+1:end),'r')';$/;"	v
data	lib/tensor_toolbox/@ktensor/full.m	/^        data = khatrirao(t.u,'r') * t.lambda;$/;"	v
data	lib/tensor_toolbox/@ktensor/full.m	/^    data = t.lambda' * khatrirao(t.u,'r')';$/;"	v
data	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    data = var2struct(fgopts,M,N,P,A,normAsqr,lb,ub);$/;"	v
data	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    data = var2struct(fgopts,M,N,P,Q,R,avals,I,C,W,onesidx,zerosidx,lb,ub);$/;"	v
data	lib/tensor_toolbox/@tenmat/tenmat.m	/^    data = varargin{1};$/;"	v
data	lib/tensor_toolbox/@tenmat/tenmat.m	/^data = reshape(double(permute(T,[rdims cdims])), prod(tsize(rdims)), prod(tsize(cdims)));$/;"	v
data	lib/tensor_toolbox/@tensor/contract.m	/^data = reshape(x.data, m, n, n);$/;"	v
data	lib/tensor_toolbox/@tensor/tenfun.m	/^    data = fun(X,Y);$/;"	v
data	lib/tensor_toolbox/@tensor/tenfun.m	/^data = fun(X);$/;"	v
data	lib/tensor_toolbox/@tensor/tensor.m	/^            data = reshape(v.data, [sz(order) 1 1]);$/;"	v
data	lib/tensor_toolbox/@tensor/tensor.m	/^        data = reshape(data,[siz 1 1]);$/;"	v
data	lib/tensor_toolbox/@tensor/tensor.m	/^    data = fh([siz 1 1]);$/;"	v
data	lib/tensor_toolbox/@tensor/tensor.m	/^    data = varargin{1};$/;"	v
data	lib/tensor_toolbox/cp_arls.m	/^data = skr(P.u, subs) * P.lambda;$/;"	v
data	lib/tensor_toolbox/cp_sym.m	/^data = fg_setup(Model0,A,params.Unmatched);$/;"	v
data	lib/tensor_toolbox/doc/test_problems_doc.m	/^data = info.Data$/;"	v
data	lib/tensor_toolbox/eig_geap.m	/^    data = newdata;$/;"	v
data	lib/tensor_toolbox/eig_geap.m	/^data = geap_data(x,A,B);$/;"	v
data	lib/tensor_toolbox/import_data.m	/^    data = import_array(fid, prod(sz));   $/;"	v
data	lib/tensor_toolbox/import_data.m	/^data = fscanf(fid, '%e', n);$/;"	v
data	lib/tensor_toolbox/import_data.m	/^data = textscan(fid,[repmat('%f',1,n) '%n']);$/;"	v
data	lib/tensor_toolbox/tenones.m	/^data = ones([sz 1 1]);$/;"	v
data	lib/tensor_toolbox/tenrand.m	/^    data = rand([sz 1 1]);$/;"	v
data	lib/tensor_toolbox/tenzeros.m	/^data = zeros([sz 1 1]);$/;"	v
dataBinWidth	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  dataBinWidth = 1; %in msec$/;"	v
dataDetrend	lib/TrialData/util/resample_signals.m	/^dataDetrend = zeros(size(data,1),size(data,2));$/;"	v
dataDim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^dataDim = size(Xfull);$/;"	v
dataDimFull	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    dataDimFull = size(options.X_extra);$/;"	v
dataResampled	lib/TrialData/util/resample_signals.m	/^dataResampled = zeros(size(temp,1),size(temp,2));$/;"	v
dataTable	lib/neuron-table/neuronAverage.m	/^    dataTable = neuronTable_select(:,~keycols & ~ignorecols);$/;"	v
data_arr	lib/neuron-table/getTDPDs.m	/^    data_arr = [response_var(:,uid) input_var];$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = bin_events(data,t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = bin_spikes(data,1:length(data),t_bin);$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = histcounts(trig_ts,t_bin)'; % bin$/;"	v
data_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            data_bin = interp1(t_resamp,data_resampled,t_bin);$/;"	v
data_ds	lib/TrialData/util/process_lfp.m	/^    data_ds = zeros(ceil(size(data,1)\/downsample_fac),size(data,2));$/;"	v
data_fft	lib/TrialData/util/process_lfp.m	/^    data_fft = abs(data_fft);$/;"	v
data_fft	lib/TrialData/util/process_lfp.m	/^data_fft = cat(2, ...$/;"	v
data_idx	lib/TrialData/util/process_emg.m	/^data_idx = ~any(isnan(data),2);$/;"	v
data_idx	lib/TrialData/util/process_lfp.m	/^data_idx = ~any(isnan(data),2);$/;"	v
data_poly	lib/TrialData/util/resample_signals.m	/^    data_poly = data(~nanners,i);$/;"	v
data_smooth	lib/TrialData/util/smooth_data.m	/^data_smooth = zeros(nbr_samples,nbr_chs);$/;"	v
data_type	lib/TrialData/DataProcessing/processNEV.m	/^data_type        = 'spikes'; % 'spikes', 'comments' for now$/;"	v
datadisp	lib/tensor_toolbox/@ktensor/datadisp.m	/^function datadisp(T, dimlabels, opts)$/;"	f
dataroot	bumpcurl_dpca.m	/^        dataroot = 'C:\\Users\\Raeed\\data\\project-data';$/;"	v
dataroot	bumpcurl_dpca.m	/^        dataroot = '\/home\/raeed\/data\/project-data';$/;"	v
dataroot	bumpcurl_lda.m	/^        dataroot = 'C:\\Users\\Raeed\\data\\project-data';$/;"	v
dataroot	bumpcurl_lda.m	/^        dataroot = '\/data\/raeed\/project-data';$/;"	v
dataroot	bumpcurl_tensors.m	/^        dataroot = 'C:\\Users\\Raeed\\data\\project-data';$/;"	v
dataroot	bumpcurl_tensors.m	/^        dataroot = '\/data\/raeed\/project-data';$/;"	v
date	lib/neuron-table/makeNeuronTableStarter.m	/^        date = cell(tab_height,1);$/;"	v
date	lib/neuron-table/makeNeuronTableStarter.m	/^        date = repmat(date_temp(1),tab_height,1);$/;"	v
date	lib/neuron-table/makeNeuronTableStarter.m	/^        date = repmat({trial_data(1).date},tab_height,1);$/;"	v
date_temp	lib/neuron-table/makeNeuronTableStarter.m	/^    date_temp = regexp(cat(1,{trial_data.date_time}),'\\d*[\\\/-]\\d*[\\\/-]\\d*','match');$/;"	v
date_temp	lib/neuron-table/makeNeuronTableStarter.m	/^    date_temp = vertcat(date_temp{:});$/;"	v
db	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^db = diff(yrnge)\/(ncols-1);    % spacing between cosine bump peaks$/;"	v
dd	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
dds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        dds = [0; diff(ds)];$/;"	v
ddx	lib/curvature.m	/^ddx = diff(dx);$/;"	v
ddy	lib/curvature.m	/^ddy = diff(dy);$/;"	v
debug	lib/tensor_toolbox/maintenance/update_classlist.m	/^debug = params.Results.Debug;$/;"	v
debug	lib/tensor_toolbox/maintenance/update_copyright.m	/^debug = params.Results.Debug;$/;"	v
decay	lib/tensor_toolbox/gcp_opt.m	/^decay = params.Results.decay;$/;"	v
decimate_signals	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = decimate_signals(data,var_list,bin_size)$/;"	f
decoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    decoder = [decoder; D];$/;"	v
decoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^decoder = [];$/;"	v
defaultStream	lib/tensor_toolbox/create_guess.m	/^defaultStream = RandStream.getGlobalStream;$/;"	v
defaultStream	lib/tensor_toolbox/create_problem.m	/^defaultStream = RandStream.getGlobalStream;$/;"	v
defaultStream	lib/tensor_toolbox/create_problem_binary.m	/^defaultStream = RandStream.getGlobalStream;$/;"	v
defaultStream	lib/tensor_toolbox/gcp_opt.m	/^defaultStream = RandStream.getGlobalStream;$/;"	v
del	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
deleteChannels	lib/TrialData/util/openNSx_td.m	/^	deleteChannels = setdiff(channelThatWereRead, userRequestedChanRow) - min(userRequestedChanRow)/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = 1;$/;"	v
delete_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^    delete_artifacts = varargin{4};$/;"	v
delg	lib/tensor_toolbox/cp_apr.m	/^            delg = zeros(R, nSizeLBFGS);$/;"	v
delm	lib/tensor_toolbox/cp_apr.m	/^            delm = zeros(R, nSizeLBFGS);$/;"	v
dense_sample_mttkrp	lib/tensor_toolbox/cp_arls.m	/^function [V, Xsamp, Zsamp] = dense_sample_mttkrp(X,U,n,nsamplsq,mixinfo)$/;"	f
density	lib/tensor_toolbox/create_problem_binary.m	/^    density = 1\/r; $/;"	v
density	lib/tensor_toolbox/create_problem_binary.m	/^density = params.Results.density;$/;"	v
df	lib/TrialData/util/openNEV_td.m	/^            df   = typecast(ExtendedHeader(13:14),'int16');$/;"	v
dfn	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
dgnstc	lib/tensor_toolbox/tests/Test_Tensor.m	/^            dgnstc = sprintf('Failure for size=%s, entry=%s', szstr, substr);$/;"	v
diag_flips	lib/tensor_toolbox/cp_arls.m	/^    diag_flips = cell(N,1);$/;"	v
diag_flips	lib/tensor_toolbox/cp_arls.m	/^diag_flips = [];$/;"	v
dif	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dif = dif .\/ sqrt(2*XfullNN(:));$/;"	v
dif	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dif = options.X_trial(sub2ind([prod(dims(1:end-1)) dims(end)], (1:prod(dims(1:end-1)))', ind/;"	v
diff	lib/tensor_toolbox/doc/test_problems_doc.m	/^diff = norm(full(info.Soln) - info.Data)\/norm(full(info.Soln))$/;"	v
diff	lib/tensor_toolbox/doc/test_problems_doc.m	/^diff = norm(info1.Data - info2.Data)$/;"	v
diffnormsqr	lib/tensor_toolbox/hosvd.m	/^    diffnormsqr = collapse((X-full(T)).^2);$/;"	v
diffs	lib/tensor_toolbox/@ktensor/issymmetric.m	/^diffs = zeros(n,n);$/;"	v
diffs	lib/tensor_toolbox/@symktensor/fg.m	/^    diffs = avals - vals;$/;"	v
digserIndices	lib/TrialData/util/openNEV_td.m	/^digserIndices              = find(PacketIDs == digserPacketID);$/;"	v
digserPacketID	lib/TrialData/util/openNEV_td.m	/^digserPacketID = 0;$/;"	v
digserTimestamp	lib/TrialData/util/openNEV_td.m	/^digserTimestamp            = Timestamp(digserIndices);$/;"	v
dijk	lib/TrialData/util/lib/isomap/dijk.m	/^function D = dijk(A,s,t)$/;"	f
dijkstra	lib/TrialData/util/lib/isomap/dijkstra.m	/^function D = dijkstra( G , S )$/;"	f
dim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    dim = size(Xfull);$/;"	v
dim	lib/TrialData/util/circular_mean.m	/^  dim = 1;$/;"	v
dim	lib/matlab-colors/linspecer/linspecer.m	/^function varIn = dim(varIn,f)$/;"	f
dim	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^        dim = numel(sizk) + 1; $/;"	v
dim	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^dim = 2;$/;"	v
dim	lib/tensor_toolbox/tenzeros.m	/^    dim = varargin{1};$/;"	v
dimReduce	lib/TrialData/Tools/dimReduce.m	/^function [trial_data,info_out] = dimReduce(trial_data, params)$/;"	f
dimorder	lib/tensor_toolbox/@ktensor/datadisp.m	/^dimorder = setparam(opts,'dimorder',1:ndims(T));$/;"	v
dimorder	lib/tensor_toolbox/cp_als.m	/^dimorder = params.Results.dimorder;$/;"	v
dimorder	lib/tensor_toolbox/cp_arls.m	/^dimorder = params.Results.dimorder;$/;"	v
dimorder	lib/tensor_toolbox/cp_nmu.m	/^dimorder = setparam(opts,'dimorder',1:N);$/;"	v
dimorder	lib/tensor_toolbox/hosvd.m	/^dimorder = params.Results.dimorder;$/;"	v
dimorder	lib/tensor_toolbox/tucker_als.m	/^dimorder = params.Results.dimorder;$/;"	v
dimrest	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^dimrest = setdiff(1:length(dims), dimlist);$/;"	v
dims	lib/TrialData/Analysis/estimateDimensionality.m	/^dims = find(cumsum(e).\/(alpha*(1-cumsum(noise_eigen_prctile))) > 1,1,'first');$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    dims = size(options.X_trial);$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^dims = size(X);$/;"	v
dims	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    dims = size(data);$/;"	v
dims	lib/TrialData/util/lib/isomap/IsomapII.m	/^dims = options.dims; $/;"	v
dims	lib/TrialData/util/lib/isomap/IsomapII.m	/^dims = unique(min(dims,nl-1));    %% don't embed in more dimensions than landmarks-1$/;"	v
dims	lib/TrialData/util/lib/isomap/isomap.m	/^dims = options.dims; $/;"	v
dims	lib/tensor_toolbox/@ktensor/ttm.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@ktensor/ttm.m	/^    dims = varargin{1};$/;"	v
dims	lib/tensor_toolbox/@ktensor/ttv.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@sptensor/collapse.m	/^    dims = 1:ndims(t);$/;"	v
dims	lib/tensor_toolbox/@sptensor/collapse.m	/^dims = tt_dimscheck(dims,ndims(t));$/;"	v
dims	lib/tensor_toolbox/@sptensor/scale.m	/^dims = tt_dimscheck(dims,ndims(t));$/;"	v
dims	lib/tensor_toolbox/@sptensor/ttm.m	/^    dims = n;$/;"	v
dims	lib/tensor_toolbox/@sptensor/ttv.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@sumtensor/ttv.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@tensor/collapse.m	/^    dims = 1:ndims(X);$/;"	v
dims	lib/tensor_toolbox/@tensor/collapse.m	/^dims = tt_dimscheck(dims,ndims(X));$/;"	v
dims	lib/tensor_toolbox/@tensor/issymmetric.m	/^            dims = grps{i};$/;"	v
dims	lib/tensor_toolbox/@tensor/scale.m	/^dims = tt_dimscheck(dims,ndims(X));$/;"	v
dims	lib/tensor_toolbox/@tensor/symmetrize.m	/^            dims = grps{i};$/;"	v
dims	lib/tensor_toolbox/@tensor/ttm.m	/^    dims = n;$/;"	v
dims	lib/tensor_toolbox/@tensor/ttv.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@ttensor/ttm.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/@ttensor/ttm.m	/^    dims = varargin{1};$/;"	v
dims	lib/tensor_toolbox/@ttensor/ttv.m	/^    dims = [];$/;"	v
dims	lib/tensor_toolbox/cp_arls.m	/^dims = size(X);$/;"	v
dims	lib/tensor_toolbox/tt_dimscheck.m	/^    dims = 1:N;$/;"	v
dims	lib/tensor_toolbox/tt_dimscheck.m	/^    dims = setdiff(1:N, -dims);$/;"	v
dimsToPlot	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^dimsToPlot = 1:3;$/;"	v
dir	lib/neuron-table/getTuningCurves.m	/^dir = atan2(move_var(:,2),move_var(:,1));$/;"	v
dirArr	lib/neuron-table/getTDPDs.m	/^dirArr = zeros(size(response_var,2),1);$/;"	v
dirCIArr	lib/neuron-table/getTDPDs.m	/^dirCIArr = zeros(size(response_var,2),2);$/;"	v
dirCIDL	lib/neuron-table/irisPlot.m	/^dirCIDL = DL_pdData.velPDCI;$/;"	v
dirCIPM	lib/neuron-table/irisPlot.m	/^dirCIPM = PM_pdData.velPDCI;$/;"	v
dir_bins	lib/neuron-table/getTuningCurves.m	/^dir_bins = round(dir\/bin_spacing)*bin_spacing;$/;"	v
dir_colors	bumpcurl_tensors.m	/^            dir_colors = linspecer(length(unique([td_select.target_block])));$/;"	v
direction_flag	lib/TrialData/Tools/dupeAndShift.m	/^direction_flag = all(cellfun(@(x) all(x > 0), all_shifts));$/;"	v
dirs	bumpcurl_analysis.m	/^    dirs = repmat(cat(1,td_bl.bumpDir),2,1);$/;"	v
dirs	lib/TrialData/td_limblab/BBDemoScript.m	/^dirs = unique([trial_data.target_direction]);$/;"	v
dirs	lib/neuron-table/getTDPDs.m	/^        dirs = atan2(boot_coef(:,1+in_signal_idx*2),boot_coef(:,in_signal_idx*2));$/;"	v
disp	lib/tensor_toolbox/@ktensor/disp.m	/^function disp(t, name)$/;"	f
disp	lib/tensor_toolbox/@sptenmat/disp.m	/^function disp(a,name)$/;"	f
disp	lib/tensor_toolbox/@sptensor/disp.m	/^function disp(X,name)$/;"	f
disp	lib/tensor_toolbox/@sumtensor/disp.m	/^function disp(t,name)$/;"	f
disp	lib/tensor_toolbox/@symktensor/disp.m	/^function disp(t, name)$/;"	f
disp	lib/tensor_toolbox/@symtensor/disp.m	/^function disp(X, name) $/;"	f
disp	lib/tensor_toolbox/@tenmat/disp.m	/^function disp(t,name)$/;"	f
disp	lib/tensor_toolbox/@tensor/disp.m	/^function disp(X,name)$/;"	f
disp	lib/tensor_toolbox/@ttensor/disp.m	/^function disp(t,name)$/;"	f
dispLineWarn	lib/tensor_toolbox/cp_apr.m	/^dispLineWarn = (printInnerItn > 0);$/;"	v
displ	lib/TrialData/util/lib/isomap/IsomapII.m	/^displ = options.display; $/;"	v
displ	lib/TrialData/util/lib/isomap/isomap.m	/^displ = options.display; $/;"	v
display	lib/tensor_toolbox/@ktensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@sptenmat/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@sptensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@sumtensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@symktensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@symtensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@tenmat/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@tensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/@ttensor/display.m	/^function display(t)$/;"	f
display	lib/tensor_toolbox/eig_geap.m	/^display = p.Results.Display;$/;"	v
display	lib/tensor_toolbox/eig_sshopm.m	/^display = p.Results.Display;$/;"	v
display	lib/tensor_toolbox/eig_sshopmc.m	/^display = p.Results.Display;$/;"	v
distribution	lib/neuron-table/getTDPDs.m	/^distribution = 'Poisson';$/;"	v
dists	lib/neuron-table/comparePDClouds.m	/^    dists = sqrt(sum(centered_clust.^2,2));$/;"	v
dists	lib/neuron-table/getTuningHull.m	/^        dists = sqrt(sum(centered_clust.^2,2));$/;"	v
dists	lib/neuron-table/plotWeightClouds.m	/^    dists = sqrt(sum(centered_clust.^2,2));$/;"	v
div	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
divide	lib/tensor_toolbox/@sptensor/divide.m	/^function Y = divide(X,K,epsilon)$/;"	f
dividebym	lib/tensor_toolbox/eig_geap.m	/^    dividebym = true;$/;"	v
dl	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
dltnrmsqr	lib/tensor_toolbox/tenrandblk.m	/^dltnrmsqr = 1 - sum(bns);$/;"	v
dltpattern	lib/tensor_toolbox/tenrandblk.m	/^dltpattern = ones(gsz);$/;"	v
dnew	lib/tensor_toolbox/@tensor/ttsv.m	/^dnew = -n; % Number of modes in result$/;"	v
do_avg	lib/TrialData/Tools/binTD.m	/^            do_avg =  true;$/;"	v
do_avg	lib/TrialData/Tools/binTD.m	/^    do_avg = false;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^        do_boot = true;$/;"	v
do_boot	lib/TrialData/Tools/getTDidx.m	/^do_boot = false;$/;"	v
do_ci	lib/neuron-table/neuronAverage.m	/^do_ci = true;$/;"	v
do_dim_estimate	lib/TrialData/Analysis/getPotentSpace.m	/^do_dim_estimate    =  false;   % whether to attempt Machens method to estimate dimensionality$/;"	v
do_dpca_plot	lib/get_dpca_var.m	/^    do_dpca_plot = (num_boots==1);$/;"	v
do_eval_model	lib/neuron-table/getTDModelWeights.m	/^do_eval_model = false;$/;"	v
do_fft	lib/tensor_toolbox/cp_arls.m	/^do_fft = params.Results.mix;$/;"	v
do_fr_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_fr_check     =  true;$/;"	v
do_lasso	lib/TrialData/Analysis/getModel.m	/^do_lasso      =  false;$/;"	v
do_nanmean	lib/neuron-table/neuronAverage.m	/^do_nanmean = false;$/;"	v
do_norm	lib/TrialData/Analysis/pairwiseCorr.m	/^do_norm          =  false;$/;"	v
do_onset	lib/TrialData/td_limblab/getRWMovements.m	/^do_onset           =  true;$/;"	v
do_plot	lib/TrialData/Analysis/getNoiseCovar.m	/^do_plot         =  false;$/;"	v
do_plot	lib/TrialData/Analysis/runDPCA.m	/^do_plot        =  true;$/;"	v
do_plot	lib/TrialData/Tools/addCorrelatedNoise.m	/^do_plot         =  false;$/;"	v
do_plot	lib/neuron-table/getTDClassicalPDs.m	/^do_plot = false;$/;"	v
do_plot	lib/neuron-table/getTDPDs.m	/^do_plot = false;$/;"	v
do_print	lib/tensor_toolbox/cp_wopt.m	/^do_print = verbosity > 0;$/;"	v
do_shunt_check	lib/TrialData/Tools/removeBadNeurons.m	/^do_shunt_check  =  false;$/;"	v
do_smoothing	lib/TrialData/Tools/dimReduce.m	/^do_smoothing      = false;  % will smooth before dim reduction  (trial_data projections are unsm/;"	v
do_smoothing	lib/TrialData/Tools/smoothSignals.m	/^do_smoothing    =  true; % will just return trial_data if this is false$/;"	v
do_the_loading	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,extra_outs] = do_the_loading(filename,func_calls)$/;"	f
do_zeroing	lib/tensor_toolbox/cp_wopt.m	/^do_zeroing = ~params.Results.skip_zeroing;$/;"	v
dodijk_sparse	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void dodijk_sparse( $/;"	f	typeref:typename:void
dot_size	lib/plot_traces.m	/^    dot_size = 250;$/;"	v
dot_width	lib/TrialData/Plotting/visData.m	/^dot_width          =   3;        % standard width for dot markers$/;"	v
double	lib/tensor_toolbox/@ktensor/double.m	/^function A = double(X)$/;"	f
double	lib/tensor_toolbox/@sptenmat/double.m	/^function A = double(T)$/;"	f
double	lib/tensor_toolbox/@sptensor/double.m	/^function a = double(s)$/;"	f
double	lib/tensor_toolbox/@sumtensor/double.m	/^function A = double(T)$/;"	f
double	lib/tensor_toolbox/@symktensor/double.m	/^function A = double(X)$/;"	f
double	lib/tensor_toolbox/@tenmat/double.m	/^function a = double(t)$/;"	f
double	lib/tensor_toolbox/@tensor/double.m	/^function A = double(X)$/;"	f
double	lib/tensor_toolbox/@ttensor/double.m	/^function A = double(T)$/;"	f
download	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="download">Download<\/h3>$/;"	I
downsample_fac	lib/TrialData/util/process_lfp.m	/^downsample_fac    =  0;        % factor for decimate$/;"	v
dpca	lib/TrialData/td_limblab/td_dpca/dpca.m	/^function [W, V, whichMarg] = dpca(Xfull, numComps, varargin)$/;"	f
dpca_explainedVariance	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^function explVar = dpca_explainedVariance(Xfull, W, V, varargin)$/;"	f
dpca_marginalize	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function [YY, margNums] = dpca_marginalize(X, varargin)$/;"	f
dpca_plot	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^function dpca_plot(Xfull, W, V, plotFunction, varargin)$/;"	f
dpca_plot_fcn	lib/TrialData/Analysis/runDPCA.m	/^dpca_plot_fcn  =  @dpca_plot_td;$/;"	v
dpca_plot_td	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^function dpca_plot_td(data, time, yspan, explVar, compNum, events, signif, marg)$/;"	f
drem	lib/tensor_toolbox/@tensor/ttsv.m	/^drem = d - dnew; % Number of modes being multiplied out$/;"	v
ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        ds = [0; diff(s)];$/;"	v
dstr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            dstr = sprintf('Failure sz=%s, idx=%d, sub=%s\\n', szstr, idx, substr);$/;"	v
dt	lib/TrialData/td_limblab/getTargetDirection.m	/^dt              =  0.01; % s$/;"	v
dt	lib/TrialData/td_limblab/parseFileByTrial.m	/^    dt = round(mode(diff(data.t)),7);$/;"	v
dt	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
dupeAndShift	lib/TrialData/Tools/dupeAndShift.m	/^function trial_data = dupeAndShift(trial_data,varargin)$/;"	f
dx	lib/curvature.m	/^dx = diff(x);$/;"	v
dx	lib/curvature.m	/^dx = dx(2:end);$/;"	v
dy	lib/curvature.m	/^dy = diff(y);$/;"	v
dy	lib/curvature.m	/^dy = dy(2:end);$/;"	v
e	lib/TrialData/Analysis/estimateDimensionality.m	/^e = pca_info.eigen\/sum(pca_info.eigen);$/;"	v
e	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    e     = sort(eig(cX), 'descend');$/;"	v
e	lib/tensor_toolbox/@ktensor/end.m	/^  e = ndims(X);$/;"	v
e	lib/tensor_toolbox/@ktensor/end.m	/^  e = size(X,k);$/;"	v
e	lib/tensor_toolbox/@sptenmat/end.m	/^e = size(X,k);$/;"	v
e	lib/tensor_toolbox/@sptensor/end.m	/^        e = X.size(k);$/;"	v
e	lib/tensor_toolbox/@sptensor/end.m	/^        e = prod(X.size);$/;"	v
e	lib/tensor_toolbox/@symktensor/end.m	/^  e = ndims(X);$/;"	v
e	lib/tensor_toolbox/@symktensor/end.m	/^  e = size(X,k);$/;"	v
e	lib/tensor_toolbox/@tenmat/end.m	/^e = size(X.data,k);$/;"	v
e	lib/tensor_toolbox/@tensor/end.m	/^    e = X.size(k); %For subscripted indexing$/;"	v
e	lib/tensor_toolbox/@tensor/end.m	/^    e = prod(size(X)); %if X is a vector, this equals X.size(1) so works$/;"	v
e	lib/tensor_toolbox/@ttensor/end.m	/^e = ndims(X);$/;"	v
e	lib/tensor_toolbox/eig_sshopm.m	/^e = eig(Y);$/;"	v
e_vec	lib/tensor_toolbox/cp_apr.m	/^e_vec = ones(1,R);$/;"	v
eig_geap	lib/tensor_toolbox/eig_geap.m	/^function [varargout] = eig_geap(A,B,varargin)$/;"	f
eig_sshopm	lib/tensor_toolbox/eig_sshopm.m	/^function [lambda,x,flag,its,x0] = eig_sshopm(A,varargin)$/;"	f
eig_sshopmc	lib/tensor_toolbox/eig_sshopmc.m	/^function [lambda,x,flag,its,x0,trace] = eig_sshopmc(A,varargin)$/;"	f
eigen	lib/TrialData/Tools/dimReduce.m	/^            eigen = [];$/;"	v
eigen_in	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_in = pca_info_in.eigen;$/;"	v
eigen_out	lib/TrialData/Analysis/getPotentSpace.m	/^eigen_out = pca_info_out.eigen;$/;"	v
eigenv_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^eigenv_noise        = cell2mat(noise_eigen);$/;"	v
eigsopts	lib/tensor_toolbox/@ktensor/nvecs.m	/^    eigsopts = opts.eigsopts;$/;"	v
eigsopts	lib/tensor_toolbox/@sptensor/nvecs.m	/^    eigsopts = opts.eigsopts;$/;"	v
eigsopts	lib/tensor_toolbox/@tensor/nvecs.m	/^    eigsopts = opts.eigsopts;$/;"	v
eigsopts	lib/tensor_toolbox/@ttensor/nvecs.m	/^    eigsopts = opts.eigsopts;$/;"	v
eigsum	lib/tensor_toolbox/hosvd.m	/^        eigsum = cumsum(eigvec,'reverse');$/;"	v
eigsumthresh	lib/tensor_toolbox/hosvd.m	/^eigsumthresh = tol.^2 * normxsqr \/ d;$/;"	v
elecDigiFactors	lib/TrialData/util/openNEV_td.m	/^        elecDigiFactors = double(1000.\/[NEV.ElectrodesInfo(NEV.Data.Spikes.Electrode).DigitalFa/;"	v
elecNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            elecNames = unique([sortedUnits.chan], 'stable');$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^            elecReading = 1;$/;"	v
elecReading	lib/TrialData/util/openNSx_td.m	/^elecReading     = 0;$/;"	v
elecs	lib/TrialData/Tools/stripSpikeSorting.m	/^    elecs = unique(sg(:,1));$/;"	v
elem_mean	lib/tensor_toolbox/cp_arls.m	/^    elem_mean = mean((Xfit_vals - Pfit_vals).^2);$/;"	v
elemfun	lib/tensor_toolbox/@sptensor/elemfun.m	/^function a = elemfun(a,fun)$/;"	f
em	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
emg_HPF_cutoff	lib/TrialData/util/process_emg.m	/^emg_HPF_cutoff  =  [10 900];    % for EMG butterworth filter$/;"	v
emg_LPF_cutoff	lib/TrialData/util/process_emg.m	/^emg_LPF_cutoff  =  50;    % for EMG butterworth filter$/;"	v
emg_data	lib/TrialData/util/process_emg.m	/^emg_data = data;$/;"	v
emg_idx	lib/TrialData/Tools/reorderTDfields.m	/^    emg_idx = cellfun(@(x) ~isempty(x),strfind(fn_cont,'emg'));$/;"	v
emg_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^    emg_list = cds.emg.Properties.VariableNames;$/;"	v
emg_n_poles	lib/TrialData/util/process_emg.m	/^emg_n_poles     =  4;     % for EMG butterworth filter$/;"	v
emptyChar	lib/TrialData/util/openNEV_td.m	/^                emptyChar = find (NEV.ObjTrackInfo(IDX).TrackableName == 0, 1);$/;"	v
encoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    encoder = [encoder P];    $/;"	v
encoder	lib/TrialData/td_limblab/td_dpca/dpca.m	/^encoder = [];$/;"	v
end	lib/tensor_toolbox/@ktensor/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@sptenmat/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@sptensor/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@symktensor/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@tenmat/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@tensor/end.m	/^function e = end(X,k,n)$/;"	f
end	lib/tensor_toolbox/@ttensor/end.m	/^function e = end(X,k,n)$/;"	f
end_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^end_idx          =  'idx_trial_end';$/;"	v
end_name	lib/TrialData/Tools/splitTD.m	/^end_name           =  'idx_trial_end';$/;"	v
end_name	lib/TrialData/td_limblab/getRWMovements.m	/^end_name           =  'idx_trial_end';$/;"	v
end_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        end_point = size(s,1);$/;"	v
end_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        end_point = trial_data(trial).(end_idx);$/;"	v
endloc	lib/tensor_toolbox/@ktensor/update.m	/^        endloc = loc + r - 1;$/;"	v
endloc	lib/tensor_toolbox/@ktensor/update.m	/^        endloc = loc + sz(k)*r - 1;$/;"	v
endpt	lib/tensor_toolbox/@ktensor/fixsigns.m	/^            endpt = breakpt + 1;$/;"	v
endpt	lib/tensor_toolbox/@ktensor/fixsigns.m	/^            endpt = breakpt - 1;$/;"	v
endpt	lib/tensor_toolbox/@ktensor/fixsigns.m	/^        endpt = breakpt;$/;"	v
entries	lib/tensor_toolbox/@ktensor/datadisp.m	/^entries = min([maxentries, length(score)]);$/;"	v
entry	lib/tensor_toolbox/@symktensor/entry.m	/^function value = entry(model,I)$/;"	f
epciters	lib/tensor_toolbox/gcp_opt.m	/^epciters = params.Results.epciters;$/;"	v
epoch_colors	exploreData.m	/^epoch_colors = colors(1:length(epoch_names),:);$/;"	v
epoch_colors	plotBumpcurlTuning.m	/^epoch_colors = [bl_color(bl_idx,:);...$/;"	v
epoch_list	exploreData.m	/^epoch_list = {'BL','AD1','AD2','AD3','AD4','WO1','WO2','WO3'};$/;"	v
epoch_list	plotBumpcurlTuning.m	/^epoch_list = {'BL','AD1','AD2','AD3','AD4','WO1','WO2','WO3'};$/;"	v
epoch_names	exploreData.m	/^epoch_names = {'AD','BL','WO'};$/;"	v
epoch_names	exploreData.m	/^epoch_names = {'BL','AD','WO'};$/;"	v
epoch_names	lib/animateBumpcurlTrials.m	/^epoch_names = {'BL','AD','WO'};$/;"	v
epochs	exploreData.m	/^epochs = {'BL','AD','WO'};$/;"	v
epochsize	lib/tensor_toolbox/cp_arls.m	/^epochsize = params.Results.epoch;$/;"	v
epsActSet	lib/tensor_toolbox/cp_apr.m	/^epsActSet               = params.Results.epsActive;$/;"	v
epsDivZero	lib/tensor_toolbox/cp_apr.m	/^epsDivZero              = params.Results.epsDivZero;$/;"	v
epsilon	lib/TrialData/util/lib/isomap/IsomapII.m	/^     epsilon = n_size; $/;"	v
epsilon	lib/TrialData/util/lib/isomap/isomap.m	/^     epsilon = n_size; $/;"	v
epsilon	lib/tensor_toolbox/cp_apr.m	/^epsilon       = params.Results.epsDivZero;$/;"	v
epsilon	lib/tensor_toolbox/cp_nmu.m	/^epsilon = 1e-12;  % Small number to protect against round-off error$/;"	v
epsilon	lib/tensor_toolbox/gcp_opt.m	/^epsilon = params.Results.epsilon;$/;"	v
eq	lib/tensor_toolbox/@sptensor/eq.m	/^function z = eq(x,y)$/;"	f
eq	lib/tensor_toolbox/@symtensor/eq.m	/^function Z = eq(X,Y)$/;"	f
eq	lib/tensor_toolbox/@tensor/eq.m	/^function Z = eq(X,Y)$/;"	f
err	lib/TrialData/Tools/removeBadTrials.m	/^                err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^            err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^        err = true;$/;"	v
err	lib/TrialData/Tools/removeBadTrials.m	/^    err = false;$/;"	v
err	lib/TrialData/util/predict_kalman.m	/^    err = OBSERVATIONS(t,:)' - C * STATEpred; % error (innovation)$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^            error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^        error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/convertDataToTD.m	/^error_flag = false;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^            error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^    error_flag = true;$/;"	v
error_flag	lib/TrialData/DataProcessing/processNEV.m	/^error_flag = false;$/;"	v
estParams	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    estParams       = ws.estParams;$/;"	v
estParams	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  estParams = [];$/;"	v
estimateBumpFromPCA	lib/estimateBumpFromPCA.m	/^function td = estimateBumpFromPCA(trial_data)$/;"	f
estimateDimensionality	lib/TrialData/Analysis/estimateDimensionality.m	/^function [dims,noise_eigen_prctile] = estimateDimensionality(trial_data,params)$/;"	f
estr	lib/tensor_toolbox/cp_sym.m	/^        estr = sprintf('snseti (''%s'', %g);', strrep(n,'_',' '), options.(n));$/;"	v
estr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            estr = ['X(' substr ') = tensor(@ones,newsz);'];$/;"	v
estr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            estr = sprintf('X( %s ) = 1;', substr);$/;"	v
eta	lib/tensor_toolbox/create_problem.m	/^eta = sum(P.lambda);    $/;"	v
evalModel	lib/TrialData/Analysis/evalModel.m	/^function metric = evalModel(trial_data,params)$/;"	f
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric      =  '';$/;"	v
eval_metric	lib/TrialData/Analysis/evalModel.m	/^eval_metric    = varargin{end-1};$/;"	v
eval_metric	lib/neuron-table/getTDModelWeights.m	/^eval_metric = 'pr2';$/;"	v
eval_params	bumpcurl_analysis.m	/^    eval_params = ad_model;$/;"	v
eval_params	bumpcurl_analysis.m	/^    eval_params = bl_model;$/;"	v
eval_params	lib/neuron-table/getTDModelWeights.m	/^    eval_params = temp_info;$/;"	v
event_db	lib/TrialData/Plotting/visData.m	/^event_db          =   { ...$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list     =  {};$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list = fieldnames(cds_bin.trials);$/;"	v
event_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^event_list = union({'startTime';'endTime'},event_list);$/;"	v
event_rows	lib/TrialData/Plotting/visData.m	/^event_rows         =   1;        % how many rows for event markers$/;"	v
event_symbol	lib/TrialData/Plotting/visData.m	/^event_symbol       =   'o';      % standard symbol for event markers$/;"	v
events	lib/TrialData/Plotting/visData.m	/^    events = events(idx); clear idx;$/;"	v
events	lib/TrialData/Plotting/visData.m	/^events = fn(cellfun(@(x) ~isempty(regexp(x,'idx_','ONCE')),fn));$/;"	v
exclude_units	lib/TrialData/DataProcessing/processNEV.m	/^exclude_units    = 255; % sort id of units to exclude$/;"	v
exclude_units	lib/TrialData/td_limblab/parseFileByTrial.m	/^exclude_units  =  [0,255];$/;"	v
exitflag	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^exitflag = output.ExitFlag$/;"	v
exitflag	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^exitflag = output.ExitFlag$/;"	v
exitmsg	lib/tensor_toolbox/doc/cp_opt_doc.m	/^exitmsg = output.ExitMsg$/;"	v
exitmsg	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^exitmsg = output.ExitMsg$/;"	v
exp	lib/tensor_toolbox/@tensor/exp.m	/^function t = exp(t)$/;"	f
exp_nonzeros	lib/tensor_toolbox/gcp_opt.m	/^            exp_nonzeros = gsamp * nnonzeros \/ tsz;$/;"	v
exp_zeros	lib/tensor_toolbox/gcp_opt.m	/^            exp_zeros = gsamp * nzeros \/ tsz;$/;"	v
explVar	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        explVar = sum(Z.^2,2);$/;"	v
expl_var	lib/TrialData/Analysis/runDPCA.m	/^expl_var            = dpca_explainedVariance(firing_rates, W, V, ...$/;"	v
exploreData	exploreData.m	/^function exploreData(trial_data)$/;"	f
export_array	lib/tensor_toolbox/export_data.m	/^function export_array(fid, data)$/;"	f
export_data	lib/tensor_toolbox/export_data.m	/^function export_data(A, fname)$/;"	f
export_factor	lib/tensor_toolbox/export_data.m	/^function export_factor(fid, data)$/;"	f
export_lambda	lib/tensor_toolbox/export_data.m	/^function export_lambda(fid, data)$/;"	f
export_rank	lib/tensor_toolbox/export_data.m	/^function export_rank(fid, data)$/;"	f
export_size	lib/tensor_toolbox/export_data.m	/^function export_size(fid, sz)$/;"	f
export_sparse_array	lib/tensor_toolbox/export_data.m	/^function export_sparse_array(fid, A)$/;"	f
export_sparse_size	lib/tensor_toolbox/export_data.m	/^function export_sparse_size(fid, A)$/;"	f
extraOpts	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        extraOpts = {extraOpts{:}, 'minVarFrac', -Inf};$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extraOpts	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^extraOpts     = assignopts(who, varargin);$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^    extra_bins = abs(extra_bins);$/;"	v
extra_bins	lib/TrialData/Tools/splitTD.m	/^extra_bins         =  [0 0];$/;"	v
extra_bins	lib/TrialData/td_limblab/getRWMovements.m	/^extra_bins         =  [0 0];$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^    extra_outs = cell(1,length(func_calls));$/;"	v
extra_outs	lib/TrialData/DataProcessing/loadTDfiles.m	/^extra_outs = cell(length(filenames),length(varargin));$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time = [0 0];$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time = round(extra_time\/bin_size); % convert to number of bins$/;"	v
extra_time	lib/TrialData/td_limblab/parseFileByTrial.m	/^extra_time     =  [0.2, 0.2];$/;"	v
extra_time_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^    extra_time_events = fn( strcmpi(trials.Properties.VariableUnits,'s') & ~time_event_exc_idx )/;"	v
extra_time_temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^extra_time_temp = extra_time;$/;"	v
extract	lib/tensor_toolbox/@ktensor/extract.m	/^function new_X = extract(X,idx)$/;"	f
extract	lib/tensor_toolbox/@sptensor/private/extract.m	/^function a = extract(t,srchsubs)$/;"	f
extract_ns5_spikes	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^function out = extract_ns5_spikes(file_data,params)$/;"	f
extrap_idx	lib/TrialData/util/resample_signals.m	/^extrap_idx = isnan(ty);$/;"	v
f	lib/TrialData/DataProcessing/loadTDfiles.m	/^f = funcCall{1};$/;"	v
f	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^f = gcf;$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^          f = f + dX(i,j) * log(dM(i,j));$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^    f = 0;$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^    f = f - sum(sum(M.U{1}));$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^    f = sum(X.vals .* log(sum(A,2))) - sum(sum(M.U{1}));$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^    f = sum(sum(double(tenmat(X,1)) .* log(double(tenmat(M,1))))) - sum(sum(M.U{1}));$/;"	v
f	lib/tensor_toolbox/cp_apr.m	/^    f = term1 + term2;$/;"	v
f	lib/tensor_toolbox/cp_wopt.m	/^f = 0.5 * normZsqr - Zvals'*Bvals + 0.5 * sum(Bvals.^2);$/;"	v
f	lib/tensor_toolbox/cp_wopt.m	/^f = 0.5 * normZsqr - innerprod(Z,B) + 0.5 * norm(B)^2;$/;"	v
f	lib/tensor_toolbox/tt_cp_fg.m	/^f = 0.5 * f_1 - f_2 + 0.5 * f_3;$/;"	v
f_1	lib/tensor_toolbox/cp_apr.m	/^               f_1 = f_new;$/;"	v
f_1	lib/tensor_toolbox/cp_apr.m	/^        f_1 = f_old;$/;"	v
f_1	lib/tensor_toolbox/tt_cp_fg.m	/^    f_1 = Znormsqr;$/;"	v
f_1	lib/tensor_toolbox/tt_cp_fg.m	/^    f_1 = norm(Z)^2;$/;"	v
f_2	lib/tensor_toolbox/tt_cp_fg.m	/^f_2 = sum(V(:));$/;"	v
f_3	lib/tensor_toolbox/tt_cp_fg.m	/^f_3 = sum(W(:));$/;"	v
f_new	lib/tensor_toolbox/cp_apr.m	/^            f_new = -1 * tt_loglikelihood_row(isSparse, x_row, m_new, Pi);$/;"	v
f_new	lib/tensor_toolbox/cp_apr.m	/^            f_new = Inf;$/;"	v
f_new	lib/tensor_toolbox/cp_apr.m	/^        f_new = -1 * tt_loglikelihood_row(isSparse, x_row, m_new, Pi);$/;"	v
f_old	lib/tensor_toolbox/cp_apr.m	/^    f_old = -1 * tt_loglikelihood_row(isSparse, x_row, m_old, Pi);$/;"	v
fa_orthogonalize	lib/TrialData/Analysis/getPotentSpace.m	/^fa_orthogonalize   =  true;$/;"	v
fa_orthogonalize	lib/TrialData/Tools/dimReduce.m	/^fa_orthogonalize  = true;   % whether to orthogonalize the projections$/;"	v
fa_rotate	lib/TrialData/Tools/dimReduce.m	/^fa_rotate         = 'none'; % rotation  to apply$/;"	v
fac	lib/tensor_toolbox/import_data.m	/^        fac = reshape(fac_data, fliplr(fac_sz))';$/;"	v
fac_data	lib/tensor_toolbox/import_data.m	/^        fac_data = import_array(fid, prod(fac_sz));$/;"	v
fac_sz	lib/tensor_toolbox/import_data.m	/^        fac_sz = import_size(fid);$/;"	v
fac_type	lib/tensor_toolbox/import_data.m	/^        fac_type = import_type(fid);$/;"	v
factorRange	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^factorRange = paramRange.^(1\/nd);$/;"	v
factor_generator	lib/tensor_toolbox/doc/test_problems_doc.m	/^factor_generator = @(m,n) 100*rand(m,n);$/;"	v
factor_idx	lib/tensor_toolbox/cp_arls.m	/^factor_idx = tensor_idx(:,[1:n-1,n+1:D]);$/;"	v
factor_match_score	lib/tensor_toolbox/doc/cp_apr_doc.m	/^factor_match_score = score(M, M_true, 'greedy', true)$/;"	v
factr	lib/tensor_toolbox/gcp_opt.m	/^factr = params.Results.factr;$/;"	v
failed_epoch	lib/tensor_toolbox/gcp_opt.m	/^        failed_epoch = fest > fest_prev;$/;"	v
fake_parula	lib/matlab-colors/PythonColors/Colormaps/fake_parula.m	/^function cm_data=fake_parula(m)$/;"	f
fastfa	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^function [estParams, LL] = fastfa(X, zDim, varargin)$/;"	f
fcn	lib/tensor_toolbox/gcp_opt.m	/^    fcn = @(x) tt_gcp_fg(update(M0,1:nd,x), X, fh, gh, W, true, true, true);$/;"	v
fcnt	lib/tensor_toolbox/create_problem_binary.m	/^        fcnt = prod(cnts);$/;"	v
fdiv	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^fdiv = floor(linspace(1, N+1, numFolds+1));$/;"	v
fest	lib/tensor_toolbox/gcp_opt.m	/^            fest = fest_prev;$/;"	v
fest	lib/tensor_toolbox/gcp_opt.m	/^        fest = tt_gcp_fg_est(M,fh,gh,fsubs,fvals,fwgts,true,false,false,false);$/;"	v
fest	lib/tensor_toolbox/gcp_opt.m	/^    fest = tt_gcp_fg_est(M0,fh,gh,fsubs,fvals,fwgts,true,false,false,false);$/;"	v
fest_prev	lib/tensor_toolbox/gcp_opt.m	/^            fest_prev = fest;$/;"	v
fest_prev	lib/tensor_toolbox/gcp_opt.m	/^    fest_prev = fest;               % Corresponding function value$/;"	v
fest_trace	lib/tensor_toolbox/gcp_opt.m	/^    fest_trace = zeros(maxiters+1,1);$/;"	v
festtol	lib/tensor_toolbox/gcp_opt.m	/^festtol = params.Results.festtol;$/;"	v
festtol_test	lib/tensor_toolbox/gcp_opt.m	/^        festtol_test = fest < festtol;$/;"	v
fext	lib/TrialData/util/openNSx_td.m	/^    fext = fname(end-3:end);$/;"	v
ff	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ff = @(x,c,dc)(cos(max(-pi,min(pi,(x-c)*pi\/dc\/2)))+1)\/2; % raised cosine basis vector$/;"	v
fflag	lib/tensor_toolbox/cp_wopt.m	/^    fflag = ~isequal(funtype,'sparse_lowmem');$/;"	v
fft_step	lib/TrialData/util/process_lfp.m	/^fft_step          =  0.01;     % in seconds (should be bin size)$/;"	v
fft_win_fun	lib/TrialData/util/process_lfp.m	/^fft_win_fun       =  @hamming; % windowing function handle$/;"	v
fft_window_size	lib/TrialData/util/process_lfp.m	/^fft_window_size   =  2048;     % in samples$/;"	v
fg	lib/tensor_toolbox/@symktensor/fg.m	/^function [F,G] = fg(Model,Data)$/;"	f
fg_setup	lib/tensor_toolbox/@symktensor/fg_setup.m	/^function data = fg_setup(Model, A, varargin)$/;"	f
fg_wrapper	lib/tensor_toolbox/cp_sym.m	/^function [f,g] = fg_wrapper(x,data)$/;"	f
fgfh	lib/tensor_toolbox/create_problem.m	/^fgfh = get_generator(params.Factor_Generator);$/;"	v
fgopts	lib/tensor_toolbox/@symktensor/fg.m	/^fgopts = Data.fgopts;$/;"	v
fgopts	lib/tensor_toolbox/@symktensor/fg_setup.m	/^fgopts = params.Results;$/;"	v
fh	lib/TrialData/DataProcessing/loadTDfiles.m	/^fh = functions(f);$/;"	v
fh	lib/tensor_toolbox/@ktensor/ktensor.m	/^    fh = varargin{1};$/;"	v
fh	lib/tensor_toolbox/@sptensor/sptensor.m	/^    fh = varargin{1};$/;"	v
fh	lib/tensor_toolbox/@tensor/tensor.m	/^    fh = varargin{1};$/;"	v
fh	lib/tensor_toolbox/create_problem.m	/^        fh = @rand;$/;"	v
fh	lib/tensor_toolbox/create_problem.m	/^        fh = @rand_column_stochastic;$/;"	v
fh	lib/tensor_toolbox/create_problem.m	/^        fh = @rand_orth_mat;$/;"	v
fh	lib/tensor_toolbox/create_problem.m	/^        fh = @randn;$/;"	v
fh	lib/tensor_toolbox/create_problem.m	/^    fh = x;$/;"	v
fh	lib/tensor_toolbox/gcp_opt.m	/^fh = params.Results.func;$/;"	v
fh	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            fh = @(x) x + 1;$/;"	v
fh	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            fh = @eq;$/;"	v
fh	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            fh = @max;$/;"	v
fh	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            fh = @plus;$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) (m-x).^2;$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) 2*log(m+1e-10) + (pi\/4)*(x.\/(m+1e-10)).^2;$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) exp(m) - x.*m;$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) log(exp(m) + 1) - x .* m;$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) log(m+1) - x.*log(m + 1e-10);$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) m - x.*log(m + 1e-10);$/;"	v
fh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        fh = @(x,m) x.\/(m+1e-10) + log(m+1e-10);$/;"	v
fhandle	lib/tensor_toolbox/cp_opt.m	/^            fhandle = @lbfgs;$/;"	v
fhandle	lib/tensor_toolbox/cp_opt.m	/^            fhandle = @ncg;$/;"	v
fhandle	lib/tensor_toolbox/cp_opt.m	/^            fhandle = @tn;$/;"	v
fhandle	lib/tensor_toolbox/cp_sym.m	/^fhandle = @(x) fg_wrapper(x,data);$/;"	v
fid	lib/tensor_toolbox/cp_sym.m	/^        fid = fopen('snoptspecs.txt','w');$/;"	v
fid	lib/tensor_toolbox/cp_sym.m	/^        fid = fopen('snoptwrapper.m','w');$/;"	v
fid	lib/tensor_toolbox/export_data.m	/^fid = fopen(fname,'w');$/;"	v
fid	lib/tensor_toolbox/import_data.m	/^fid = fopen(fname,'r');$/;"	v
fidmain	lib/tensor_toolbox/maintenance/create_topcontents.m	/^fidmain = fopen('..\/Contents.m','w');$/;"	v
fidnew	lib/tensor_toolbox/maintenance/update_classlist.m	/^    fidnew = fopen(fnametmp, 'w');$/;"	v
fidnew	lib/tensor_toolbox/maintenance/update_copyright.m	/^fidnew = fopen(fnametmp, 'w');$/;"	v
fidold	lib/tensor_toolbox/maintenance/update_classlist.m	/^    fidold = fopen(fname, 'r');$/;"	v
fidold	lib/tensor_toolbox/maintenance/update_copyright.m	/^fidold = fopen(fname, 'r');$/;"	v
field_extra	lib/TrialData/Tools/addCorrelatedNoise.m	/^field_extra     =  {'_noisy'};$/;"	v
field_extra	lib/TrialData/Tools/addCorrelatedNoise.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/addFiringRates.m	/^field_extra   =  {'_FR'};$/;"	v
field_extra	lib/TrialData/Tools/addFiringRates.m	/^field_extra  = check_field_extra(field_extra,array);$/;"	v
field_extra	lib/TrialData/Tools/centerSignals.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/centerSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/convBasisFunc.m	/^field_extra   =  {'_rcb'};   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/convBasisFunc.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/dupeAndShift.m	/^field_extra  =  '_shift';$/;"	v
field_extra	lib/TrialData/Tools/dupeAndShift.m	/^field_extra =  check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/getEnvelope.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/getEnvelope.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^    field_extra =  params.norm_name;$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^field_extra  =  '_norm';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/getNorm.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/smoothSignals.m	/^field_extra     =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/smoothSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/softNormalize.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/softNormalize.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/sqrtTransform.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/sqrtTransform.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/Tools/zscoreSignals.m	/^field_extra  =  '';   % if empty, defaults to input field name(s)$/;"	v
field_extra	lib/TrialData/Tools/zscoreSignals.m	/^field_extra  = check_field_extra(field_extra,signals);$/;"	v
field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^        field_extra = repmat(field_extra,1,size(signals,1));$/;"	v
field_extra	lib/TrialData/util/subfcn/check_field_extra.m	/^    field_extra = repmat({''},1,size(signals,1));$/;"	v
fieldname	lib/tensor_toolbox/@symtensor/subsref.m	/^        fieldname = S(1).subs;$/;"	v
fieldname	lib/tensor_toolbox/@tensor/subsref.m	/^        fieldname = s(1).subs;$/;"	v
fields	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fields = fieldnames(params.meta);$/;"	v
fields	lib/TrialData/td_limblab/parseFileByTrial.m	/^        fields = fieldnames(params.meta);$/;"	v
fields	lib/neuron-table/makeNeuronTableStarter.m	/^    fields = fieldnames(params.meta);$/;"	v
fieldset	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
fileFullPath	lib/TrialData/util/openNEV_td.m	/^                fileFullPath = varargin{i};$/;"	v
fileFullPath	lib/TrialData/util/openNEV_td.m	/^    fileFullPath = [pathName fileName];$/;"	v
file_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^        file_data = which_routine(which_file,signal_info{iFile});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        file_data_temp = rmfield(file_data_temp,{'cont_data','cont_labels'});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        file_data_temp = rmfield(file_data_temp,{'event_data','event_labels'});$/;"	v
file_data_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^            file_data_temp = file_data;$/;"	v
file_info	bumpcurl_dpca.m	/^    file_info = dir(fullfile(dataroot,'limblab','s1-adapt','td-library','*CO*.mat'));$/;"	v
file_info	bumpcurl_lda.m	/^    file_info = dir(fullfile(dataroot,'limblab','s1-adapt','td-library','*CO*.mat'));$/;"	v
file_info	bumpcurl_tensors.m	/^    file_info = dir(fullfile(dataroot,'limblab','s1-adapt','td-library','*CO*.mat'));$/;"	v
file_results	bumpcurl_lda.m	/^    file_results = cell(length(trial_data_cell),1);$/;"	v
file_types	lib/TrialData/DataProcessing/convertDataToTD.m	/^file_types = unique({sig_data.type});$/;"	v
filenames	bumpcurl_dpca.m	/^    filenames = horzcat({file_info.name})';$/;"	v
filenames	bumpcurl_lda.m	/^    filenames = horzcat({file_info.name})';$/;"	v
filenames	bumpcurl_tensors.m	/^    filenames = horzcat({file_info.name})';$/;"	v
filetic	bumpcurl_lda.m	/^    filetic = tic;$/;"	v
filetic	lib/get_dpca_var.m	/^    filetic = tic;$/;"	v
filt_high_freq	lib/TrialData/util/process_lfp.m	/^filt_high_freq    =  true;     % apply LPF at highest freq_band$/;"	v
filt_line_noise	lib/TrialData/util/process_lfp.m	/^filt_line_noise   =  true;     % whether to filter line noise$/;"	v
filt_order	lib/TrialData/Tools/getEnvelope.m	/^filt_order   =  4;$/;"	v
filt_poles	lib/TrialData/util/process_lfp.m	/^filt_poles        =  2;        % for butterworth filter$/;"	v
filter_tuning	lib/neuron-table/comparePDClouds.m	/^filter_tuning = []; % filter by cloud width in one or both of the tables (should be either empty/;"	v
filter_tuning	lib/neuron-table/plotWeightClouds.m	/^filter_tuning = true; % filter by cloud width in one or both of the tables (should be either emp/;"	v
find	lib/tensor_toolbox/@sptensor/find.m	/^function [subs,vals] = find(t)$/;"	f
find	lib/tensor_toolbox/@tensor/find.m	/^function [subs,vals] = find(t)$/;"	f
firing_rates	lib/TrialData/Analysis/runDPCA.m	/^firing_rates = loops_for_fr([],[],{},trial_data,signals,max_trial_num,conditions{:});$/;"	v
firing_rates	lib/TrialData/Analysis/runDPCA.m	/^firing_rates = permute(firing_rates,[1:2,2+fliplr(1:length(conditions))]);$/;"	v
first_factor_matrix	lib/tensor_toolbox/doc/test_problems_doc.m	/^first_factor_matrix = info.Soln.U{1}$/;"	v
fit	lib/tensor_toolbox/cp_als.m	/^            fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_als.m	/^            fit = norm(P)^2 - 2 * iprod;$/;"	v
fit	lib/tensor_toolbox/cp_als.m	/^        fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_als.m	/^        fit = norm(P)^2 - 2 * innerprod(X,P);$/;"	v
fit	lib/tensor_toolbox/cp_als.m	/^fit = 0;$/;"	v
fit	lib/tensor_toolbox/cp_apr.m	/^    fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_apr.m	/^    fit = 1 - (normresidual \/ normX);$/;"	v
fit	lib/tensor_toolbox/cp_arls.m	/^    fit = 1 -  normDiff \/ normX;$/;"	v
fit	lib/tensor_toolbox/cp_arls.m	/^    fit = 1 - (normresidual \/ normX);%fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_arls.m	/^    fit = NaN;$/;"	v
fit	lib/tensor_toolbox/cp_nmu.m	/^    fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_nmu.m	/^  fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/cp_nmu.m	/^fit = 0;$/;"	v
fit	lib/tensor_toolbox/doc/cp_opt_doc.m	/^fit = output.Fit$/;"	v
fit	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^fit = output.Fit$/;"	v
fit	lib/tensor_toolbox/tucker_als.m	/^    fit = 1 - (normresidual \/ normX); %fraction explained by model$/;"	v
fit	lib/tensor_toolbox/tucker_als.m	/^fit = 0;$/;"	v
fit	lib/tensor_toolbox/tucker_sym.m	/^    fit = norm(X-Xold)\/norm(X);$/;"	v
fit_bl_ref_curve	lib/TrialData/td_limblab/getLearningMetrics.m	/^fit_bl_ref_curve = false;$/;"	v
fit_r2	lib/TrialData/Analysis/getPotentSpace.m	/^    fit_r2 = zeros(size(y,2),1);$/;"	v
fitchange	lib/tensor_toolbox/cp_als.m	/^        fitchange = abs(fitold - fit);$/;"	v
fitchange	lib/tensor_toolbox/cp_nmu.m	/^    fitchange = abs(fitold - fit);$/;"	v
fitchange	lib/tensor_toolbox/tucker_als.m	/^    fitchange = abs(fitold - fit);$/;"	v
fitchangetol	lib/tensor_toolbox/cp_als.m	/^fitchangetol = params.Results.tol;$/;"	v
fitchangetol	lib/tensor_toolbox/cp_arls.m	/^fitchangetol = params.Results.tol;$/;"	v
fitchangetol	lib/tensor_toolbox/cp_nmu.m	/^fitchangetol = setparam(opts,'tol',1e-4);$/;"	v
fitchangetol	lib/tensor_toolbox/tucker_als.m	/^fitchangetol = params.Results.tol;$/;"	v
fitold	lib/tensor_toolbox/cp_als.m	/^        fitold = fit;$/;"	v
fitold	lib/tensor_toolbox/cp_nmu.m	/^    fitold = fit;$/;"	v
fitold	lib/tensor_toolbox/tucker_als.m	/^    fitold = fit;$/;"	v
fitthresh	lib/tensor_toolbox/cp_arls.m	/^fitthresh = params.Results.fitthresh;   % cprand will terminate if this fit is reached (default /;"	v
fixedVars	lib/tensor_toolbox/cp_apr.m	/^    fixedVars = find((grad' > 0) & (m_row <= min(epsActSet,wk)));$/;"	v
fixsigns	lib/tensor_toolbox/@ktensor/fixsigns.m	/^function K = fixsigns(K,K0)$/;"	f
fixsigns_oneargin	lib/tensor_toolbox/@ktensor/fixsigns.m	/^function K = fixsigns_oneargin(K)$/;"	f
fixsigns_twoargin	lib/tensor_toolbox/@ktensor/fixsigns.m	/^function [A, best_sign] = fixsigns_twoargin(A,B)$/;"	f
flag	lib/tensor_toolbox/@ktensor/score.m	/^    flag = 0;$/;"	v
flag	lib/tensor_toolbox/@ktensor/score.m	/^    flag = 1;$/;"	v
flag	lib/tensor_toolbox/@tensor/nvecs.m	/^    flag = false;$/;"	v
flag	lib/tensor_toolbox/@tensor/nvecs.m	/^    flag = opts.svds;$/;"	v
flag	lib/tensor_toolbox/cp_als.m	/^            flag = 0;$/;"	v
flag	lib/tensor_toolbox/cp_als.m	/^            flag = 1;$/;"	v
flag	lib/tensor_toolbox/cp_arls.m	/^        flag = 0;$/;"	v
flag	lib/tensor_toolbox/cp_arls.m	/^        flag = 1;$/;"	v
flag	lib/tensor_toolbox/eig_geap.m	/^        flag = -1; $/;"	v
flag	lib/tensor_toolbox/eig_geap.m	/^        flag = 0;$/;"	v
flag	lib/tensor_toolbox/eig_geap.m	/^flag = -2;$/;"	v
flag	lib/tensor_toolbox/eig_sshopm.m	/^        flag = -1; $/;"	v
flag	lib/tensor_toolbox/eig_sshopm.m	/^        flag = 0;$/;"	v
flag	lib/tensor_toolbox/eig_sshopm.m	/^flag = -2;$/;"	v
flag	lib/tensor_toolbox/eig_sshopmc.m	/^        flag = -1; $/;"	v
flag	lib/tensor_toolbox/eig_sshopmc.m	/^        flag = 0;$/;"	v
flag	lib/tensor_toolbox/eig_sshopmc.m	/^flag = -2;$/;"	v
flg	lib/tensor_toolbox/teneye.m	/^        flg = 0;  % Used for resetting inc.$/;"	v
flg	lib/tensor_toolbox/teneye.m	/^        flg = 1;$/;"	v
flip_time	lib/TrialData/Tools/convBasisFunc.m	/^flip_time     =  false;$/;"	v
flips	lib/tensor_toolbox/cp_arls.m	/^        flips = reshape(diag_flips{n},bsxdims);$/;"	v
flipsign	lib/tensor_toolbox/@ktensor/nvecs.m	/^    flipsign = opts.flipsign;$/;"	v
flipsign	lib/tensor_toolbox/@ktensor/nvecs.m	/^    flipsign = true;$/;"	v
flipsign	lib/tensor_toolbox/@sptensor/nvecs.m	/^    flipsign = opts.flipsign;$/;"	v
flipsign	lib/tensor_toolbox/@sptensor/nvecs.m	/^    flipsign = true;$/;"	v
flipsign	lib/tensor_toolbox/@tensor/nvecs.m	/^    flipsign = opts.flipsign;$/;"	v
flipsign	lib/tensor_toolbox/@tensor/nvecs.m	/^    flipsign = true;$/;"	v
flipsign	lib/tensor_toolbox/@ttensor/nvecs.m	/^    flipsign = opts.flipsign;$/;"	v
flipsign	lib/tensor_toolbox/@ttensor/nvecs.m	/^    flipsign = true;$/;"	v
fmt	lib/tensor_toolbox/@sptenmat/disp.m	/^fmt = ['\\t(%' num2str(spc(1)) 'd,%' num2str(spc(2)) 'd)\\t%g'];$/;"	v
fmt	lib/tensor_toolbox/@sptensor/disp.m	/^        fmt = [fmt '%' num2str(spc(i)) 'd,'];$/;"	v
fmt	lib/tensor_toolbox/@sptensor/disp.m	/^    fmt = ['\\t(%' num2str(spc(1)) 'd)%s'];$/;"	v
fmt	lib/tensor_toolbox/@sptensor/disp.m	/^    fmt = ['\\t(%' num2str(spc(1)) 'd,'];$/;"	v
fmt	lib/tensor_toolbox/@sptensor/disp.m	/^    fmt = [fmt '%' num2str(spc(end)) 'd)%s'];$/;"	v
fmt	lib/tensor_toolbox/@symtensor/disp.m	/^        fmt = [fmt '%' num2str(spc(i)) 'd,'];$/;"	v
fmt	lib/tensor_toolbox/@symtensor/disp.m	/^    fmt = ['\\t(%' num2str(spc(1)) 'd)%s'];$/;"	v
fmt	lib/tensor_toolbox/@symtensor/disp.m	/^    fmt = ['\\t(%' num2str(spc(1)) 'd,'];$/;"	v
fmt	lib/tensor_toolbox/@symtensor/disp.m	/^    fmt = [fmt '%' num2str(spc(end)) 'd)%s'];$/;"	v
fmt	lib/tensor_toolbox/tt_matrix2cellstr.m	/^fmt = get(0,'FormatSpacing');$/;"	v
fn	lib/TrialData/Analysis/getNoiseCovar.m	/^fn = [model_name,'_residuals'];$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^        fn = fieldnames(sig_data(iSig).meta);$/;"	v
fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/DataProcessing/initSignalStruct.m	/^fn = fieldnames(signal_info);$/;"	v
fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        fn = fieldnames(td);$/;"	v
fn	lib/TrialData/Plotting/visData.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/dupeAndShift.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getDifferential.m	/^    fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/Tools/getLFPidx.m	/^    fn = getTDfields(trial_data,'lfp');$/;"	v
fn	lib/TrialData/Tools/getSig.m	/^    fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(good_idx & ~bad_idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^            fn = fn(idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_lfp')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_lfp_guide')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_names')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')) & ...$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_spikes')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'_unit_guide')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(cellfun(@(x) ~isempty(x),strfind(fieldnames(trial_data),'idx_')));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(ismember(fn,fn_time) & ~ismember(fn,fn_neural) & ~ismember(fn,fn_unit_guides));$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~idx);$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = fn(~~neural_idx); % quick hack converts to bool$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = strrep(fn,'_spikes','')';$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^        fn = {};$/;"	v
fn	lib/TrialData/Tools/getTDfields.m	/^fn = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/getTDidx.m	/^fn = varargin(1:2:length(varargin));$/;"	v
fn	lib/TrialData/Tools/reorderTDfields.m	/^fn        = fieldnames(trial_data);$/;"	v
fn	lib/TrialData/Tools/subtractConditionMean.m	/^fn = getTDfields(trial_data,'time');$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = cds.emg.Properties.VariableNames;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = fn(~strcmpi(fn,'t'));$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = markersList;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^            fn = opensimList;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^    fn = fieldnames(cds_bin);$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^fn = cds.trials.Properties.VariableNames;$/;"	v
fn	lib/TrialData/td_limblab/parseFileByTrial.m	/^fn = getTDfields(trial_data,'idx');$/;"	v
fn	lib/neuron-table/getNTidx.m	/^fn = varargin(1:2:length(varargin));$/;"	v
fnEvals	lib/tensor_toolbox/cp_apr.m	/^fnEvals = zeros(maxOuterIters,1);$/;"	v
fnVals	lib/tensor_toolbox/cp_apr.m	/^fnVals = zeros(maxOuterIters,1);$/;"	v
fn_array	lib/TrialData/Tools/stripSpikeSorting.m	/^fn_array = getTDfields(trial_data,'arrays');$/;"	v
fn_array	lib/TrialData/td_limblab/getRWMovements.m	/^fn_array = getTDfields(trial_data, 'arrays');$/;"	v
fn_cont	lib/TrialData/Tools/reorderTDfields.m	/^fn_cont   = [getTDfields(trial_data,'cont'); getTDfields(trial_data,'labels')];$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^        fn_cont_new = fn_cont_new(reorder_idx);$/;"	v
fn_cont_new	lib/TrialData/Tools/reorderTDfields.m	/^    fn_cont_new = fn_cont;$/;"	v
fn_idx	lib/TrialData/Tools/appendTDs.m	/^    fn_idx  = getTDfields(combined_td,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/binTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/dupeAndShift.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^            fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/getTDfields.m	/^        fn_idx  = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/joinTrials.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/removeBadTrials.m	/^    fn_idx = nan_idx_names;$/;"	v
fn_idx	lib/TrialData/Tools/reorderTDfields.m	/^fn_idx    = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/splitTD.m	/^fn_idx = setdiff(fn_idx,split_idx_name);$/;"	v
fn_idx	lib/TrialData/Tools/trialAverage.m	/^    fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/trimTD.m	/^fn_idx = getTDfields(trial_data,'idx');$/;"	v
fn_idx	lib/TrialData/Tools/upsampleTD.m	/^fn_idx  = getTDfields(trial_data,'idx');$/;"	v
fn_labels	lib/TrialData/Tools/joinTrials.m	/^fn_labels = getTDfields(trial_data,'labels');$/;"	v
fn_lfp_guides	lib/TrialData/Tools/splitTD.m	/^fn_lfp_guides = getTDfields(trial_data, 'lfp_guides');$/;"	v
fn_lfp_guides	lib/TrialData/Tools/trialAverage.m	/^fn_lfp_guides   =  getTDfields(trial_data,'lfp_guides');$/;"	v
fn_lg	lib/TrialData/Tools/getTDfields.m	/^        fn_lg   = getTDfields(trial_data,'lfp_guides');$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(master_td);$/;"	v
fn_master	lib/TrialData/Tools/catTDs.m	/^            fn_master = fieldnames(varargin{iTD});$/;"	v
fn_meta	lib/TrialData/Tools/joinTrials.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/Tools/splitTD.m	/^fn_meta = setdiff(fn_meta,linked_fields);$/;"	v
fn_meta	lib/TrialData/Tools/trialAverage.m	/^fn_meta         =  getTDfields(trial_data,'meta');$/;"	v
fn_meta	lib/TrialData/td_limblab/getRWMovements.m	/^fn_meta = getTDfields(trial_data,'meta');$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_master,fn_new);$/;"	v
fn_miss	lib/TrialData/Tools/catTDs.m	/^        fn_miss = setdiff(fn_new,fn_master);$/;"	v
fn_neural	lib/TrialData/Tools/getTDfields.m	/^        fn_neural = getTDfields(trial_data,'neural');$/;"	v
fn_neural	lib/TrialData/Tools/reorderTDfields.m	/^fn_neural = [getTDfields(trial_data,'neural'); getTDfields(trial_data,'unit_guides')];$/;"	v
fn_new	lib/TrialData/Tools/catTDs.m	/^        fn_new = fieldnames(td);$/;"	v
fn_spikes	lib/TrialData/Tools/binTD.m	/^fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_spikes	lib/TrialData/Tools/getTDfields.m	/^            fn_spikes = getTDfields(trial_data,'spikes');$/;"	v
fn_time	lib/TrialData/Tools/appendTDs.m	/^    fn_time = getTDfields(combined_td,'time');$/;"	v
fn_time	lib/TrialData/Tools/binTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/convBasisFunc.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^    fn_time = getTDfields(trial_data(trial),'time');$/;"	v
fn_time	lib/TrialData/Tools/dupeAndShift.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/getTDfields.m	/^        fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/joinTrials.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/removeBadTrials.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/splitTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trialAverage.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/trimTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/Tools/upsampleTD.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_time	lib/TrialData/td_limblab/getRWMovements.m	/^fn_time = getTDfields(trial_data,'time');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^            fn_ug  = getTDfields(trial_data,'unit_guides');$/;"	v
fn_ug	lib/TrialData/Tools/getTDfields.m	/^        fn_ug   = getTDfields(trial_data,'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/getTDfields.m	/^        fn_unit_guides = getTDfields(trial_data,'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/splitTD.m	/^fn_unit_guides = getTDfields(trial_data, 'unit_guides');$/;"	v
fn_unit_guides	lib/TrialData/Tools/trialAverage.m	/^fn_unit_guides  =  getTDfields(trial_data,'unit_guides');$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^            fname = sprintf('%s_cv%02d', fname, cvf);$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        fname = sprintf('%s\\\\%s_xDim%02d', runDir, method, xDim);$/;"	v
fname	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    fname = [];$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^            fname = inputArgument;$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^        fname = which(fname);$/;"	v
fname	lib/TrialData/util/openNSx_td.m	/^    fname = [fname fext];$/;"	v
fname	lib/tensor_toolbox/maintenance/update_classlist.m	/^    fname = fullfile(classdir,strcat(classname,'.m'));$/;"	v
fnametmp	lib/tensor_toolbox/maintenance/update_classlist.m	/^    fnametmp = fullfile(classdir,strcat('tmp_',classname,'.m'));$/;"	v
fnametmp	lib/tensor_toolbox/maintenance/update_copyright.m	/^fnametmp = fullfile(pathstr, [name '_tmp' ext]);$/;"	v
fold_inds	bumpcurl_lda.m	/^                fold_inds = crossvalind('Kfold',length(td_ad),num_folds);$/;"	v
foldtic	bumpcurl_lda.m	/^                foldtic = tic;$/;"	v
font	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
font_size	lib/TrialData/Plotting/visData.m	/^font_size          =   12;       % default font size$/;"	v
foo	lib/tensor_toolbox/@ktensor/datadisp.m	/^    foo = input('\\nReturn to continue, jump to rank, or ''0'' (zero) to quit: ');$/;"	v
foo	lib/tensor_toolbox/@ktensor/score.m	/^    foo = 1:RA;$/;"	v
foo	lib/tensor_toolbox/@symktensor/entry.m	/^foo = X(I,:);$/;"	v
foo	lib/tensor_toolbox/@symktensor/entry.m	/^foo = reshape(foo, [q m p]);$/;"	v
foo	lib/tensor_toolbox/@symktensor/fg.m	/^    foo = X(I,:);$/;"	v
foo	lib/tensor_toolbox/@symktensor/fg.m	/^    foo = reshape(foo, [Q M P]);$/;"	v
footer	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template name="footer">$/;"	n
footer	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^	<a name="footer"><\/a>$/;"	a
footer	lib/tensor_toolbox/maintenance/tensor_toolbox_product_page_template.html	/^      <div id="footer">&copy;2017, Sandia Corporation.<br>$/;"	I
force_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^force_list = cds.force.Properties.VariableNames;$/;"	v
form	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
found	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                                found = 1;$/;"	v
found	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                        found = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = 0;$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = setdiff(found_units,exclude_units);$/;"	v
found_units	lib/TrialData/DataProcessing/processNEV.m	/^                found_units = unique(NEV.Data.Spikes.Unit(chan_idx));$/;"	v
fr	lib/TrialData/Analysis/runDPCA.m	/^        fr = cat(2,fr,temp_fr);$/;"	v
fr	lib/TrialData/Analysis/runDPCA.m	/^    fr = [];$/;"	v
fr	lib/TrialData/Tools/binTD.m	/^        fr = zeros(length(t_bin)-1,size(temp,2));$/;"	v
fr	lib/TrialData/td_limblab/getNeuronTuning.m	/^        fr = zeros(length(trial_data),size(trial_data(1).([array '_spikes']),2));$/;"	v
fr_test	bumpcurl_lda.m	/^                    fr_test = cat(3,td_test.(spikes_in_td{arraynum}));$/;"	v
fr_test	bumpcurl_lda.m	/^                    fr_test = permute(fr_test,[3 2 1]);$/;"	v
fr_train	bumpcurl_lda.m	/^                    fr_train = cat(3,td_train.(spikes_in_td{arraynum}));$/;"	v
fr_train	bumpcurl_lda.m	/^                    fr_train = permute(fr_train,[3 2 1]);$/;"	v
fr_window	lib/TrialData/Tools/removeBadNeurons.m	/^fr_window       =  {};$/;"	v
frac	lib/matlab-colors/linspecer/linspecer.m	/^    frac = .9; $/;"	v
frac	lib/matlab-colors/linspecer/linspecer.m	/^    frac = varargin{1}; $/;"	v
free_indices	lib/tensor_toolbox/cp_apr.m	/^    free_indices = free_indices_tmp(1:num_free);$/;"	v
free_indices_tmp	lib/tensor_toolbox/cp_apr.m	/^    free_indices_tmp = zeros(R,1);$/;"	v
freq	lib/TrialData/util/process_lfp.m	/^freq = samplerate\/2*linspace(0,1,ceil(window_size\/2+1));$/;"	v
freq_bands	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            freq_bands = temp_params.freq_bands;$/;"	v
freq_bands	lib/TrialData/Tools/getLFPidx.m	/^    freq_bands = freqs;$/;"	v
freq_bands	lib/TrialData/Tools/getLFPidx.m	/^freq_bands  =  'all';$/;"	v
freq_bands	lib/TrialData/util/process_lfp.m	/^freq_bands = [ ...% first column is low cutoff, second is high$/;"	v
freqs	lib/TrialData/Tools/getLFPidx.m	/^        freqs = [];$/;"	v
freqs	lib/TrialData/Tools/getLFPidx.m	/^freqs = unique(lfp_guide(:,2:3),'rows');$/;"	v
fs	lib/TrialData/Tools/getEnvelope.m	/^fs = round(1\/trial_data(1).bin_size);$/;"	v
fsamp	lib/tensor_toolbox/gcp_opt.m	/^            fsamp = min( max(ceil(tsz\/10), 10^6), tsz );$/;"	v
fsamp	lib/tensor_toolbox/gcp_opt.m	/^fsamp = params.Results.fsamp;$/;"	v
fsampler	lib/tensor_toolbox/gcp_opt.m	/^        fsampler = @() tt_sample_stratified(X, xnzidx, fsamp(1), fsamp(2), oversample);$/;"	v
fsampler	lib/tensor_toolbox/gcp_opt.m	/^        fsampler = @() tt_sample_uniform(X,fsamp);$/;"	v
fsampler	lib/tensor_toolbox/gcp_opt.m	/^        fsampler = fsampler_type;$/;"	v
fsampler_str	lib/tensor_toolbox/gcp_opt.m	/^        fsampler_str =  sprintf('stratified with %d nonzero and %d zero samples', fsamp);$/;"	v
fsampler_str	lib/tensor_toolbox/gcp_opt.m	/^        fsampler_str = 'user-specified';$/;"	v
fsampler_str	lib/tensor_toolbox/gcp_opt.m	/^        fsampler_str = sprintf('uniform with %d samples', fsamp);$/;"	v
fsampler_type	lib/tensor_toolbox/gcp_opt.m	/^            fsampler_type = 'stratified';$/;"	v
fsampler_type	lib/tensor_toolbox/gcp_opt.m	/^            fsampler_type = 'uniform';$/;"	v
fsampler_type	lib/tensor_toolbox/gcp_opt.m	/^fsampler_type = params.Results.fsampler;$/;"	v
fsubs	lib/tensor_toolbox/create_problem_binary.m	/^            fsubs = zeros(fcnt,d);$/;"	v
ftmp	lib/tensor_toolbox/@symktensor/fg.m	/^    ftmp = fgopts.l1weight * sum(lambda_alpha);$/;"	v
ftmp	lib/tensor_toolbox/@symktensor/fg.m	/^    ftmp = fgopts.l2weight * sum(tmp.^2);$/;"	v
ftmp	lib/tensor_toolbox/gcp_opt.m	/^            ftmp = max(ceil(nnonzeros\/100), 10^5);$/;"	v
full	lib/tensor_toolbox/@ktensor/full.m	/^function t = full(t,vers)$/;"	f
full	lib/tensor_toolbox/@sptenmat/full.m	/^function B = full(A)$/;"	f
full	lib/tensor_toolbox/@sptensor/full.m	/^function B = full(A)$/;"	f
full	lib/tensor_toolbox/@sumtensor/full.m	/^function X = full(T)$/;"	f
full	lib/tensor_toolbox/@symktensor/full.m	/^function t = full(t)$/;"	f
full	lib/tensor_toolbox/@symtensor/full.m	/^function Y = full(X,ver)$/;"	f
full	lib/tensor_toolbox/@tensor/full.m	/^function X = full(X)$/;"	f
full	lib/tensor_toolbox/@ttensor/full.m	/^function X = full(T)$/;"	f
full_eval	bumpcurl_analysis.m	/^    full_eval = evalModel(td_ad,eval_params);$/;"	v
fun	lib/tensor_toolbox/@sptensor/collapse.m	/^    fun = @sum;$/;"	v
fun	lib/tensor_toolbox/@sptensor/sptensor.m	/^        fun = @sum;$/;"	v
fun	lib/tensor_toolbox/@sptensor/sptensor.m	/^        fun = varargin{4};$/;"	v
fun	lib/tensor_toolbox/@tenmat/minus.m	/^fun = @minus;$/;"	v
fun	lib/tensor_toolbox/@tenmat/plus.m	/^fun = @plus;$/;"	v
fun	lib/tensor_toolbox/@tensor/collapse.m	/^    fun = @sum;$/;"	v
func_in	lib/TrialData/Tools/trialAverage.m	/^        func_in = cell(1,2*size(all_conds,2));$/;"	v
functionality	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="functionality">Functionality<\/h2>$/;"	I
functionnames	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    functionnames = union(functionnames,C);$/;"	v
functionnames	lib/tensor_toolbox/maintenance/capabilitychart.m	/^functionnames = {};$/;"	v
funhandle	lib/tensor_toolbox/cp_wopt.m	/^    funhandle = @(x) tt_cp_wfun(Z,W,x,normZsqr);$/;"	v
funhandle	lib/tensor_toolbox/cp_wopt.m	/^    funhandle = @(x) tt_cp_wfun(Zvals,W,x,normZsqr,fflag);$/;"	v
funtype	lib/tensor_toolbox/cp_wopt.m	/^funtype = params.Results.fun;$/;"	v
fv	lib/TrialData/Tools/getTDidx.m	/^fv = varargin(2:2:length(varargin));$/;"	v
fv	lib/neuron-table/getNTidx.m	/^fv = varargin(2:2:length(varargin));$/;"	v
g	lib/tensor_toolbox/@symktensor/fg.m	/^    g = [G.lambda; reshape(G.X,[],1)];$/;"	v
g	lib/tensor_toolbox/@symktensor/fg.m	/^    g = reshape(G.X,[],1);$/;"	v
g	lib/tensor_toolbox/cp_wopt.m	/^g = tt_fac_to_vec(G);$/;"	v
g	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        g = struct( 'rand', @rand, 'zeros', @zeros, 'ones', @ones);$/;"	v
g	lib/tensor_toolbox/tt_cp_fun.m	/^g = tt_fac_to_vec(G);$/;"	v
gDotd	lib/tensor_toolbox/cp_apr.m	/^        gDotd = sum(grad .* (m_new - m_old));$/;"	v
gcp_fg_est	lib/tensor_toolbox/tt_gcp_fg_est.m	/^function [F, G] = gcp_fg_est(M, fh, gh, subs, xvals, weights, computeF, computeG, vectorG, Lambd/;"	f
gcp_fg_est_helper	lib/tensor_toolbox/tt_gcp_fg_est.m	/^function [mvals, Zexp] = gcp_fg_est_helper(factors, subs)$/;"	f
gcp_fg_setup	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^function [fh,gh,lowerbnd] = gcp_fg_setup(type,X)$/;"	f
gcp_opt	lib/tensor_toolbox/gcp_opt.m	/^function [M, M0, info] = gcp_opt(X, nc, varargin)$/;"	f
ge	lib/tensor_toolbox/@sptensor/ge.m	/^function z = ge(x,y)$/;"	f
ge	lib/tensor_toolbox/@symtensor/ge.m	/^function Z = ge(X,Y)$/;"	f
ge	lib/tensor_toolbox/@tensor/ge.m	/^function Z = ge(X,Y)$/;"	f
geap_data	lib/tensor_toolbox/eig_geap.m	/^function data = geap_data(x,A,B)$/;"	f
geap_hessian	lib/tensor_toolbox/eig_geap.m	/^function H = geap_hessian(data,alpha,dividebym)$/;"	f
gen	lib/tensor_toolbox/tests/Test_Tensor.m	/^        gen = struct( 'rand', @rand, 'zeros', @zeros, 'ones', @ones, 'randn', @randn );$/;"	v
generate_data	lib/tensor_toolbox/create_problem.m	/^function D = generate_data(S, W, params)$/;"	f
generate_data_sparse	lib/tensor_toolbox/create_problem.m	/^function [Z,S] = generate_data_sparse(S,params)$/;"	f
generate_missing_pattern	lib/tensor_toolbox/create_problem.m	/^function W = generate_missing_pattern(sz, params)$/;"	f
generate_solution	lib/tensor_toolbox/create_problem.m	/^function S = generate_solution(params)$/;"	f
getCommonUnits	lib/TrialData/Tools/getCommonUnits.m	/^function trial_data = getCommonUnits(trial_data)$/;"	f
getDifferential	lib/TrialData/Tools/getDifferential.m	/^function trial_data = getDifferential(trial_data,params)$/;"	f
getEnvelope	lib/TrialData/Tools/getEnvelope.m	/^function trial_data = getEnvelope(trial_data,params)$/;"	f
getGitInfo	lib/TrialData/util/getGitInfo.m	/^function gitInfo=getGitInfo()$/;"	f
getHessian	lib/tensor_toolbox/cp_apr.m	/^function H = getHessian(upsilon, Pi, free_indices)$/;"	f
getLFPidx	lib/TrialData/Tools/getLFPidx.m	/^function [idx,freqs,chans] = getLFPidx(trial_data,varargin)$/;"	f
getLearningMetrics	lib/TrialData/td_limblab/getLearningMetrics.m	/^function metric = getLearningMetrics(trial_data,params)$/;"	f
getModel	lib/TrialData/Analysis/getModel.m	/^function [trial_data,model_info] = getModel(trial_data,params)$/;"	f
getMoveOnsetAndPeak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^function trial_data = getMoveOnsetAndPeak(trial_data,params)$/;"	f
getNTidx	lib/neuron-table/getNTidx.m	/^function [return_idx, neuronTable] = getNTidx(neuronTable,varargin)$/;"	f
getNeuronTuning	lib/TrialData/td_limblab/getNeuronTuning.m	/^function [tcs,fr,covar] = getNeuronTuning(trial_data,which_method,params)$/;"	f
getNoiseCovar	lib/TrialData/Analysis/getNoiseCovar.m	/^function [noise_covar,td] = getNoiseCovar(trial_data,params)$/;"	f
getNorm	lib/TrialData/Tools/getNorm.m	/^function trial_data  = getNorm(trial_data,params)$/;"	f
getPDsFromWeights	lib/neuron-table/getPDsFromWeights.m	/^function pdTable = getPDsFromWeights(weightTable)$/;"	f
getPotentSpace	lib/TrialData/Analysis/getPotentSpace.m	/^function [trial_data,pca_info] = getPotentSpace(trial_data,params)$/;"	f
getRWMovements	lib/TrialData/td_limblab/getRWMovements.m	/^function rw_td = getRWMovements(trial_data,params)$/;"	f
getRWTargetDirection	lib/TrialData/td_limblab/getRWTargetDirection.m	/^function [ trial_data ] = getRWTargetDirection(trial_data, params  )$/;"	f
getSearchDirPqnr	lib/tensor_toolbox/cp_apr.m	/^function [d] = getSearchDirPqnr (m_row, grad, epsActSet, ...$/;"	f
getSeq_td	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^function seq = getSeq_td(dat, binWidth, varargin)$/;"	f
getSig	lib/TrialData/Tools/getSig.m	/^function out = getSig(trial_data,signals)$/;"	f
getSigByTrial	lib/TrialData/Tools/getSigByTrial.m	/^function out = getSigByTrial(trial_data,signals)$/;"	f
getTDClassicalPDs	lib/neuron-table/getTDClassicalPDs.m	/^function pdTable = getTDClassicalPDs(trial_data,params)$/;"	f
getTDModelWeights	lib/neuron-table/getTDModelWeights.m	/^function weightTable = getTDModelWeights(trial_data,params)$/;"	f
getTDPDs	lib/neuron-table/getTDPDs.m	/^function pdTable = getTDPDs(trial_data,params)$/;"	f
getTDfields	lib/TrialData/Tools/getTDfields.m	/^function fn = getTDfields(trial_data,which_type,cont_var_ref)$/;"	f
getTDidx	lib/TrialData/Tools/getTDidx.m	/^function [return_idx, trial_data] = getTDidx(trial_data,varargin)$/;"	f
getTargetDirection	lib/TrialData/td_limblab/getTargetDirection.m	/^function trial_data = getTargetDirection(trial_data, params)$/;"	f
getTuningCurves	lib/neuron-table/getTuningCurves.m	/^function [curves] = getTuningCurves(trial_data,params)$/;"	f
getTuningHull	lib/neuron-table/getTuningHull.m	/^function tuningHulls = getTuningHull(tuningTable,params)$/;"	f
get_dpca_var	lib/get_dpca_var.m	/^function [margvar_table,learning_metric_table] = get_dpca_var(trial_data_cell,params)$/;"	f
get_generator	lib/tensor_toolbox/create_problem.m	/^function fh = get_generator(x)$/;"	f
get_master_dist	lib/TrialData/Tools/removeBadNeurons.m	/^function prctile_dist = get_master_dist()$/;"	f
get_metric	lib/TrialData/Analysis/evalModel.m	/^function metric = get_metric(varargin)$/;"	f
get_vars	lib/TrialData/util/subfcn/get_vars.m	/^function x = get_vars(trial_data, signals)$/;"	f
getting-started	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h2 id="getting-started">Getting Started<\/h2>$/;"	I
gettinghelp	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="gettinghelp">Getting help<\/h3>$/;"	I
gh	lib/tensor_toolbox/gcp_opt.m	/^gh = params.Results.grad;$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) -x.\/((m+1e-10).^2) + 1.\/(m+1e-10);$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) 1 - x.\/(m + 1e-10);$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) 1.\/(m+1) - x.\/(m + 1e-10);$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) 2.*(m-x);$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) 2.\/(m+1e-10) - (pi\/2)*x.^2.\/(m+1e-10).^3;$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) exp(m) - x;$/;"	v
gh	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        gh = @(x,m) exp(m).\/(exp(m) + 1) - x;$/;"	v
git_path	lib/TrialData/util/getGitInfo.m	/^git_path = curr_path(1:end-16);$/;"	v
glm_distribution	lib/TrialData/Analysis/getModel.m	/^glm_distribution     =  'poisson'; % which distribution to assume for GLM$/;"	v
globalReplace	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template name="globalReplace">$/;"	n
gnormsum	lib/tensor_toolbox/gcp_opt.m	/^                gnormsum = gnormsum + sum(cellfun(@(gk) sum(gk(:).^2), Gest, 'UniformOutput',tru/;"	v
gnormsum	lib/tensor_toolbox/gcp_opt.m	/^            gnormsum = 0;$/;"	v
gnormsum	lib/tensor_toolbox/gcp_opt.m	/^    gnormsum = 0;$/;"	v
go_cue_name	lib/TrialData/td_limblab/getRWMovements.m	/^go_cue_name        =  'idx_go_cue';$/;"	v
go_cues	lib/TrialData/td_limblab/getRWMovements.m	/^    go_cues = td.(go_cue_name);$/;"	v
goodEMG	exploreData.m	/^goodEMG = ~contains(td(1).emg_names,'EMG_FDS');$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^                good_idx = good_idx | cellfun(@(x) ~isempty(x),strfind(fn,cont_var_ref{i}));$/;"	v
good_idx	lib/TrialData/Tools/getTDfields.m	/^            good_idx = good_idx | ismember(fn,fn_spikes);$/;"	v
gpfaEngine_td	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^function result = gpfaEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
gradM	lib/tensor_toolbox/cp_apr.m	/^                gradM = (e_vec - phi_row)';$/;"	v
gradOLD	lib/tensor_toolbox/cp_apr.m	/^                    gradOLD = gradM;$/;"	v
gradOLD	lib/tensor_toolbox/cp_apr.m	/^                gradOLD = gradM;$/;"	v
gradOLD	lib/tensor_toolbox/cp_apr.m	/^            gradOLD = [];$/;"	v
grad_alpha	lib/tensor_toolbox/@symktensor/fg.m	/^    grad_alpha = 1.\/(1 + exp(-alpha*lambda)) - 1.\/(1 + exp(alpha*lambda));$/;"	v
grad_free	lib/tensor_toolbox/cp_apr.m	/^    grad_free = -gradM(free_indices);$/;"	v
grad_row	lib/tensor_toolbox/cp_apr.m	/^    grad_row = (ones(size(phi_row)) - phi_row)';$/;"	v
grp	lib/tensor_toolbox/create_problem.m	/^        grp = params.Symmetric{i};$/;"	v
grps	lib/tensor_toolbox/@tensor/issymmetric.m	/^    grps = 1:n;$/;"	v
grps	lib/tensor_toolbox/@tensor/issymmetric.m	/^    grps = {grps};$/;"	v
grps	lib/tensor_toolbox/@tensor/symmetrize.m	/^    grps = 1:n;$/;"	v
grps	lib/tensor_toolbox/@tensor/symmetrize.m	/^    grps = {grps};$/;"	v
gsamp	lib/tensor_toolbox/gcp_opt.m	/^            gsamp = min( max( 1000, ceil(10 * tsz \/ maxiters) ), tsz);$/;"	v
gsamp	lib/tensor_toolbox/gcp_opt.m	/^gsamp = params.Results.gsamp;$/;"	v
gsampler	lib/tensor_toolbox/gcp_opt.m	/^            gsampler = @() tt_sample_semistrat(X, gsamp(1), gsamp(2));$/;"	v
gsampler	lib/tensor_toolbox/gcp_opt.m	/^            gsampler = @() tt_sample_stratified(X, xnzidx, gsamp(1), gsamp(2), oversample);$/;"	v
gsampler	lib/tensor_toolbox/gcp_opt.m	/^            gsampler = @() tt_sample_stratified(X, xnzidx, random('Poisson', exp_nonzeros), rand/;"	v
gsampler	lib/tensor_toolbox/gcp_opt.m	/^            gsampler = @() tt_sample_uniform(X,gsamp);$/;"	v
gsampler_str	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_str = sprintf('pseudo-uniform with %d samples', gsamp);$/;"	v
gsampler_str	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_str = sprintf('semi-stratified with %d nonzero and %d zero samples', gsamp)/;"	v
gsampler_str	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_str = sprintf('stratified with %d nonzero and %d zero samples', gsamp);$/;"	v
gsampler_str	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_str = sprintf('uniform with %d samples', gsamp);$/;"	v
gsampler_type	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_type = 'stratified';$/;"	v
gsampler_type	lib/tensor_toolbox/gcp_opt.m	/^            gsampler_type = 'uniform';$/;"	v
gsampler_type	lib/tensor_toolbox/gcp_opt.m	/^gsampler_type = params.Results.sampler;$/;"	v
gsz	lib/tensor_toolbox/tenrandblk.m	/^gsz = bend(end,:);$/;"	v
gt	lib/tensor_toolbox/@sptensor/gt.m	/^function z = gt(x,y)$/;"	f
gt	lib/tensor_toolbox/@symtensor/gt.m	/^function Z = gt(X,Y)$/;"	f
gt	lib/tensor_toolbox/@tensor/gt.m	/^function Z = gt(X,Y)$/;"	f
gtmp	lib/tensor_toolbox/gcp_opt.m	/^            gtmp = max(1000, ceil(3 * nnonzeros \/ maxiters));$/;"	v
h	bumpcurl_analysis.m	/^            h = polar(dirs*pi\/180,spikes(:,true_neur_num));$/;"	v
h	lib/TrialData/TrialData_tutorial.m	/^h = legend({'Actual','Predicted'},'Location','SouthEast');$/;"	v
h	lib/TrialData/util/lib/isomap/IsomapII.m	/^h = real(diag(val)); $/;"	v
h	lib/TrialData/util/lib/isomap/isomap.m	/^h = real(diag(val)); $/;"	v
h	lib/tensor_toolbox/@ktensor/viz.m	/^h = cell(nd,nc);$/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(0,max_rad,'.');$/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(repmat(PD(epochctr,neurctr),1,2),[0 max_rad*0.8],'-o');$/;"	v
h	plotBumpcurlTuning.m	/^        h = polar(theta,exp(offset(epochctr,neurctr)+moddepth(epochctr,neurctr)*cos(theta-PD(epo/;"	v
h	plotTuningDistr.m	/^h = polar(repmat(PD,2,1),[0;1]*ones(size(PD)),'ko-');$/;"	v
h1	bumpcurl_analysis.m	/^    h1 = figure;$/;"	v
h1	lib/tensor_toolbox/doc/html/ttb.css	/^h1 { padding:0px; margin:0px 0px 25px; font-family:Arial, Helvetica, sans-serif; font-size:1.5em/;"	s
h1	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
h1 img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
h2	lib/tensor_toolbox/doc/html/ttb.css	/^h2 { padding:0px; margin:0px 0px 8px; font-family:Arial, Helvetica, sans-serif; font-size:1.2em;/;"	s
h2	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
h2 img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
h3	lib/tensor_toolbox/doc/html/ttb.css	/^h3 { padding:0px; margin:0px 0px 5px; font-family:Arial, Helvetica, sans-serif; font-size:1.1em;/;"	s
h3	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
h4	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
h5	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
h6	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
hasIntro	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^    <xsl:variable name="hasIntro" select="count(cell[@style = 'overview'])"\/>$/;"	v	matchedTemplate:mscript
hasSpikesBool	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    hasSpikesBool = (mean([seqTrain.y], 2) ~= 0);$/;"	v
header	lib/TrialData/td_limblab/parseFileByTrial.m	/^    header = cds.analog{i}.Properties.VariableNames;$/;"	v
header	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template name="header">$/;"	n
headinglevel	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^          <xsl:variable name="headinglevel">$/;"	v	matchedTemplate:mscript
height	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^height = pos(3)*1800\/1000;$/;"	v
height	lib/tensor_toolbox/@ktensor/viz.m	/^height = Vplotspace \/ nc;$/;"	v
hh	lib/tensor_toolbox/@ktensor/viz.m	/^        hh = PlotCommands{k}(xx, yy);$/;"	v
hiprob	lib/tensor_toolbox/create_problem_binary.m	/^hiprob = params.Results.hiprob;$/;"	v
hist_scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_scree_noise    = zeros(length(hist_x)-1,size(eigenv_noise,1));$/;"	v
hist_x	lib/TrialData/Analysis/estimateDimensionality.m	/^hist_x              = 0:0.01:1;$/;"	v
hisubs	lib/tensor_toolbox/create_problem_binary.m	/^        hisubs = [];$/;"	v
hisubs	lib/tensor_toolbox/create_problem_binary.m	/^        hisubs = subs(tf,:);$/;"	v
hival	lib/tensor_toolbox/create_problem_binary.m	/^hival = nthroot(hiprob\/(1-hiprob),d);$/;"	v
hold_stat	lib/plot_traces.m	/^    hold_stat = ishold;$/;"	v
hold_time	lib/TrialData/td_limblab/getTargetDirection.m	/^hold_time       =  0.5; % s$/;"	v
home	lib/tensor_toolbox/doc/html/bibtex.html	/^<h1 id="home">BibTex Entries: Tensor Toolbox for MATLAB<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/converting.html	/^      <h1 id="home">Converting Tensors and Matrices<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/cp.html	/^      <h1 id="home">CP Decompositions<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/eigen.html	/^      <h1 id="home">Eigenproblem<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h1 id="home">Getting Started<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/index.html	/^      <h1 id="home">Tensor Toolbox for MATLAB<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/tensor_types.html	/^      <h1 id="home">Tensor Types<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/tucker.html	/^      <h1 id="home">Tucker Decompositions<\/h1>$/;"	I
home	lib/tensor_toolbox/doc/html/working.html	/^      <h1 id="home">Working with Tensors<\/h1>$/;"	I
hosvd	lib/tensor_toolbox/hosvd.m	/^function T = hosvd(X,tol,varargin)$/;"	f
how-to-cite	lib/tensor_toolbox/doc/html/index.html	/^      <h2 id="how-to-cite">How to Cite<\/h2>$/;"	I
hpeaks	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^hpeaks = ihprs.hpeaks;$/;"	v
html	lib/tensor_toolbox/doc/html/ttb.css	/^html { min-height:100%; margin-bottom:1px; }$/;"	s
html	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
html	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="html">$/;"	m
html body	lib/tensor_toolbox/doc/html/ttb.css	/^html body { height:100%; margin:0px; font-family:Arial, Helvetica, sans-serif; font-size:10px; c/;"	s
html body td	lib/tensor_toolbox/doc/html/ttb.css	/^html body td { vertical-align:top; text-align:left; }$/;"	s
hullCell	lib/neuron-table/getTuningHull.m	/^    hullCell = [hullCell;hullRow];$/;"	v
hullCell	lib/neuron-table/getTuningHull.m	/^hullCell = {};$/;"	v
hullRow	lib/neuron-table/getTuningHull.m	/^        hullRow = [hullRow,clust_hull];$/;"	v
hullRow	lib/neuron-table/getTuningHull.m	/^    hullRow = {};$/;"	v
hullTab	lib/neuron-table/getTuningHull.m	/^hullTab = cell2table(hullCell,'VariableNames',tuningTable.Properties.VariableNames(weight_header/;"	v
hull_idx	lib/neuron-table/comparePDClouds.m	/^    hull_idx = convhull(centered_clust);$/;"	v
hull_idx	lib/neuron-table/getTuningHull.m	/^            hull_idx = convhull(centered_clust);$/;"	v
hull_idx	lib/neuron-table/plotWeightClouds.m	/^    hull_idx = convhull(centered_clust);$/;"	v
i	lib/tensor_toolbox/@sptensor/private/allsubs.m	/^    i = o;$/;"	v
i	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                    i = o;$/;"	v
i	lib/tensor_toolbox/@symtensor/full.m	/^            i = I(q,:);$/;"	v
i	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
i	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="i">$/;"	m
iDir	lib/TrialData/td_limblab/getLearningMetrics.m	/^            iDir = utheta==trial_data(iTrial).(target_dir_fieldname);$/;"	v
iEnd	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^      iEnd   = binWidth * t \/ dataBinWidth;$/;"	v
iPh	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    iPh  = diag(1.\/Ph);$/;"	v
iPhL	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    iPhL = iPh * L;  $/;"	v
iStart	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^      iStart = binWidth * (t-1) \/ dataBinWidth + 1;$/;"	v
iTrial	lib/TrialData/td_limblab/parseFileByTrial.m	/^    iTrial = idx_trials(i);$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^            iVar = iVar + 1;$/;"	v
iVar	lib/TrialData/Tools/getTDfields.m	/^        iVar = 0;$/;"	v
id1	lib/tensor_toolbox/teneye.m	/^    id1 = cumsum2((M-1):-1:2)+1;$/;"	v
identical	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                            identical = 0;$/;"	v
identical	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                    identical = 1;$/;"	v
idx	lib/TrialData/Analysis/getModel.m	/^        idx = any(isnan(x),2) | any(isnan(y),2);$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^            idx = start_idx(i)+(1:neurons{i}(end));$/;"	v
idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    idx = find(c==u(i));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    idx = 1:size(file_data_temp.data,2);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = 1:length(file_labels);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = ismember(file_labels(:,1),temp_label);$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^            idx = temp_label;$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'emg'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'generic'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'lfp'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'spikes'));$/;"	v
idx	lib/TrialData/DataProcessing/convertDataToTD.m	/^    idx = find(strcmpi({sig_data.type},'trigger') | strcmpi({sig_data.type},'event'));$/;"	v
idx	lib/TrialData/DataProcessing/initSignalStruct.m	/^idx = find(cellfun(@isempty,temp));$/;"	v
idx	lib/TrialData/DataProcessing/processNEV.m	/^            idx = startsWith(nev_text,labels{iText});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^            idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^        idx = trial_data(trial).(events{iEvent});$/;"	v
idx	lib/TrialData/Plotting/visData.m	/^    idx = true(1,length(events));$/;"	v
idx	lib/TrialData/Tools/getLFPidx.m	/^        idx = [];$/;"	v
idx	lib/TrialData/Tools/getLFPidx.m	/^idx = find(ismember(lfp_guide(:,1),channels) & ...$/;"	v
idx	lib/TrialData/Tools/getSig.m	/^            idx =  [idx, ...$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^            idx = false(length(fn),1);$/;"	v
idx	lib/TrialData/Tools/getTDfields.m	/^        idx = ismember(fn,fn_time) | ismember(fn,fn_idx) | ismember(fn,fn_ug) | ismember(fn,fn_l/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember([trial_data.(fn{i})],fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & ismember({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^            idx = idx & strcmpi({trial_data.(fn{i})},fv{i});$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = ones(1,length(trial_data));$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'boot');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'rand');$/;"	v
idx	lib/TrialData/Tools/getTDidx.m	/^idx = strcmpi(fn,'range');$/;"	v
idx	lib/TrialData/Tools/joinTrials.m	/^        idx = [idx new_idx+last_end];$/;"	v
idx	lib/TrialData/Tools/joinTrials.m	/^    idx = [];$/;"	v
idx	lib/TrialData/Tools/stripSpikeSorting.m	/^        idx = sg(:,1) == elecs(e);$/;"	v
idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^                idx = t1:t2;$/;"	v
idx	lib/TrialData/td_limblab/getLearningMetrics.m	/^            idx = t1:t2;$/;"	v
idx	lib/TrialData/td_limblab/getNeuronTuning.m	/^            idx = trial_data(trial).(win{1,1})+win{1,2}:trial_data(trial).(win{2,1})+win{2,2};$/;"	v
idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx = t_start:t_end-1;$/;"	v
idx	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            idx = find([0 diff(d < spike_threshold*sd)] > 0);$/;"	v
idx	lib/TrialData/util/subfcn/get_vars.m	/^idx = cell(1,size(signals,1));$/;"	v
idx	lib/neuron-table/getNTidx.m	/^            idx = idx & ismember(neuronTable.(fn{i}),fv{i});$/;"	v
idx	lib/neuron-table/getNTidx.m	/^            idx = idx & ismember(neuronTable.(fn{i}),fv{i},'rows');$/;"	v
idx	lib/neuron-table/getNTidx.m	/^            idx = idx & strcmpi(neuronTable.(fn{i}),fv{i});$/;"	v
idx	lib/neuron-table/getNTidx.m	/^idx = ones(height(neuronTable),1);$/;"	v
idx	lib/neuron-table/getNTidx.m	/^idx = strcmpi(fn,'rand');$/;"	v
idx	lib/neuron-table/getNTidx.m	/^idx = strcmpi(fn,'range');$/;"	v
idx	lib/tensor_toolbox/@ktensor/normalize.m	/^idx = find(X.lambda < 0);$/;"	v
idx	lib/tensor_toolbox/@ktensor/score.m	/^idx = nchoosek(1:RA,RB);$/;"	v
idx	lib/tensor_toolbox/@sptenmat/full.m	/^idx = tt_sub2ind(siz,A.subs);$/;"	v
idx	lib/tensor_toolbox/@sptensor/elemfun.m	/^idx = find(a.vals);$/;"	v
idx	lib/tensor_toolbox/@sptensor/eq.m	/^        idx = (x.vals == y);$/;"	v
idx	lib/tensor_toolbox/@sptensor/full.m	/^idx = tt_sub2ind(siz,A.subs);$/;"	v
idx	lib/tensor_toolbox/@sptensor/squeeze.m	/^  idx = find(X.size > 1);$/;"	v
idx	lib/tensor_toolbox/@sptensor/subsref.m	/^            idx = s(1).subs{1};$/;"	v
idx	lib/tensor_toolbox/@sptensor/ttv.m	/^        idx = subs(:,dims(n)); % extract indices for dimension n$/;"	v
idx	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    idx = zeros(Q,N);$/;"	v
idx	lib/tensor_toolbox/@symtensor/full.m	/^        idx = tt_ind2sub(size(X), (1:n^m)');$/;"	v
idx	lib/tensor_toolbox/@tensor/find.m	/^idx = find(t.data);$/;"	v
idx	lib/tensor_toolbox/@tensor/issymmetric.m	/^                idx = idx + 1;$/;"	v
idx	lib/tensor_toolbox/@tensor/issymmetric.m	/^            idx = tt_ind2sub(size(X), (1:numel(X.data))');$/;"	v
idx	lib/tensor_toolbox/@tensor/issymmetric.m	/^        idx = 1;$/;"	v
idx	lib/tensor_toolbox/@tensor/mask.m	/^idx = tt_sub2ind(X.size,wsubs);$/;"	v
idx	lib/tensor_toolbox/@tensor/squeeze.m	/^  idx = find(X.size > 1);$/;"	v
idx	lib/tensor_toolbox/@tensor/subsasgn.m	/^            idx = s.subs{1};$/;"	v
idx	lib/tensor_toolbox/@tensor/subsref.m	/^        idx = s(1).subs{1};$/;"	v
idx	lib/tensor_toolbox/@tensor/symmetrize.m	/^                        idx = idx + 1;$/;"	v
idx	lib/tensor_toolbox/@tensor/symmetrize.m	/^            idx = 1;$/;"	v
idx	lib/tensor_toolbox/@tensor/symmetrize.m	/^            idx = tt_ind2sub(size(X), (1:numel(X.data))');$/;"	v
idx	lib/tensor_toolbox/create_problem.m	/^            idx = randperm(size(subs,1));$/;"	v
idx	lib/tensor_toolbox/create_problem.m	/^        idx = idx(1:Q)';$/;"	v
idx	lib/tensor_toolbox/create_problem.m	/^        idx = randperm(P);$/;"	v
idx	lib/tensor_toolbox/doc/test_problems_doc.m	/^        idx = p(1:round(.2*sz(n)));$/;"	v
idx	lib/tensor_toolbox/teneye.m	/^idx = tt_combinator(N,M,'c','r');$/;"	v
idx	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            idx = randi(p);$/;"	v
idx	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            idx = unique(randi(p,10,1));$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^                idx = [];$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = find(X.data > 0.5);$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = idx(1:n)';$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = randi(prod(sz));$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = randi(prod(sz),nx,1); % List of elements to extract$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = randperm(prod(sz));$/;"	v
idx	lib/tensor_toolbox/tests/Test_Tensor.m	/^            idx = sub2ind(newsz, sub);$/;"	v
idx	lib/tensor_toolbox/tt_sub2ind.m	/^    idx = [];$/;"	v
idx	lib/tensor_toolbox/tt_sub2ind.m	/^idx = (subs - 1) * mult' + 1;$/;"	v
idx	lib/tensor_toolbox/tt_sub2ind64.m	/^    idx = [];$/;"	v
idx	lib/tensor_toolbox/tt_sub2ind64.m	/^    idx = uint64( sum( bsxfun( @times, uint64(subs-1), mult), 2 ) + 1 );   $/;"	v
idx1	lib/TrialData/Tools/removeBadTrials.m	/^                    idx1 = td.(ranges{i,1});$/;"	v
idx1	lib/TrialData/Tools/removeBadTrials.m	/^                idx1 = 1;$/;"	v
idx1	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    idx1 = zeros(Q,N);$/;"	v
idx1	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^    idx1 = sum(sz(1:n-1))*R + 1;$/;"	v
idx1	lib/tensor_toolbox/tt_fac_to_vec.m	/^    idx1 = sum(sz(1:n-1))*R + 1;$/;"	v
idx2	lib/TrialData/Tools/removeBadTrials.m	/^                    idx2 = td.(ranges{i,2});$/;"	v
idx2	lib/TrialData/Tools/removeBadTrials.m	/^                idx2 = size(td.(fn_time{1}),1);$/;"	v
idx2	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    idx2 = zeros(Q,N);$/;"	v
idx2	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^    idx2 = sum(sz(1:n))*R;$/;"	v
idx2	lib/tensor_toolbox/tt_fac_to_vec.m	/^    idx2 = sum(sz(1:n))*R;$/;"	v
idx_emg	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_emg = contains(emg.Properties.VariableNames,'EMG');$/;"	v
idx_empty	lib/TrialData/Tools/appendTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_empty	lib/TrialData/Tools/catTDs.m	/^idx_empty = false(size(varargin));$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = Inf;$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/Tools/splitTD.m	/^                    idx_end = split_idx(idx+1)+extra_bins(2)-1;$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^    idx_end   = varargin{2};$/;"	v
idx_end	lib/TrialData/Tools/trimTD.m	/^idx_end   = {};$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                    idx_end = go_cues(cue+1)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                    idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                idx_end = size(td.(fn_time{1}),1);$/;"	v
idx_end	lib/TrialData/td_limblab/getRWMovements.m	/^                idx_end = td.(end_name)+extra_bins(2);$/;"	v
idx_freq	lib/TrialData/util/process_lfp.m	/^        idx_freq = freq >= freq_bands(iBand,1)  &  freq  <= freq_bands(iBand,2);$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = find(ismember(fn,fn_idx));$/;"	v
idx_idx	lib/TrialData/Tools/reorderTDfields.m	/^idx_idx = idx_idx(I);$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                    idx_keep = data{iCol} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                idx_keep = data{iCol} >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                idx_keep = t >= 0;$/;"	v
idx_keep	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            idx_keep = t >= 0;$/;"	v
idx_start	lib/TrialData/Tools/splitTD.m	/^                    idx_start = 1;$/;"	v
idx_start	lib/TrialData/Tools/splitTD.m	/^                idx_start = split_idx(idx)-extra_bins(1);$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^    idx_start = varargin{1};$/;"	v
idx_start	lib/TrialData/Tools/trimTD.m	/^idx_start = {};$/;"	v
idx_start	lib/TrialData/td_limblab/getRWMovements.m	/^            idx_start = go_cues(cue)-extra_bins(1);$/;"	v
idx_trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_trials = 1:length(trials.result);$/;"	v
idx_trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^    idx_trials = find(ismember(trials.result,trial_results));$/;"	v
idx_vals	lib/TrialData/Analysis/runDPCA.m	/^    idx_vals = cell(1,num_conds);$/;"	v
idx_vars	lib/TrialData/Tools/stretchSignals.m	/^idx_vars = getTDfields(trial_data,'idx');$/;"	v
idxa	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            idxa = find((tf .* newvals) ~= 0);$/;"	v
idxb	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            idxb = find((tf .* ~abs(newvals)) ~= 0);$/;"	v
idxc	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            idxc = find((~tf .* newvals) ~= 0);$/;"	v
idxs	lib/tensor_toolbox/cp_arls.m	/^idxs = tt_sub2ind(dims, subs);$/;"	v
idxs	lib/tensor_toolbox/cp_arls.m	/^idxs = varargin{end};$/;"	v
iframe	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
ignorecols	lib/neuron-table/neuronAverage.m	/^        ignorecols = ismember(1:width(neuronTable),ignorecols);$/;"	v
ignorecols	lib/neuron-table/neuronAverage.m	/^        ignorecols = ismember(neuronTable.Properties.VariableNames,ignorecols);$/;"	v
ignorecols	lib/neuron-table/neuronAverage.m	/^ignorecols = {};$/;"	v
ih0	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ih0 = zeros(size(ihbasis,1),1);$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbas =   [ihbas; zeros(nextra,ncols)];$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbas = ihbas(1:niht,:);$/;"	v
ihbas	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ihbas = orth(ihbasis);  $/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbasis = [ihbasis; zeros(nextra,ncols)];$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        ihbasis = ihbasis(1:niht,:);$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ihbasis = [ih0,ihbasis];$/;"	v
ihbasis	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ihbasis = ff(repmat(nlin(iht+b), 1, ncols), repmat(ctrs, nt, 1), db);$/;"	v
iht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        iht = iht0;$/;"	v
iht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^iht = (dt:dt:mxt)';$/;"	v
ii	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ii = find(iht<absref);$/;"	v
ii	lib/tensor_toolbox/tucker_sym.m	/^    ii = find(diag(SS) > svdtol, 1, 'last');$/;"	v
img	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
img	lib/tensor_toolbox/doc/html/ttb.css	/^img { padding:0px; margin:0px 0px 20px; border:none; }$/;"	s
img	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="img">$/;"	m
img[@class='equation']	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="img[@class='equation']">$/;"	m
import_array	lib/tensor_toolbox/import_data.m	/^function data = import_array(fid, n)$/;"	f
import_data	lib/tensor_toolbox/import_data.m	/^function A = import_data(fname)$/;"	f
import_nnz	lib/tensor_toolbox/import_data.m	/^function nz = import_nnz(fid)$/;"	f
import_rank	lib/tensor_toolbox/import_data.m	/^function r = import_rank(fid)$/;"	f
import_size	lib/tensor_toolbox/import_data.m	/^function sz = import_size(fid)$/;"	f
import_sparse_array	lib/tensor_toolbox/import_data.m	/^function [subs, vals] = import_sparse_array(fid, n, nz)$/;"	f
import_type	lib/tensor_toolbox/import_data.m	/^function type = import_type(fid)$/;"	f
inArr	lib/neuron-table/getTDClassicalPDs.m	/^    inArr = get_vars(trial_data,in_signals(in_signal_idx,:));$/;"	v
inDir	lib/neuron-table/getTDClassicalPDs.m	/^    inDir = atan2(inArr(:,2),inArr(:,1));$/;"	v
inDir_resamp	lib/neuron-table/getTDClassicalPDs.m	/^                inDir_resamp = datasample(inDir,length(inDir),'Weights',sample_weight);$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    in_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
in_dims	lib/TrialData/Analysis/getPotentSpace.m	/^in_dims      =  [];$/;"	v
in_signal_name	lib/neuron-table/getPDsFromWeights.m	/^        in_signal_name = extractBefore(col_title,'Weight');$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals    =  {}; % {'name',idx; 'name',idx};$/;"	v
in_signals	lib/TrialData/Analysis/getModel.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals   =  [];$/;"	v
in_signals	lib/TrialData/Analysis/getPotentSpace.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/TrialData/td_limblab/addProcessedSignal.m	/^in_signals = '';$/;"	v
in_signals	lib/TrialData/td_limblab/addProcessedSignal.m	/^in_signals = check_signals(trial_data,in_signals);$/;"	v
in_signals	lib/neuron-table/getTDClassicalPDs.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/neuron-table/getTDClassicalPDs.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/neuron-table/getTDModelWeights.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/neuron-table/getTDModelWeights.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_signals	lib/neuron-table/getTDPDs.m	/^in_signals      = 'vel';$/;"	v
in_signals	lib/neuron-table/getTDPDs.m	/^in_signals = check_signals(trial_data(1),in_signals);$/;"	v
in_sigs	lib/TrialData/Analysis/runDPCA.m	/^        in_sigs = get_vars(trial_data(trialnum),signals);$/;"	v
inc	lib/tensor_toolbox/teneye.m	/^    inc = inc*flg + 1;  % Increment the counter.$/;"	v
inc	lib/tensor_toolbox/teneye.m	/^inc = 1;   % Controls which element of WV is being worked on.$/;"	v
include_naming	lib/TrialData/td_limblab/parseFileByTrial.m	/^include_naming =  false;$/;"	v
include_ts	lib/TrialData/td_limblab/parseFileByTrial.m	/^include_ts     =  false;$/;"	v
incomplete_idx	lib/load_curl_data.m	/^        incomplete_idx = [td.result]=='I';$/;"	v
ind	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        ind = {};$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = bsxfun(@times, ones(dims(1:end-1)), ind1);$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = ind1(:);$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = reshape(ind1, size(options.numOfTrials));$/;"	v
ind1	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind1 = zeros(1, length(neuronsConditions));$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = bsxfun(@times, ones(dims(1:end-1)), ind2);$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = ind2(:);$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = reshape(ind2, size(options.numOfTrials));$/;"	v
ind2	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    ind2 = zeros(1, length(neuronsConditions));$/;"	v
indM	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        indM = [paramsubsubsets{s} indMarg];$/;"	v
indMarg	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    indMarg = setdiff(params, indRest);$/;"	v
indRest	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    indRest = paramsubsets{subs};$/;"	v
indices	lib/tensor_toolbox/@symtensor/indices.m	/^function [I,C,W,Q] = indices(varargin)$/;"	f
indicesOfEvent	lib/TrialData/util/openNEV_td.m	/^                indicesOfEvent = find(tmp.NodeID == IDX-1);$/;"	v
indiv_params	lib/neuron-table/plotTuning.m	/^    indiv_params = params;$/;"	v
inds	lib/tensor_toolbox/@sptensor/reshape.m	/^    inds = tt_sub2ind(old_size,a.subs(:,old_modes));$/;"	v
inds	lib/tensor_toolbox/doc/tensor_doc.m	/^inds = [1; 24]; X(inds) %<-- Same thing with linear indices.$/;"	v
indx	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^            indx = indxc(indxr);$/;"	v
indx	lib/tensor_toolbox/@sptensor/contract.m	/^indx = find(x.subs(:,i) == x.subs(:,j));$/;"	v
indxc	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^          indxc = find(t.subs(:,2) == csubs(j));$/;"	v
indxr	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^            indxr = find(t.subs(indxc,1) == rsubs(i));$/;"	v
inexactNewton	lib/tensor_toolbox/cp_apr.m	/^inexactNewton           = params.Results.inexact;$/;"	v
inferno	lib/matlab-colors/PythonColors/Colormaps/inferno.m	/^function [cm_data]=inferno(m)$/;"	f
info	lib/tensor_toolbox/create_problem.m	/^info = struct;$/;"	v
info	lib/tensor_toolbox/doc/cp_apr_doc.m	/^info = create_problem('Soln', S, 'Sparse_Generation', nz);$/;"	v
info	lib/tensor_toolbox/doc/cp_arls_doc.m	/^info = create_problem('Size', sz, 'Num_Factors', R, 'Noise', ns, ...$/;"	v
info	lib/tensor_toolbox/doc/cp_opt_doc.m	/^info = create_problem('Size', [50 40 30], 'Num_Factors', R, 'Noise', 0.10);$/;"	v
info	lib/tensor_toolbox/doc/cp_opt_doc.m	/^info = create_problem('Size', [50 40 30], 'Num_Factors', R, 'Noise', 0.10,...$/;"	v
info	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^info = create_problem('Size', [50 40 30], 'Num_Factors', R, 'Noise', 0.10);$/;"	v
info	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^info = create_problem('Size', [15 10 5], 'Num_Factors', R, ...$/;"	v
info	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^info = create_problem('Size', [150 100 50], 'Num_Factors', R, ...$/;"	v
info	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^info = create_problem('Size', [15 10 5], 'Num_Factors', R, ...$/;"	v
info	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^info = create_problem('Size', [150 100 50], 'Num_Factors', R, ...$/;"	v
info	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^info = create_problem('Size', sz, ...$/;"	v
info	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^info = create_problem('Size',sz,'Num_Factors',nc);$/;"	v
info	lib/tensor_toolbox/doc/hosvd_doc.m	/^info = create_problem('Type','Tucker','Num_Factors',[5 4 3],'Size',[50 40 30],'Noise',0.01);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Size', [5 4 3], 'M', 0.80, 'Sparse_M', true);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Size', [5 4 3], 'Num_Factors', 2, ...$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Size', [5 4 3], 'Num_Factors', 3, 'Noise', 0.10);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Size', [5 4 3], 'Num_Factors', 3, ...$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Size', size(P), 'M', P);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Soln', S, 'Sparse_Generation', 500);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Soln', soln);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Type', 'Tucker', 'Size', [5 4 3], 'Num_Factors', [3 3 2]);$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem('Type', 'Tucker', 'Size', [5 4 3], ...$/;"	v
info	lib/tensor_toolbox/doc/test_problems_doc.m	/^info = create_problem;$/;"	v
info1	lib/tensor_toolbox/doc/cp_als_doc.m	/^info1 = viz(M1,'Figure',1,vizopts{:});$/;"	v
info1	lib/tensor_toolbox/doc/test_problems_doc.m	/^info1 = create_problem('Size', sz, 'Num_Factors', nf, 'State', state);$/;"	v
info2	lib/tensor_toolbox/doc/cp_als_doc.m	/^info2 = viz(M2,'Figure',2,vizopts{:});$/;"	v
info2	lib/tensor_toolbox/doc/test_problems_doc.m	/^info2 = create_problem('Size', sz, 'Num_Factors', nf, 'State', state);$/;"	v
info2	lib/tensor_toolbox/doc/test_problems_doc.m	/^info2 = create_problem(params);$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = params;$/;"	v
info_out	lib/TrialData/Tools/dimReduce.m	/^    info_out = struct('w',w,'scores',scores,'eigen',eigen,'mu',mu,'signals',{signals},'out_param/;"	v
init	lib/tensor_toolbox/cp_als.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/cp_arls.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/cp_nmu.m	/^init = setparam(opts,'init','random');$/;"	v
init	lib/tensor_toolbox/cp_opt.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/cp_wopt.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/gcp_opt.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/tucker_als.m	/^init = params.Results.init;$/;"	v
init	lib/tensor_toolbox/tucker_sym.m	/^init = params.Results.init;$/;"	v
initSignalStruct	lib/TrialData/DataProcessing/initSignalStruct.m	/^function signal_info = initSignalStruct(varargin)$/;"	f
init_fields	lib/tensor_toolbox/@symtensor/symtensor.m	/^function t = init_fields()$/;"	f
inittype	lib/tensor_toolbox/gcp_opt.m	/^    inittype = 'cell';$/;"	v
inittype	lib/tensor_toolbox/gcp_opt.m	/^    inittype = 'ktensor';$/;"	v
inittype	lib/tensor_toolbox/gcp_opt.m	/^    inittype = 'rand';$/;"	v
inliers	lib/neuron-table/comparePDClouds.m	/^    inliers = dists<prctile(dists,95);$/;"	v
inliers	lib/neuron-table/getTuningHull.m	/^        inliers = dists<prctile(dists,CIpercentile);$/;"	v
inliers	lib/neuron-table/plotWeightClouds.m	/^    inliers = dists<prctile(dists,95);$/;"	v
innerIterMaximum	lib/tensor_toolbox/cp_apr.m	/^                innerIterMaximum = 2;$/;"	v
innerIterMaximum	lib/tensor_toolbox/cp_apr.m	/^            innerIterMaximum = maxInnerIters;$/;"	v
innerprod	lib/tensor_toolbox/@ktensor/innerprod.m	/^function res = innerprod(X,Y)$/;"	f
innerprod	lib/tensor_toolbox/@sptensor/innerprod.m	/^function res = innerprod(X,Y)$/;"	f
innerprod	lib/tensor_toolbox/@sumtensor/innerprod.m	/^function res = innerprod(X,Y)$/;"	f
innerprod	lib/tensor_toolbox/@tensor/innerprod.m	/^function res = innerprod(X,Y)$/;"	f
innerprod	lib/tensor_toolbox/@ttensor/innerprod.m	/^function res = innerprod(X,Y)$/;"	f
innersubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    innersubs = [a.subs(:,adims); b.subs(:,bdims)];$/;"	v
inputArgument	lib/TrialData/util/openNSx_td.m	/^        inputArgument = str2num(inputArgument);$/;"	v
inputArgument	lib/TrialData/util/openNSx_td.m	/^    inputArgument = varargin{i};$/;"	v
input_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^    input_data = get_vars(trial_data(trial),in_signals);$/;"	v
input_var	lib/neuron-table/getTDPDs.m	/^input_var = get_vars(trial_data(trial_idx),in_signals);$/;"	v
ins	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
installation	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="installation">Installation<\/h3>$/;"	I
interpomap	lib/matlab-colors/linspecer/linspecer.m	/^function cmap = interpomap(n,cmapp)$/;"	f
invalid	lib/tensor_toolbox/@sptensor/private/extract.m	/^invalid = (srchsubs < 0) | (srchsubs > ones(p,1)*t.size);$/;"	v
invnl	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^invnl = @(x)exp(x)-1e-20; % inverse nonlinearity$/;"	v
iprod	lib/tensor_toolbox/cp_als.m	/^        iprod = sum(sum(P.U{dimorder(end)} .* U_mttkrp) .* lambda');$/;"	v
irenumber	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^function newsubs = irenumber(t, sz, range)$/;"	f
irisPlot	lib/neuron-table/irisPlot.m	/^function [tunedNeurons] = irisPlot( PM_pdData, DL_pdData)$/;"	f
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 0;$/;"	v
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 1;$/;"	v
isAcyclic	lib/TrialData/util/lib/isomap/dijk.m	/^   isAcyclic = 2;$/;"	v
isConverged	lib/tensor_toolbox/cp_apr.m	/^                isConverged = false;$/;"	v
isConverged	lib/tensor_toolbox/cp_apr.m	/^            isConverged = false;$/;"	v
isConverged	lib/tensor_toolbox/cp_apr.m	/^    isConverged = true;   $/;"	v
isConverged	lib/tensor_toolbox/cp_apr.m	/^    isConverged = true;  $/;"	v
isLab	lib/TrialData/util/lib/isomap/dijk.m	/^   isLab = logical(zeros(length(t),1));$/;"	v
isRowNOTconverged	lib/tensor_toolbox/cp_apr.m	/^        isRowNOTconverged = zeros(1,num_rows);$/;"	v
isSparse	lib/tensor_toolbox/cp_apr.m	/^    isSparse = false;$/;"	v
isSparse	lib/tensor_toolbox/cp_apr.m	/^    isSparse = true;$/;"	v
isSparse	lib/tensor_toolbox/create_problem.m	/^    isSparse = false;$/;"	v
isTranspose	lib/tensor_toolbox/@ktensor/ttm.m	/^  isTranspose =  (ischar(varargin{end}) && (varargin{end} == 't'));$/;"	v
isTranspose	lib/tensor_toolbox/@ktensor/ttm.m	/^isTranspose = false;$/;"	v
isTranspose	lib/tensor_toolbox/@ttensor/ttm.m	/^  isTranspose =  (ischar(varargin{end}) && (varargin{end} == 't'));$/;"	v
isTranspose	lib/tensor_toolbox/@ttensor/ttm.m	/^isTranspose = false;$/;"	v
isTuned	bumpcurl_analysis.m	/^    isTuned = checkIsTuned(opensimPDs{1},isTuned_params)...$/;"	v
isTuned	bumpcurl_analysis.m	/^    isTuned = checkIsTuned(spikesPDs{1},isTuned_params)...$/;"	v
isTuned	lib/neuron-table/getTDClassicalPDs.m	/^    isTuned = false(num_out_signals,1);$/;"	v
isTuned	lib/neuron-table/getTDPDs.m	/^isTuned = false(size(response_var,2),1);$/;"	v
isTuned_params	bumpcurl_analysis.m	/^    isTuned_params = struct('move_corr','vel','CIthresh',pi\/3);$/;"	v
isTuned_params	bumpcurl_analysis.m	/^    isTuned_params = struct('move_corr','vel','CIthresh',pi\/4);$/;"	v
isUnLab	lib/TrialData/util/lib/isomap/dijk.m	/^      isUnLab = logical(ones(n,1));$/;"	v
is_missing_data	lib/tensor_toolbox/create_problem.m	/^function tf = is_missing_data(x)$/;"	f
is_valid_matrix_generator	lib/tensor_toolbox/create_problem.m	/^function b = is_valid_matrix_generator(x)$/;"	f
is_valid_tensor_generator	lib/tensor_toolbox/create_problem.m	/^function b = is_valid_tensor_generator(x)$/;"	f
iscolon	lib/tensor_toolbox/tests/Test_Tensor.m	/^            iscolon = rand(nd,1) > 0.3; % Pick modes for range$/;"	v
iscolon	lib/tensor_toolbox/tests/Test_Tensor.m	/^            iscolon = rand(nd,1) > 0.5;$/;"	v
isdense	lib/tensor_toolbox/gcp_opt.m	/^isdense = isa(X,'tensor');$/;"	v
iseq	lib/tensor_toolbox/doc/test_problems_doc.m	/^iseq = isequal(soln,info.Soln)$/;"	v
isequal	lib/tensor_toolbox/@ktensor/isequal.m	/^function [tf, tf_lambda, tf_U] = isequal(A,B)$/;"	f
isequal	lib/tensor_toolbox/@sptensor/isequal.m	/^function z = isequal(x,y)$/;"	f
isequal	lib/tensor_toolbox/@symktensor/isequal.m	/^function [tf, tf_lambda, tf_U] = isequal(A,B)$/;"	f
isequal	lib/tensor_toolbox/@symtensor/isequal.m	/^function z = isequal(x,y)$/;"	f
isequal	lib/tensor_toolbox/@tensor/isequal.m	/^function z = isequal(x,y)$/;"	f
isequal	lib/tensor_toolbox/@ttensor/isequal.m	/^function [tf, tf_core, tf_U] = isequal(A,B)$/;"	f
isinfgrad	lib/tensor_toolbox/gcp_opt.m	/^            isinfgrad = cellfun(@(x) any(isinf(x(:))), Gest, 'UniformOutput', true);$/;"	v
iso_component	lib/TrialData/Tools/dimReduce.m	/^iso_component     = 1;      % which connected component to embed, if more than one.$/;"	v
iso_display	lib/TrialData/Tools/dimReduce.m	/^iso_display       = false;  % plot residual variance and 2-D embedding?$/;"	v
iso_function	lib/TrialData/Tools/dimReduce.m	/^iso_function      = 'k';    % neighborhood function ('epsilon' or 'k')$/;"	v
iso_info	lib/TrialData/util/lib/isomap/isomap.m	/^iso_info = struct( ...$/;"	v
iso_n	lib/TrialData/Tools/dimReduce.m	/^iso_n             = 12;     % neighborhood size (value for epsilon or k)$/;"	v
iso_opts	lib/TrialData/Tools/dimReduce.m	/^            iso_opts = struct( ...$/;"	v
isokay	lib/tensor_toolbox/create_problem.m	/^    isokay = zeros(N,1);$/;"	v
isomap	lib/TrialData/util/lib/isomap/isomap.m	/^function [Y, R, E, iso_info] = isomap(D, n_fcn, n_size, options)$/;"	f
isscalar	lib/tensor_toolbox/@ktensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@sptensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@sumtensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@symktensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@symtensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@tensor/isscalar.m	/^function output = isscalar(~)$/;"	f
isscalar	lib/tensor_toolbox/@ttensor/isscalar.m	/^function output = isscalar(~)$/;"	f
issparse	lib/tensor_toolbox/gcp_opt.m	/^issparse = isa(X,'sptensor');$/;"	v
issymmetric	lib/tensor_toolbox/@ktensor/issymmetric.m	/^function [tf,diffs] = issymmetric(X)$/;"	f
issymmetric	lib/tensor_toolbox/@symktensor/issymmetric.m	/^function tf = issymmetric(X)$/;"	f
issymmetric	lib/tensor_toolbox/@symtensor/issymmetric.m	/^function tf = issymmetric(t)$/;"	f
issymmetric	lib/tensor_toolbox/@tensor/issymmetric.m	/^function [tf,all_diffs,all_perms] = issymmetric(X,grps,ver)$/;"	f
issymver	lib/tensor_toolbox/tests/Test_Tensor.m	/^        issymver = struct('new', 0', 'old', 1);$/;"	v
iszero	lib/tensor_toolbox/tt_sample_zeros.m	/^iszero = ~builtin('_ismemberhelper',tmpidx,Xnzidx);$/;"	v
iter_data	lib/TrialData/Analysis/runDPCA.m	/^    iter_data = varargin{cell_idx};$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = UnLab(jj);$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = j + 1;$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^         j = j - 1;$/;"	v
j	lib/TrialData/util/lib/isomap/dijk.m	/^   j = s(i);$/;"	v
j	lib/tensor_toolbox/@ktensor/ttm.m	/^  j = 1; $/;"	v
j	lib/tensor_toolbox/@ktensor/ttm.m	/^  j = 2;$/;"	v
j	lib/tensor_toolbox/@symktensor/full.m	/^            j = j - 1;$/;"	v
j	lib/tensor_toolbox/@symktensor/full.m	/^        j = m;$/;"	v
j	lib/tensor_toolbox/@symtensor/indices.m	/^            j = j - 1;$/;"	v
j	lib/tensor_toolbox/@symtensor/indices.m	/^        j = m;$/;"	v
j	lib/tensor_toolbox/@symtensor/symtensor.m	/^                j = j - 1;$/;"	v
j	lib/tensor_toolbox/@symtensor/symtensor.m	/^            j = m;$/;"	v
j	lib/tensor_toolbox/@ttensor/ttm.m	/^  j = 1; $/;"	v
j	lib/tensor_toolbox/@ttensor/ttm.m	/^  j = 2;$/;"	v
joinTrials	lib/TrialData/Tools/joinTrials.m	/^function td_j = joinTrials(trial_data,params)$/;"	f
k	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      k = 1;$/;"	v
k	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      k = find(ws.kernSDList == kernSD);$/;"	v
k	lib/TrialData/util/compute_pseudo_R2.m	/^    k = (mean(Y).^2.\/var(Y));$/;"	v
k	lib/curvature.m	/^k = (dx.*ddy + dy.*ddx) .\/ (dx.^2+dy.^2).^(3\/2);$/;"	v
k	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^            k = k + 1;  % increment counter into b$/;"	v
k	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^        k = 0;$/;"	v
k	lib/tensor_toolbox/@symktensor/symktensor.m	/^k = length(t.lambda); $/;"	v
k	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^        k = [arg2{:}];        $/;"	v
k	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^        k = cat(dim,arg2{:});              $/;"	v
k	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^    k = arg2{1}(:).'; $/;"	v
k	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^k = floor(k);$/;"	v
k	lib/tensor_toolbox/@ttensor/ttensor.m	/^k = size(t.core); $/;"	v
k	lib/tensor_toolbox/cp_apr.m	/^        k = lbfgsSize - mod(1 - k, lbfgsSize);$/;"	v
k	lib/tensor_toolbox/cp_apr.m	/^        k = mod(k, lbfgsSize) + 1;$/;"	v
k	lib/tensor_toolbox/cp_apr.m	/^    k = lbfgs_pos;$/;"	v
k	lib/tensor_toolbox/cp_nmu.m	/^            k = min(R,size(X,n)-2);$/;"	v
k	lib/tensor_toolbox/tt_ind2sub.m	/^k = [1 cumprod(siz(1:end-1))];$/;"	v
k	lib/tensor_toolbox/tt_ind2sub64.m	/^k = uint64([1 cumprod(siz(1:end-1))]);$/;"	v
kappa	lib/tensor_toolbox/cp_apr.m	/^kappa         = params.Results.kappa;$/;"	v
kappaTol	lib/tensor_toolbox/cp_apr.m	/^kappaTol      = params.Results.kappatol;$/;"	v
kbd	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
keep_modes	lib/tensor_toolbox/@sptensor/reshape.m	/^    keep_modes = [];$/;"	v
keep_modes	lib/tensor_toolbox/@sptensor/reshape.m	/^    keep_modes = setdiff(1:ndims(a),old_modes);$/;"	v
keep_size	lib/tensor_toolbox/@sptensor/reshape.m	/^keep_size = a.size(keep_modes);$/;"	v
keepsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                keepsubs = setdiff(1:nnz(t),removesubs);$/;"	v
kernSD	lib/TrialData/Analysis/runGPFA.m	/^kernSD      =  0.03;$/;"	v
kernSD	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  kernSD = [];$/;"	v
kernSDList	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^kernSDList    = 20:5:80; % in msec$/;"	v
kernel	lib/TrialData/util/smooth_data.m	/^kernel = normpdf( -kernel_hl*(dt) : ...$/;"	v
kernel_hl	lib/TrialData/util/smooth_data.m	/^kernel_hl = ceil( 3 * kernel_SD \/ (dt) );$/;"	v
key	lib/neuron-table/getPDsFromWeights.m	/^        key = keyTable(key_idx,:);$/;"	v
key	lib/neuron-table/neuronAverage.m	/^    key = keyTable(key_idx,:);$/;"	v
keyTable	lib/neuron-table/getPDsFromWeights.m	/^keyTable = unique(weightTable(:,key_cols));$/;"	v
keyTable	lib/neuron-table/neuronAverage.m	/^keyTable = unique(neuronTable(:,keycols));$/;"	v
key_cols	lib/neuron-table/getPDsFromWeights.m	/^key_cols = contains(weightTable.Properties.VariableDescriptions,'meta');$/;"	v
keycols	lib/neuron-table/neuronAverage.m	/^        keycols = ismember(1:width(neuronTable),keycols);$/;"	v
keycols	lib/neuron-table/neuronAverage.m	/^        keycols = ismember(neuronTable.Properties.VariableNames,keycols);$/;"	v
keycols	lib/neuron-table/neuronAverage.m	/^keycols = strcmpi(neuronTable.Properties.VariableDescriptions,'meta');$/;"	v
keys	lib/neuron-table/comparePDClouds.m	/^keys = unique(pdTable1(:,{'monkey','date','signalID'}));$/;"	v
kf_model	lib/TrialData/Analysis/getModel.m	/^            kf_model = b;$/;"	v
kf_model	lib/TrialData/Analysis/getModel.m	/^            kf_model = train_kalman(x,y);$/;"	v
khatrirao	lib/tensor_toolbox/khatrirao.m	/^function P = khatrirao(varargin)$/;"	f
kin	lib/TrialData/Tools/binTD.m	/^            kin = zeros(length(t_bin)-1,size(temp,2));$/;"	v
kin_list	lib/TrialData/td_limblab/parseFileByTrial.m	/^kin_list = {'t','x','y','vx','vy','ax','ay'};$/;"	v
kin_rows	lib/TrialData/Plotting/visData.m	/^kin_rows           =   3;        % how many rows for kinematic plots$/;"	v
kktModeViolations	lib/tensor_toolbox/cp_apr.m	/^    kktModeViolations = zeros(N,1);$/;"	v
kktModeViolations	lib/tensor_toolbox/cp_apr.m	/^kktModeViolations = zeros(N,1);$/;"	v
kktViolations	lib/tensor_toolbox/cp_apr.m	/^kktViolations = -ones(maxOuterIters,1);$/;"	v
kkt_violation	lib/tensor_toolbox/cp_apr.m	/^                kkt_violation = max(abs(min(m_row,gradM')));$/;"	v
kpdims	lib/tensor_toolbox/@sptensor/subsref.m	/^                    kpdims = [kpdims i];$/;"	v
kpdims	lib/tensor_toolbox/@sptensor/subsref.m	/^            kpdims = [];                % dimensions to keep$/;"	v
kpdims	lib/tensor_toolbox/@tensor/subsref.m	/^                    kpdims = [kpdims i];$/;"	v
kpdims	lib/tensor_toolbox/@tensor/subsref.m	/^            kpdims = [];                % dimensions to keep$/;"	v
kploc	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                kploc = setdiff(1:nnz(t),rmloc);$/;"	v
ktensor	lib/tensor_toolbox/@ktensor/ktensor.m	/^function t = ktensor(varargin)$/;"	f
l	lib/TrialData/util/lib/isomap/IsomapII.m	/^             l = find(a==i); $/;"	v
l	lib/TrialData/util/lib/isomap/IsomapII.m	/^             l = length(a); $/;"	v
la	lib/tensor_toolbox/@ktensor/score.m	/^        la = A.lambda(ra);$/;"	v
label	lib/neuron-table/compareTuning.m	/^        label = ['Neuron ' num2str(signalIDs(neuron_idx,:))];$/;"	v
label	lib/neuron-table/compareTuning.m	/^        label = ['Neuron ' signalIDs(neuron_idx,:)];$/;"	v
label	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
labelNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            labelNames = zeros(length(sortedUnits),1);$/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            labels = labels';$/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            labels = match_labels('lfp',file_data_temp.labels,signal_info{iFile}/;"	v
labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        labels = file_data_temp.labels;$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^            labels = {};$/;"	v
labels	lib/TrialData/DataProcessing/processNEV.m	/^        labels = unique(nev_text);$/;"	v
labels	lib/TrialData/DataProcessing/processNSx.m	/^labels = {NSx.ElectrodesInfo.Label};$/;"	v
labels	lib/TrialData/Tools/joinTrials.m	/^        labels = trial_data(1).(fn_labels{fn_ctr});$/;"	v
labels	lib/TrialData/Tools/joinTrials.m	/^        labels = {trial_data.(fn_labels{fn_ctr})};$/;"	v
labels	lib/TrialData/td_limblab/parseFileByTrial.m	/^            labels = unique(labelNames,'stable');$/;"	v
labelsDim1	lib/tensor_toolbox/doc/ktensor_doc.m	/^labelsDim1 = {'one','two','three'}; %<-- Labels for mode 1.$/;"	v
labelsDim2	lib/tensor_toolbox/doc/ktensor_doc.m	/^labelsDim2 = {'A','B','C','D'}; %<-- Labels for mode 2.$/;"	v
labelsDim3	lib/tensor_toolbox/doc/ktensor_doc.m	/^labelsDim3 = {'on','off'}; %<-- Labels for mode 3.$/;"	v
lambda	lib/tensor_toolbox/@ktensor/ktensor.m	/^    lambda = ones(nc,1);$/;"	v
lambda	lib/tensor_toolbox/@ktensor/mask.m	/^lambda = X.lambda;$/;"	v
lambda	lib/tensor_toolbox/@ktensor/minus.m	/^    lambda = [A.lambda; -B.lambda];    $/;"	v
lambda	lib/tensor_toolbox/@ktensor/plus.m	/^    lambda = [A.lambda; B.lambda];    $/;"	v
lambda	lib/tensor_toolbox/@ktensor/symmetrize.m	/^lambda = X.lambda;$/;"	v
lambda	lib/tensor_toolbox/@symktensor/entry.m	/^lambda = model.lambda;$/;"	v
lambda	lib/tensor_toolbox/@symktensor/fg.m	/^lambda = Model.lambda;$/;"	v
lambda	lib/tensor_toolbox/cp_als.m	/^                lambda = max( max(abs(Unew),[],1), 1 )'; %max-norm$/;"	v
lambda	lib/tensor_toolbox/cp_als.m	/^                lambda = sqrt(sum(Unew.^2,1))'; %2-norm$/;"	v
lambda	lib/tensor_toolbox/cp_arls.m	/^                lambda = max( max(abs(Unew),[],1), 1 )'; %max-norm$/;"	v
lambda	lib/tensor_toolbox/cp_arls.m	/^                lambda = sqrt(sum(abs(Unew).^2,1))'; %2-norm$/;"	v
lambda	lib/tensor_toolbox/create_problem.m	/^        lambda = lgfh(nfactors(1),1);$/;"	v
lambda	lib/tensor_toolbox/doc/cp_apr_doc.m	/^lambda = rand(R,1);$/;"	v
lambda	lib/tensor_toolbox/doc/ktensor_doc.m	/^lambda = [5.0; 0.25]; %<-- Weights for each factor.$/;"	v
lambda	lib/tensor_toolbox/eig_geap.m	/^    lambda = newlambda;$/;"	v
lambda	lib/tensor_toolbox/eig_geap.m	/^lambda = data.Axm \/ data.Bxm;$/;"	v
lambda	lib/tensor_toolbox/eig_sshopm.m	/^    lambda = newlambda;$/;"	v
lambda	lib/tensor_toolbox/eig_sshopm.m	/^lambda = x'*ttsv(A,x,-1); $/;"	v
lambda	lib/tensor_toolbox/eig_sshopmc.m	/^    lambda = newlambda;$/;"	v
lambda	lib/tensor_toolbox/eig_sshopmc.m	/^lambda = x'*ttsv(A,x,-1); $/;"	v
lambda	lib/tensor_toolbox/import_data.m	/^    lambda = import_array(fid, r);$/;"	v
lambdaDamping	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^lambdaDamping = 0.8;$/;"	v
lambda_alpha	lib/tensor_toolbox/@symktensor/fg.m	/^    lambda_alpha = (1\/alpha) * (log(1 + exp(-alpha*lambda)) + log(1+exp(alpha*lambda)));$/;"	v
lambdaflag	lib/tensor_toolbox/@ktensor/ktensor.m	/^    lambdaflag = varargin{4};        $/;"	v
lambdaflag	lib/tensor_toolbox/@ktensor/tovec.m	/^    lambdaflag = true;$/;"	v
lambdatrace	lib/tensor_toolbox/eig_geap.m	/^lambdatrace = zeros(maxits+1,1);$/;"	v
landmarks	lib/TrialData/util/lib/isomap/IsomapII.m	/^landmarks = options.landmarks; $/;"	v
largeval	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^largeval = nthroot(max(oddsrange)\/nc,nd);$/;"	v
lasso_alpha	lib/TrialData/Analysis/getModel.m	/^lasso_alpha   =  0;$/;"	v
lasso_cv	lib/TrialData/Analysis/getModel.m	/^lasso_cv = 'resubstitution';$/;"	v
lasso_lambda	lib/TrialData/Analysis/getModel.m	/^lasso_lambda  =  0;$/;"	v
lasso_nlambda	lib/TrialData/Analysis/getModel.m	/^lasso_nlambda = 100;$/;"	v
last_end	lib/TrialData/Tools/joinTrials.m	/^        last_end = last_end + size(timevec,1);$/;"	v
last_end	lib/TrialData/Tools/joinTrials.m	/^    last_end = 0;$/;"	v
last_timestamp	lib/TrialData/util/remove_spike_artifacts.m	/^        last_timestamp = timestamps(end);$/;"	v
latex	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="latex"\/>$/;"	m
layer_sizes	lib/TrialData/Analysis/getModel.m	/^layer_sizes          =  10;        % how many feedforward layers in neural net$/;"	v
lb	lib/tensor_toolbox/@ktensor/score.m	/^            lb = B.lambda(rb);$/;"	v
lb	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    lb = zeros(R,1);$/;"	v
lb	lib/tensor_toolbox/@symktensor/fg_setup.m	/^lb = -Inf * ones(R,1);$/;"	v
lb	lib/tensor_toolbox/cp_sym.m	/^        lb = zeros(size(x0));$/;"	v
lb	lib/tensor_toolbox/cp_sym.m	/^    lb = -Inf * ones(size(x0));$/;"	v
lb	lib/tensor_toolbox/gcp_opt.m	/^        lb = -Inf;$/;"	v
lb	lib/tensor_toolbox/gcp_opt.m	/^        lb = lb_;$/;"	v
lb	lib/tensor_toolbox/gcp_opt.m	/^lb = params.Results.lower;$/;"	v
lbfgsPos	lib/tensor_toolbox/cp_apr.m	/^                            lbfgsPos = nSizeLBFGS;$/;"	v
lbfgsPos	lib/tensor_toolbox/cp_apr.m	/^                        lbfgsPos = lbfgsPos - 1;$/;"	v
lbfgsPos	lib/tensor_toolbox/cp_apr.m	/^                lbfgsPos = mod(lbfgsPos, nSizeLBFGS) + 1;$/;"	v
lbfgsPos	lib/tensor_toolbox/cp_apr.m	/^            lbfgsPos = 1;$/;"	v
lbfgsSize	lib/tensor_toolbox/cp_apr.m	/^    lbfgsSize = size(delta_m,2);$/;"	v
lbfgsbopts	lib/tensor_toolbox/gcp_opt.m	/^    lbfgsbopts = struct;$/;"	v
lbvec	lib/tensor_toolbox/gcp_opt.m	/^    lbvec = lb * ones(vecsz,1);$/;"	v
ldM	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    ldM   = sum(log(diag(chol(MM))));$/;"	v
lda_class_acc	bumpcurl_lda.m	/^    lda_class_acc = vertcat(file_results{:});$/;"	v
ldivide	lib/tensor_toolbox/@sptensor/ldivide.m	/^function C = ldivide(A,B)$/;"	f
ldivide	lib/tensor_toolbox/@symtensor/ldivide.m	/^function Z = ldivide(X,Y)$/;"	f
ldivide	lib/tensor_toolbox/@tensor/ldivide.m	/^function Z = ldivide(X,Y)$/;"	f
le	lib/tensor_toolbox/@sptensor/le.m	/^function z = le(x,y)$/;"	f
le	lib/tensor_toolbox/@symtensor/le.m	/^function Z = le(X,Y)$/;"	f
le	lib/tensor_toolbox/@tensor/le.m	/^function Z = le(X,Y)$/;"	f
learning_block_ranges	lib/get_dpca_var.m	/^    learning_block_ranges = 0:0.1:1;$/;"	v
learning_blocks	bumpcurl_lda.m	/^        learning_blocks = {...$/;"	v
learning_blocks	lib/get_dpca_var.m	/^        learning_blocks = cell(1,length(learning_block_ranges)-1);$/;"	v
learning_dPC_end	lib/get_dpca_var.m	/^                    learning_dPC_end = mean(data);$/;"	v
learning_metric_array	lib/get_dpca_var.m	/^        learning_metric_array = cell(length(spikes_in_td),num_boots,length(learning_blocks));$/;"	v
learning_metric_end	lib/get_dpca_var.m	/^                    learning_metric_end = mean(cat(1,td_block.learning_metric));$/;"	v
learning_metric_table	lib/get_dpca_var.m	/^    learning_metric_table = vertcat(learning_metric_cell{:});$/;"	v
legend	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
len	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    len = zeros(N,1);$/;"	v
len	lib/tensor_toolbox/cp_opt.m	/^len = sum(sz)*R;$/;"	v
len	lib/tensor_toolbox/cp_wopt.m	/^len = sum(sz)*R;$/;"	v
lfp_data	lib/TrialData/util/process_lfp.m	/^lfp_data = zeros(N,size(freq_bands,1)*size(data,2));$/;"	v
lfp_guide	lib/TrialData/Tools/getLFPidx.m	/^lfp_guide = trial_data(1).([array '_lfp_guide']);$/;"	v
lfp_method	lib/TrialData/util/process_lfp.m	/^lfp_method        =  'fft';    % 'fft' for now$/;"	v
lgfh	lib/tensor_toolbox/create_problem.m	/^        lgfh = get_generator(params.Lambda_Generator);$/;"	v
li	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
li	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="li">$/;"	m
li img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
lim	lib/tensor_toolbox/teneye.m	/^    lim = WV(K - inc + 1 );  % lim for next run. $/;"	v
lim	lib/tensor_toolbox/teneye.m	/^    lim = WV(K - inc + 1 );  % lim for next run.$/;"	v
lim	lib/tensor_toolbox/teneye.m	/^lim = K;   % Sets the limit for working index.$/;"	v
lims	lib/animateBumpcurlTrials.m	/^        lims = [min(min_field(1:3)) max(max_field(1:3))];$/;"	v
lin_cols	lib/neuron-table/neuronAverage.m	/^    lin_cols = ~circ_cols & ~meta_cols & ~cell_cols;$/;"	v
linclassidx	lib/tensor_toolbox/@tensor/issymmetric.m	/^            linclassidx = tt_sub2ind(size(X), classidx);$/;"	v
linclassidx	lib/tensor_toolbox/@tensor/symmetrize.m	/^            linclassidx = tt_sub2ind(size(X), classidx);$/;"	v
line	lib/tensor_toolbox/import_data.m	/^        line = fgets(fid);$/;"	v
line	lib/tensor_toolbox/import_data.m	/^line = fgets(fid);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^                lineStyles = cmap2linspecer(colorm(N));$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^                lineStyles = set3(1:N)';$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = cmap2linspecer(colorm(N));$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = colorBrew2mat(colorblindSet);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = colorm(N);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = set1(1:N);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = set1JL(1:N)';$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = whiteFade(N);return;$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'blue');return;$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'gray');return;$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'green');return;$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = whiteFade(N,'red');return;$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^            lineStyles = { [  55, 126, 184]\/255};$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^    lineStyles = linspecer(128);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^    lineStyles = linspecer(128,N);$/;"	v
lineStyles	lib/matlab-colors/linspecer/linspecer.m	/^lineStyles = cell2mat(lineStyles);$/;"	v
line_noise_freq	lib/TrialData/util/process_lfp.m	/^line_noise_freq   =  50;       % 60 for US, 50 for Europe$/;"	v
line_width	lib/TrialData/Plotting/visData.m	/^line_width         =   2;        % standard line width$/;"	v
linestyle	lib/plot_trace_projections.m	/^    linestyle = '-';$/;"	v
linestyle	lib/plot_traces.m	/^    linestyle = '-';$/;"	v
linked_fields	lib/TrialData/Tools/splitTD.m	/^linked_fields      =  {}; % list of meta etc fields linked to split_idx$/;"	v
linspecer	lib/matlab-colors/linspecer/linspecer.m	/^function lineStyles=linspecer(N,varargin)$/;"	f
ll	lib/TrialData/util/circular_mean.m	/^  ll = mu - t;$/;"	v
lm_bl	lib/TrialData/td_limblab/getLearningMetrics.m	/^                lm_bl = fitlm(sincos,temp_err);$/;"	v
loadTDfiles	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [master_td, params] = loadTDfiles(filenames,varargin)$/;"	f
load_curl_data	lib/load_curl_data.m	/^function trial_data_cell = load_curl_data(filenames)$/;"	f
loc	lib/tensor_toolbox/@ktensor/update.m	/^        loc = endloc+1;                        $/;"	v
loc	lib/tensor_toolbox/@ktensor/update.m	/^        loc = endloc+1;        $/;"	v
loc	lib/tensor_toolbox/@ktensor/update.m	/^loc = 1; % Location in data array$/;"	v
loc	lib/tensor_toolbox/@sptensor/private/subdims.m	/^        loc = loc(tf);$/;"	v
loc	lib/tensor_toolbox/@sptensor/private/subdims.m	/^    loc = [];$/;"	v
loc	lib/tensor_toolbox/@sptensor/private/subdims.m	/^loc = (1:size(subs,1))';$/;"	v
loc	lib/tensor_toolbox/@sptensor/subsref.m	/^            loc = subdims(region, t);$/;"	v
loglike	lib/tensor_toolbox/cp_apr.m	/^loglike = tt_loglikelihood(X,M);$/;"	v
loop_me_twice	lib/TrialData/Analysis/runDPCA.m	/^function valCat = loop_me_twice(dim,valCat,val,valIdx,depthCount,varargin)$/;"	f
loops_all_the_way_down	lib/TrialData/Analysis/runDPCA.m	/^function val = loops_all_the_way_down(val,varargin)$/;"	f
loops_for_fr	lib/TrialData/Analysis/runDPCA.m	/^function [val,valIdx] = loops_for_fr(depthCount,valIdx,val,trial_data,signals,max_trial_num,vara/;"	f
loprob	lib/tensor_toolbox/create_problem_binary.m	/^loprob = params.Results.loprob;$/;"	v
losubs	lib/tensor_toolbox/create_problem_binary.m	/^        losubs = tt_sample_zeros(X, tt_sub2ind(sz,hisubs), nlow, 1.1, false);$/;"	v
loval	lib/tensor_toolbox/create_problem_binary.m	/^loval = nthroot(loprob\/(1-loprob),d);$/;"	v
lower	lib/tensor_toolbox/cp_opt.m	/^    lower = convert_bound(lower,sz,R);$/;"	v
lower	lib/tensor_toolbox/cp_opt.m	/^lower = params.Results.lower;$/;"	v
lower	lib/tensor_toolbox/cp_wopt.m	/^    lower = convert_bound(lower,sz,R);$/;"	v
lower	lib/tensor_toolbox/cp_wopt.m	/^lower = params.Results.lower;$/;"	v
lower	lib/tensor_toolbox/tests/Test_Tensor.m	/^                        lower = randi(sz(k)-1);$/;"	v
lowerbnd	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        lowerbnd = -Inf;        $/;"	v
lowerbnd	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        lowerbnd = -Inf;$/;"	v
lowerbnd	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        lowerbnd = 0;$/;"	v
lp_cutoff	lib/TrialData/Tools/getEnvelope.m	/^lp_cutoff    =  20;$/;"	v
lsgn	lib/tensor_toolbox/@ktensor/tocell.m	/^lsgn = sign(X.lambda);$/;"	v
lsplit	lib/tensor_toolbox/@ktensor/tocell.m	/^lsplit = nthroot(abs(X.lambda),ndims(X));$/;"	v
lsz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            lsz = combo(2);$/;"	v
lsz	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            lsz = n * ones(1,m);$/;"	v
lt	lib/tensor_toolbox/@sptensor/lt.m	/^function z = lt(x,y)$/;"	f
lt	lib/tensor_toolbox/@symtensor/lt.m	/^function Z = lt(X,Y)$/;"	f
lt	lib/tensor_toolbox/@tensor/lt.m	/^function Z = lt(X,Y)$/;"	f
lw	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^lw = 2;$/;"	v
m	lib/TrialData/Tools/centerSignals.m	/^    m = mean(getSig(trial_data,signals(iSig,:)),1);$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = mean(getSig(trial_data,signals{1,1}),1);$/;"	v
m	lib/TrialData/Tools/getEnvelope.m	/^        m = zeros(1,size(trial_data(1).(signals{1,1}),2));$/;"	v
m	lib/TrialData/Tools/subtractConditionMean.m	/^    m = mean(cat(3,td.(fn{i})),3);$/;"	v
m	lib/tensor_toolbox/@ktensor/size.m	/^    m = [];$/;"	v
m	lib/tensor_toolbox/@ktensor/size.m	/^    m = size(t.u{idx}, 1);$/;"	v
m	lib/tensor_toolbox/@sptenmat/aatx.m	/^m = size(a,1);$/;"	v
m	lib/tensor_toolbox/@sptenmat/double.m	/^m = prod(T.tsize(T.rdims));$/;"	v
m	lib/tensor_toolbox/@sptenmat/size.m	/^m = prod(a.tsize(a.rdims));$/;"	v
m	lib/tensor_toolbox/@sptensor/size.m	/^    m = t.size(idx);$/;"	v
m	lib/tensor_toolbox/@sptensor/size.m	/^    m = t.size;$/;"	v
m	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                        m = m + 1;$/;"	v
m	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                m = 1;$/;"	v
m	lib/tensor_toolbox/@sptensor/ttt.m	/^    m = 1;$/;"	v
m	lib/tensor_toolbox/@sptensor/ttt.m	/^    m = length(junk2);$/;"	v
m	lib/tensor_toolbox/@sumtensor/size.m	/^    m = [];$/;"	v
m	lib/tensor_toolbox/@sumtensor/size.m	/^    m = size(t.part{1});$/;"	v
m	lib/tensor_toolbox/@sumtensor/size.m	/^    m = size(t.part{1},idx);$/;"	v
m	lib/tensor_toolbox/@symktensor/entry.m	/^m = size(I,2);$/;"	v
m	lib/tensor_toolbox/@symktensor/full.m	/^m = ndims(t);$/;"	v
m	lib/tensor_toolbox/@symktensor/symktensor.m	/^    m = varargin{2};$/;"	v
m	lib/tensor_toolbox/@symtensor/full.m	/^        m = X.m;       $/;"	v
m	lib/tensor_toolbox/@symtensor/indices.m	/^    m = ndims(A);$/;"	v
m	lib/tensor_toolbox/@symtensor/indices.m	/^    m = varargin{1};$/;"	v
m	lib/tensor_toolbox/@symtensor/symtensor.m	/^    m = ndims(src);$/;"	v
m	lib/tensor_toolbox/@symtensor/symtensor.m	/^    m = varargin{2};$/;"	v
m	lib/tensor_toolbox/@symtensor/tenfun.m	/^m = length(sz{1});$/;"	v
m	lib/tensor_toolbox/@tensor/contract.m	/^m =  prod(newsize);$/;"	v
m	lib/tensor_toolbox/@tensor/size.m	/^    m = t.size(idx);$/;"	v
m	lib/tensor_toolbox/@tensor/size.m	/^    m = t.size;$/;"	v
m	lib/tensor_toolbox/@ttensor/size.m	/^    m = [];$/;"	v
m	lib/tensor_toolbox/@ttensor/size.m	/^    m = size(t.u{idx}, 1);$/;"	v
m	lib/tensor_toolbox/doc/symktensor_doc.m	/^m = 3; %The number of modes of A$/;"	v
m	lib/tensor_toolbox/eig_geap.m	/^m = data.m;$/;"	v
m	lib/tensor_toolbox/eig_sshopm.m	/^m = ndims(A);$/;"	v
m	lib/tensor_toolbox/gcp_opt.m	/^                m = cellfun(@(mk,gk) beta1*mk + (1-beta1)*gk,m,Gest,'UniformOutput',false);$/;"	v
m	lib/tensor_toolbox/gcp_opt.m	/^            m = msave;$/;"	v
m	lib/tensor_toolbox/gcp_opt.m	/^        m = [];$/;"	v
m	lib/tensor_toolbox/gcp_opt.m	/^        m = cell(nd,1);$/;"	v
m	lib/tensor_toolbox/teneye.m	/^    m = G(n-1);$/;"	v
m	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        m = struct( 'three', 3, 'one', 1 );$/;"	v
m	lib/tensor_toolbox/tests/Test_Tensor.m	/^            m = 3;$/;"	v
m_left	lib/tensor_toolbox/@tensor/mttkrps.m	/^        m_left = m_left*sz(s);$/;"	v
m_new	lib/tensor_toolbox/cp_apr.m	/^        m_new = m_new .* (m_new > 0);$/;"	v
m_new	lib/tensor_toolbox/cp_apr.m	/^        m_new = m_old + (stepSize .* d);$/;"	v
m_new	lib/tensor_toolbox/cp_apr.m	/^        m_new = m_old .* phi_row;                % multiplicative update$/;"	v
m_right	lib/tensor_toolbox/@tensor/mttkrps.m	/^    m_right = m_right\/sz(s);$/;"	v
m_row	lib/tensor_toolbox/cp_apr.m	/^                m_row = m_rowNEW;$/;"	v
m_row	lib/tensor_toolbox/cp_apr.m	/^            m_row = M{n}(jj,:);$/;"	v
m_rowOLD	lib/tensor_toolbox/cp_apr.m	/^                    m_rowOLD = m_row;$/;"	v
m_rowOLD	lib/tensor_toolbox/cp_apr.m	/^                m_rowOLD = m_row;$/;"	v
m_rowOLD	lib/tensor_toolbox/cp_apr.m	/^            m_rowOLD = [];$/;"	v
mag	lib/TrialData/util/orthogonalize.m	/^    mag   = sqrt(L' * L);$/;"	v
magma	lib/matlab-colors/PythonColors/Colormaps/magma.m	/^function [cm_data]=magma(m)$/;"	f
mainStart	lib/tensor_toolbox/gcp_opt.m	/^    mainStart = tic;$/;"	v
mainTime	lib/tensor_toolbox/gcp_opt.m	/^    mainTime = toc(mainStart);$/;"	v
makeBasis_PostSpike	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^function [iht, ihbas, ihbasis] = makeBasis_PostSpike(ihprs,dt,iht0)$/;"	f
makeNeuronTableStarter	lib/neuron-table/makeNeuronTableStarter.m	/^function neuronTable = makeNeuronTableStarter(trial_data,params)$/;"	f
map	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^map = tril(a,-1)+triu(b);$/;"	v
map	lib/tensor_toolbox/@sptensor/private/renumber.m	/^map = zeros(1, sz);$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    margNums = 1:length(options.combinedParams);$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    margNums = [];$/;"	v
margNums	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^margNums = 1:length(YY);$/;"	v
margRowSeq	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        margRowSeq = 1:max(options.whichMarg);$/;"	v
margRowSeq	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        margRowSeq = [options.timeMarginalization setdiff(1:max(options.whichMarg), options.time/;"	v
marg_colors	lib/TrialData/Analysis/runDPCA.m	/^marg_colors      = [150 150 150; 23 100 171; 187 20 25; 114 97 171]\/256; % blue, red, grey, pur/;"	v
marg_names	lib/TrialData/Analysis/runDPCA.m	/^marg_names       = {'time','target','learning','target\/learning interaction'};$/;"	v
margin	lib/tensor_toolbox/eig_geap.m	/^margin = p.Results.Margin;$/;"	v
margin	lib/tensor_toolbox/eig_sshopm.m	/^margin = p.Results.Margin;$/;"	v
margsToAdd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                    margsToAdd = [margsToAdd k];$/;"	v
margsToAdd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^        margsToAdd = [];$/;"	v
margvar_array	lib/get_dpca_var.m	/^        margvar_array = cell(length(spikes_in_td),num_boots);$/;"	v
margvar_table	lib/get_dpca_var.m	/^    margvar_table = vertcat(margvar_cell{:});$/;"	v
marker_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        marker_analog_idx = i;$/;"	v
marker_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^marker_analog_idx = 0;$/;"	v
marker_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^marker_data    =  [];$/;"	v
marker_names	lib/TrialData/td_limblab/parseFileByTrial.m	/^    marker_names = markers.Properties.VariableNames;$/;"	v
marker_postfix	lib/TrialData/td_limblab/parseFileByTrial.m	/^    marker_postfix = {'_x','_y','_z'};$/;"	v
markername	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        markername = 'Marker_1';$/;"	v
markername	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        markername = 'Pronation_Pt1';$/;"	v
markernans	lib/load_curl_data.m	/^                markernans = isnan(td(trialnum).markers);$/;"	v
markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^    markers = markers(:,2:end); % get rid of frames column$/;"	v
markersList	lib/TrialData/td_limblab/parseFileByTrial.m	/^    markersList = new_markers.Properties.VariableNames;$/;"	v
markervec	bumpcurl_tensors.m	/^            markervec = 1:size(signal_factors,1);$/;"	v
markervec	lib/plotTensorDecomp.m	/^    markervec = 1:size(signal_factors,1);$/;"	v
mask	lib/tensor_toolbox/@ktensor/mask.m	/^function vals = mask(X,W)$/;"	f
mask	lib/tensor_toolbox/@sptensor/mask.m	/^function vals = mask(X,W)$/;"	f
mask	lib/tensor_toolbox/@tensor/mask.m	/^function vals = mask(X,W)$/;"	f
master_fn	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_fn = fieldnames(master_td);$/;"	v
master_idx	lib/TrialData/Tools/reorderTDfields.m	/^master_idx = [meta_idx; idx_idx; cont_idx; neural_idx];$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^            master_sg = setdiff(master_sg, bad_idx, 'rows');$/;"	v
master_sg	lib/TrialData/Tools/getCommonUnits.m	/^    master_sg = trial_data(1).([array '_unit_guide']);$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^        master_td = [master_td, td];$/;"	v
master_td	lib/TrialData/DataProcessing/loadTDfiles.m	/^master_td = reorderTDfields(master_td);$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^        master_td = [master_td,td];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = [];$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^    master_td = varargin{1};$/;"	v
master_td	lib/TrialData/Tools/catTDs.m	/^master_td  =  check_td_quality(master_td);$/;"	v
mat1	lib/tensor_toolbox/eig_geap.m	/^    mat1 = symprod(Bxm1,Bxm1);$/;"	v
mat2	lib/tensor_toolbox/eig_geap.m	/^    mat2 = symprod(Axm1,x);$/;"	v
mat3	lib/tensor_toolbox/eig_geap.m	/^    mat3 = symprod(Axm1,Bxm1);$/;"	v
mat4	lib/tensor_toolbox/eig_geap.m	/^mat4 = eye(n) + (m-2) * xxt;$/;"	v
mat5	lib/tensor_toolbox/eig_geap.m	/^    mat5 = symprod(Bxm1,x);$/;"	v
matPath	lib/TrialData/util/openNEV_td.m	/^matPath = [fileFullPath(1:end-4) '.mat'];$/;"	v
match_labels	lib/TrialData/DataProcessing/convertDataToTD.m	/^function [idx,error_flag] = match_labels(which_type,file_labels, which_label)$/;"	f
matorder	lib/tensor_toolbox/cp_arls.m	/^matorder = numfactors:-1:1;$/;"	v
matorder	lib/tensor_toolbox/khatrirao.m	/^    matorder = 1:length(A);$/;"	v
matorder	lib/tensor_toolbox/khatrirao.m	/^    matorder = length(A):-1:1;$/;"	v
matrandcong	lib/tensor_toolbox/matrandcong.m	/^function X = matrandcong(m,n,gamma)$/;"	f
matrandnorm	lib/tensor_toolbox/matrandnorm.m	/^function X = matrandnorm(varargin)$/;"	f
matrandorth	lib/tensor_toolbox/matrandorth.m	/^function M=matrandorth(n, tol)$/;"	f
maxFR	lib/neuron-table/compareTuning.m	/^    maxFR = repmat(maxFR,size(signalIDs,1),1);$/;"	v
maxFR	lib/neuron-table/compareTuning.m	/^maxFR = 0;$/;"	v
maxFR	lib/neuron-table/plotTuning.m	/^        maxFR = max(max(neuron_table.(curve_colname)));$/;"	v
maxFR	lib/neuron-table/plotTuning.m	/^        maxFR = max(max(neuron_table.(sprintf('%sCIhigh',curve_colname))));$/;"	v
maxFR	lib/neuron-table/plotTuning.m	/^    maxFR = 0;$/;"	v
maxFR	lib/neuron-table/plotTuning.m	/^maxFR = [];$/;"	v
maxFRs	bumpcurl_analysis.m	/^    maxFRs = max(spikes,[],1);$/;"	v
maxInnerIters	lib/tensor_toolbox/cp_apr.m	/^maxInnerIters           = params.Results.maxinneriters;$/;"	v
maxInnerIters	lib/tensor_toolbox/cp_apr.m	/^maxInnerIters = params.Results.maxinneriters;$/;"	v
maxNSPChannels	lib/TrialData/util/openNSx_td.m	/^maxNSPChannels  = 128;$/;"	v
maxOuterIters	lib/tensor_toolbox/cp_apr.m	/^maxOuterIters           = params.Results.maxiters;$/;"	v
maxOuterIters	lib/tensor_toolbox/cp_apr.m	/^maxOuterIters = params.Results.maxiters;$/;"	v
max_field	lib/animateBumpcurlTrials.m	/^max_field = max(cat(1,td.(field)));$/;"	v
max_rad	plotBumpcurlTuning.m	/^    max_rad = 0;$/;"	v
max_rad	plotBumpcurlTuning.m	/^    max_rad = max(exp(offset(:,neurctr)+moddepth(:,neurctr)));$/;"	v
max_shift	lib/TrialData/Tools/dupeAndShift.m	/^max_shift = max(cellfun(@(x) max(abs(x)), all_shifts));$/;"	v
max_trial_num	lib/TrialData/Analysis/runDPCA.m	/^max_trial_num = max(loops_all_the_way_down(0,conditions{:}));$/;"	v
maxdim	lib/tensor_toolbox/tests/Test_Tensor.m	/^        maxdim = struct( 'ten', 10, 'three', 3, 'one', 1 );$/;"	v
maxentries	lib/tensor_toolbox/@ktensor/datadisp.m	/^maxentries = setparam(opts,'maxentries',10);$/;"	v
maxepochs	lib/tensor_toolbox/cp_arls.m	/^maxepochs = params.Results.maxepochs;$/;"	v
maxfails	lib/tensor_toolbox/gcp_opt.m	/^maxfails = params.Results.maxfails;$/;"	v
maxfit	lib/tensor_toolbox/cp_arls.m	/^        maxfit = fit;$/;"	v
maxfit	lib/tensor_toolbox/cp_arls.m	/^maxfit = 0;$/;"	v
maxiters	lib/tensor_toolbox/cp_als.m	/^maxiters = params.Results.maxiters;$/;"	v
maxiters	lib/tensor_toolbox/cp_nmu.m	/^maxiters = setparam(opts,'maxiters',500);$/;"	v
maxiters	lib/tensor_toolbox/gcp_opt.m	/^maxiters = params.Results.maxiters;$/;"	v
maxiters	lib/tensor_toolbox/tucker_als.m	/^maxiters = params.Results.maxiters;$/;"	v
maxiters	lib/tensor_toolbox/tucker_sym.m	/^maxiters = params.Results.maxiters;$/;"	v
maxits	lib/tensor_toolbox/eig_geap.m	/^maxits = p.Results.MaxIts;$/;"	v
maxits	lib/tensor_toolbox/eig_sshopm.m	/^maxits = p.Results.MaxIts;$/;"	v
maxits	lib/tensor_toolbox/eig_sshopmc.m	/^maxits = p.Results.MaxIts;$/;"	v
mch	lib/tensor_toolbox/teneye.m	/^mch = prod((M:(M+K-1)) .\/ (1:K));  % Pre-allocation.$/;"	v
mcode-xmlized	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mcode-xmlized">$/;"	m
mcodeoutput	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mcodeoutput">$/;"	m
mdl	bumpcurl_lda.m	/^                        mdl = fitcdiscr(fr_train(:,:,timepoint),class_train,'discrimtype','pseud/;"	v
meanTable_circ	lib/neuron-table/neuronAverage.m	/^    meanTable_circ = varfun(@circ_mean,dataTable(:,circ_cols));$/;"	v
meanTable_lin	lib/neuron-table/neuronAverage.m	/^        meanTable_lin = varfun(@mean,dataTable(:,lin_cols));$/;"	v
meanTable_lin	lib/neuron-table/neuronAverage.m	/^        meanTable_lin = varfun(@nanmean,dataTable(:,lin_cols));$/;"	v
meanY	lib/TrialData/util/compute_vaf.m	/^    meanY = mean(Y,1);$/;"	v
mean_append	lib/neuron-table/getPDsFromWeights.m	/^    mean_append = zeros(height(pdTable),1);$/;"	v
mean_dists	lib/TrialData/util/lib/isomap/IsomapII.m	/^mean_dists = zeros(N,1);$/;"	v
mean_fr	lib/TrialData/Analysis/runDPCA.m	/^    mean_fr = mean(firing_rates(:,:)');$/;"	v
means	lib/neuron-table/comparePDClouds.m	/^    means = [circ_mean(pdTable_unit1.([move_corr 'PD'])) circ_mean(pdTable_unit2.([move_corr 'PD/;"	v
means	lib/neuron-table/getTuningHull.m	/^        means = mean(clust);$/;"	v
means	lib/neuron-table/plotWeightClouds.m	/^    means = mean(clust);$/;"	v
memflag	lib/tensor_toolbox/cp_wopt.m	/^        memflag = true;$/;"	v
memflag	lib/tensor_toolbox/cp_wopt.m	/^    memflag = true;$/;"	v
mend	lib/tensor_toolbox/@ktensor/ktensor.m	/^        mend = nc*sum(sz(1:n))+shift;$/;"	v
meta	lib/TrialData/Tools/joinTrials.m	/^        meta = trial_data(1).(fn_meta{fn_ctr});$/;"	v
meta	lib/TrialData/Tools/joinTrials.m	/^        meta = {trial_data.(fn_meta{fn_ctr})};$/;"	v
meta_cols	lib/neuron-table/neuronAverage.m	/^    meta_cols = strcmpi(dataTable.Properties.VariableDescriptions,'meta');$/;"	v
meta_header_idx	lib/neuron-table/getTuningHull.m	/^meta_header_idx = contains(tuningTable.Properties.VariableDescriptions,'meta');$/;"	v
meta_idx	lib/TrialData/Tools/reorderTDfields.m	/^meta_idx = find(~(ismember(fn,fn_idx) | ismember(fn,fn_neural) | ismember(fn,fn_cont)));$/;"	v
meta_table	bumpcurl_lda.m	/^            meta_table = makeNeuronTableStarter(td_ad,struct('out_signal_names',{spikes_in_td(ar/;"	v
meta_vars	lib/TrialData/Tools/getTDfields.m	/^meta_vars = {'monkey','date','task','perturbation','trial_id','target_direction','target_center'/;"	v
metafield	lib/neuron-table/makeNeuronTableStarter.m	/^        metafield = params.meta.(fields{fn});$/;"	v
method	lib/TrialData/Analysis/pairwiseCorr.m	/^method           =  @corr;$/;"	v
method	lib/TrialData/Analysis/runGPFA.m	/^method      =  'gpfa';$/;"	v
method	lib/TrialData/Tools/addFiringRates.m	/^method        = 'averageInBin';$/;"	v
method	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^method = 'markers';$/;"	v
method	lib/TrialData/td_limblab/coord_test.m	/^    method = {'opensim','markers'};$/;"	v
method	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^method        = 'gpfa';$/;"	v
metric	bumpcurl_analysis.m	/^    metric = getLearningMetrics(td,struct('which_metric','angle','fit_bl_ref_curve',true,'vel_or/;"	v
metric	bumpcurl_dpca.m	/^        metric = cat(1,td.learning_metric);$/;"	v
metric	exploreData.m	/^metric = getLearningMetrics(td,struct('which_metric','angle','fit_bl_ref_curve',true,'vel_or_pos/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_pseudo_R2(y_test(bs),y_fit(bs),mean(y_test));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_r2(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_rel_pseudo_R2(y_test(bs),y_fit(bs),y_fit2(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^            metric = compute_vaf(y_test(bs),y_fit(bs));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = metric(:,1);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^        metric = squeeze(metric(:,:,1));$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(length(trial_idx)-1,sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = NaN(sum(cellfun(@(x) length(x),out_signals(:,2))),2);$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = [mean(metric) - std(metric); mean(metric) + std(metric)];$/;"	v
metric	lib/TrialData/Analysis/evalModel.m	/^    metric = prctile(metric,[2.5,97.5]);$/;"	v
metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^        metric = -metric;$/;"	v
metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^metric = zeros(length(trial_data),1);$/;"	v
metric	lib/load_curl_data.m	/^        metric = getLearningMetrics(td_temp,struct(...$/;"	v
metric_cell	lib/load_curl_data.m	/^        metric_cell = num2cell(metric);$/;"	v
mexFunction	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void mexFunction($/;"	f	typeref:typename:void
mhat	lib/tensor_toolbox/gcp_opt.m	/^                mhat = cellfun(@(mk) mk\/(1-beta1^titers),m,'UniformOutput',false);$/;"	v
minDescentTol	lib/tensor_toolbox/cp_apr.m	/^    minDescentTol = 1.0e-7;$/;"	v
minFR	lib/neuron-table/plotTuning.m	/^minFR = 0;$/;"	v
minFactorRatio	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^minFactorRatio = 95\/100;$/;"	v
minL	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            minL = min(length(options.whichMarg), size(options.componentsSignif,1));$/;"	v
minSplit	lib/tensor_toolbox/@ktensor/full.m	/^function [minS]=minSplit(sz)$/;"	f
minVarFrac	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  minVarFrac = 0.01;$/;"	v
min_ds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^min_ds           =  1.9;$/;"	v
min_field	lib/animateBumpcurlTrials.m	/^min_field = min(cat(1,td.(field)));$/;"	v
min_fr	lib/TrialData/Tools/removeBadNeurons.m	/^min_fr          =  0;$/;"	v
min_split	lib/tensor_toolbox/@tensor/mttkrps.m	/^function [s_min]=min_split(sz)$/;"	f
minus	lib/tensor_toolbox/@ktensor/minus.m	/^function C = minus(A,B)$/;"	f
minus	lib/tensor_toolbox/@sptensor/minus.m	/^function C = minus(A,B)$/;"	f
minus	lib/tensor_toolbox/@symtensor/minus.m	/^function Z = minus(X,Y)$/;"	f
minus	lib/tensor_toolbox/@tenmat/minus.m	/^function Z = minus(X,Y)$/;"	f
minus	lib/tensor_toolbox/@tensor/minus.m	/^function Z = minus(X,Y)$/;"	f
minusPi2Pi	lib/TrialData/util/minusPi2Pi.m	/^function out = minusPi2Pi(in)$/;"	f
mldivide	lib/tensor_toolbox/@sptensor/mldivide.m	/^function C = mldivide(A,B)$/;"	f
mldivide	lib/tensor_toolbox/@symtensor/mldivide.m	/^function Z = mldivide(X,Y)$/;"	f
mldivide	lib/tensor_toolbox/@tensor/mldivide.m	/^function Z = mldivide(X,Y)$/;"	f
mlocal	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            mlocal = 3;$/;"	v
mlocal	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            mlocal = 4;$/;"	v
moddepth	plotTuningDistr.m	/^moddepth = sqrt(sum(glm_info.b(2:3,:).^2,1));$/;"	v
moddepthArr	lib/neuron-table/getTDPDs.m	/^moddepthArr = zeros(size(response_var,2),1);$/;"	v
moddepthCIArr	lib/neuron-table/getTDPDs.m	/^moddepthCIArr = zeros(size(response_var,2),2);$/;"	v
moddepthCI_append	lib/neuron-table/getPDsFromWeights.m	/^    moddepthCI_append = zeros(height(pdTable),2);$/;"	v
moddepth_append	lib/neuron-table/getPDsFromWeights.m	/^    moddepth_append = zeros(height(pdTable),1);$/;"	v
moddepths	lib/neuron-table/getTDPDs.m	/^            moddepths = sqrt(sum(boot_coef(:,(2*in_signal_idx):(2*in_signal_idx+1)).^2,2));$/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 1; $/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 2; $/;"	v
mode	lib/TrialData/util/lib/isomap/IsomapII.m	/^     mode = 3; $/;"	v
modeidx	lib/tensor_toolbox/create_problem_binary.m	/^        modeidx = cell(d,1);$/;"	v
model	lib/tensor_toolbox/cp_sym.m	/^model = symktensor(x,data.M,data.P,data.fgopts.nolambda);$/;"	v
modelIDs	lib/neuron-table/plotWeightClouds.m	/^modelIDs = unique(tuningTable(:,{'monkey','date','signalID'}));$/;"	v
model_eval	lib/neuron-table/getTDModelWeights.m	/^    model_eval = squeeze(evalModel(td_temp,eval_params))';$/;"	v
model_eval_table	lib/neuron-table/getTDModelWeights.m	/^    model_eval_table = array2table(model_eval,'VariableNames',strcat({prefix},'eval'));$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct( ...$/;"	v
model_info	lib/TrialData/Analysis/getModel.m	/^        model_info = struct(...$/;"	v
model_name	lib/TrialData/Analysis/evalModel.m	/^model_name       =  [];$/;"	v
model_name	lib/TrialData/Analysis/getModel.m	/^model_name    =  'default';$/;"	v
model_name	lib/TrialData/Analysis/getNoiseCovar.m	/^model_name      =  'default';$/;"	v
model_params	lib/TrialData/TrialData_tutorial.m	/^model_params = struct( ...$/;"	v
model_params	lib/neuron-table/getTDModelWeights.m	/^model_params = struct('model_type',model_type,'model_name','temp',...$/;"	v
model_type	lib/TrialData/Analysis/evalModel.m	/^model_type       =  '';$/;"	v
model_type	lib/TrialData/Analysis/getModel.m	/^model_type    =  '';$/;"	v
model_type	lib/neuron-table/getTDModelWeights.m	/^model_type = 'glm';$/;"	v
modeled_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^modeled_signals =  {};$/;"	v
modeled_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^modeled_signals = check_signals(trial_data(1),modeled_signals);$/;"	v
modes	lib/tensor_toolbox/create_guess.m	/^modes = setdiff(1:nd,params.Skip);$/;"	v
modifiedTime	lib/TrialData/util/openNSx_td.m	/^        modifiedTime = 1;$/;"	v
monkey	lib/neuron-table/makeNeuronTableStarter.m	/^monkey = repmat({trial_data(1).monkey},tab_height,1);$/;"	v
moreComponents	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg == margRowSeq(i), 3);$/;"	v
moreComponents	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^            moreComponents = find(options.whichMarg(1:minL) == margRowSeq(i) & ...$/;"	v
moresubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^    moresubs = intersect(A.subs,Bzerosubs,'rows');$/;"	v
moresubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^    moresubs = intersect(Azerosubs,Bzerosubs,'rows');$/;"	v
morevals	lib/tensor_toolbox/@sptensor/rdivide.m	/^    morevals = repmat(Inf, size(moresubs,1),1);$/;"	v
morevals	lib/tensor_toolbox/@sptensor/rdivide.m	/^    morevals = repmat(NaN, size(moresubs,1),1);$/;"	v
move_corr	lib/neuron-table/comparePDClouds.m	/^move_corr      =  'vel';$/;"	v
move_corr	lib/neuron-table/comparePDs.m	/^move_corr      =  '';$/;"	v
move_corr	lib/neuron-table/getTDPDs.m	/^        move_corr = in_signals{in_signal_idx,1};$/;"	v
move_corr	lib/neuron-table/getTuningCurves.m	/^move_corr      =  'vel';$/;"	v
move_corr	lib/neuron-table/getTuningCurves.m	/^move_corr = check_signals(trial_data(1),move_corr);$/;"	v
move_corr	lib/neuron-table/plotWeightClouds.m	/^move_corr      =  'vel';$/;"	v
move_inds	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    move_inds = false(size(s));$/;"	v
move_var	lib/neuron-table/getTuningCurves.m	/^move_var = get_vars(trial_data,move_corr);$/;"	v
mrdivide	lib/tensor_toolbox/@sptensor/mrdivide.m	/^function C = mrdivide(A,B)$/;"	f
mrdivide	lib/tensor_toolbox/@symtensor/mrdivide.m	/^function Z = mrdivide(X,Y)$/;"	f
mrdivide	lib/tensor_toolbox/@tensor/mrdivide.m	/^function Z = mrdivide(X,Y)$/;"	f
msave	lib/tensor_toolbox/gcp_opt.m	/^            msave = m;$/;"	v
msave	lib/tensor_toolbox/gcp_opt.m	/^    msave = m;                      % Corresponding ADAM parameters$/;"	v
mscript	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mscript">$/;"	m
msg	lib/neuron-table/neuronAverage.m	/^        msg = sprintf('Some columns have VariableDescriptions not labeled linear or circular... /;"	v
mstart	lib/tensor_toolbox/@ktensor/ktensor.m	/^        mstart = nc*sum(sz(1:n-1))+shift+1;$/;"	v
mtimes	lib/tensor_toolbox/@ktensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@sptensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@symktensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@symtensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@tenmat/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@tensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mtimes	lib/tensor_toolbox/@ttensor/mtimes.m	/^function C = mtimes(A,B)$/;"	f
mttkrp	lib/tensor_toolbox/@ktensor/mttkrp.m	/^function V = mttkrp(X,U,n)$/;"	f
mttkrp	lib/tensor_toolbox/@sptensor/mttkrp.m	/^function V = mttkrp(X,U,n)$/;"	f
mttkrp	lib/tensor_toolbox/@sumtensor/mttkrp.m	/^function V = mttkrp(X,U,n)$/;"	f
mttkrp	lib/tensor_toolbox/@tensor/mttkrp.m	/^function V = mttkrp(X,U,n,vers)$/;"	f
mttkrp	lib/tensor_toolbox/@ttensor/mttkrp.m	/^function V = mttkrp(X,U,n)$/;"	f
mttkrps	lib/tensor_toolbox/@tensor/mttkrps.m	/^function V = mttkrps(X,U)$/;"	f
mttv_left	lib/tensor_toolbox/@tensor/mttkrps.m	/^function W_out = mttv_left(W_in, U1)$/;"	f
mttv_mid	lib/tensor_toolbox/@tensor/mttkrps.m	/^function V = mttv_mid(W_in, U_mid)$/;"	f
mu	lib/TrialData/Tools/dimReduce.m	/^                    mu = info_out.mu;$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                    mu = mean(get_vars(trial_data,signals),1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = mean(data,1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = zeros(1,size(data,2));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^                mu = zeros(1,sum(n_signals));$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^            mu = mean(data,1);$/;"	v
mu	lib/TrialData/Tools/dimReduce.m	/^mu                = [];     % mu is the mean from fitting, only filled if info_out is passed in$/;"	v
mu	lib/TrialData/util/circular_mean.m	/^mu = angle(r);$/;"	v
mu	lib/tensor_toolbox/cp_apr.m	/^                    mu = (2\/7) * mu;$/;"	v
mu	lib/tensor_toolbox/cp_apr.m	/^                    mu = (7\/2) * mu;$/;"	v
mu	lib/tensor_toolbox/cp_apr.m	/^                    mu = 10 * mu;$/;"	v
mu	lib/tensor_toolbox/cp_apr.m	/^            mu = mu0;$/;"	v
mu0	lib/tensor_toolbox/cp_apr.m	/^mu0                     = params.Results.mu0;$/;"	v
mu_in	lib/TrialData/Analysis/getPotentSpace.m	/^mu_in = pca_info_in.mu;$/;"	v
mu_out	lib/TrialData/Analysis/getPotentSpace.m	/^mu_out = pca_info_out.mu;$/;"	v
mult	lib/tensor_toolbox/tt_sub2ind.m	/^mult = [1 cumprod(siz(1:end-1))];$/;"	v
mult	lib/tensor_toolbox/tt_sub2ind64.m	/^    mult = uint64( [1 cumprod(siz(1:end-1))] );$/;"	v
multinomial	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^function c = multinomial(n,varargin)$/;"	f
mvals	lib/tensor_toolbox/tt_gcp_fg_est.m	/^    mvals = [];$/;"	v
mvals	lib/tensor_toolbox/tt_gcp_fg_est.m	/^mvals = sum(Zexp{d} .* Uexp{d},2);$/;"	v
mvt_peak	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        mvt_peak = find(peaks & (1:length(peaks))' > trial_data(trial).(start_idx)+peak_idx_offs/;"	v
mwsh	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  exclude-result-prefixes="mwsh">$/;"	n	uri:http://www.mathworks.com/namespace/mcode/v1/syntaxhighlight.dtd
mwsh:code	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:code">$/;"	m
mwsh:comments	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:comments">$/;"	m
mwsh:keywords	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:keywords">$/;"	m
mwsh:strings	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:strings">$/;"	m
mwsh:system_commands	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:system_commands">$/;"	m
mwsh:unterminated_strings	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="mwsh:unterminated_strings">$/;"	m
mxt	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^mxt = invnl(yrnge(2)+2*db)-b;  % maximum time bin$/;"	v
myFig	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^myFig = figure('Position', [0 0 1800 1000]);$/;"	v
myfun	lib/tensor_toolbox/doc/sptensor_doc.m	/^myfun = @(x) sum(x) \/ 3; %<-- Total sum divided by three.$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = 1;$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^        n = length(return_idx);$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^    n = fv{idx};$/;"	v
n	lib/TrialData/Tools/getTDidx.m	/^n = NaN; % use this as a flag$/;"	v
n	lib/matlab-colors/linspecer/linspecer.m	/^    n = varargin{1};$/;"	v
n	lib/matlab-colors/linspecer/linspecer.m	/^n = 100;$/;"	v
n	lib/neuron-table/getNTidx.m	/^        n = 1;$/;"	v
n	lib/neuron-table/getNTidx.m	/^        n = length(return_idx);$/;"	v
n	lib/neuron-table/getNTidx.m	/^    n = fv{idx};$/;"	v
n	lib/tensor_toolbox/@ktensor/fixsigns.m	/^        n = negidx(i);$/;"	v
n	lib/tensor_toolbox/@ktensor/issymmetric.m	/^n = ndims(X);$/;"	v
n	lib/tensor_toolbox/@ktensor/ncomponents.m	/^n = length(t.lambda);$/;"	v
n	lib/tensor_toolbox/@ktensor/ndims.m	/^n = numel(t.u);$/;"	v
n	lib/tensor_toolbox/@ktensor/symmetrize.m	/^n = ndims(X);$/;"	v
n	lib/tensor_toolbox/@sptenmat/aatx.m	/^n = size(a,2);$/;"	v
n	lib/tensor_toolbox/@sptenmat/double.m	/^n = prod(T.tsize(T.cdims));$/;"	v
n	lib/tensor_toolbox/@sptenmat/nnz.m	/^n = length(a.vals);$/;"	v
n	lib/tensor_toolbox/@sptenmat/size.m	/^n = prod(a.tsize(a.cdims));$/;"	v
n	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    n = numel(tsize);$/;"	v
n	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^n = ndims(T);$/;"	v
n	lib/tensor_toolbox/@sptensor/ndims.m	/^n = size(t.size,2);$/;"	v
n	lib/tensor_toolbox/@sptensor/ttm.m	/^        n = varargin{1};$/;"	v
n	lib/tensor_toolbox/@sptensor/ttm.m	/^    n = varargin{1};$/;"	v
n	lib/tensor_toolbox/@sptensor/ttm.m	/^n = 1:ndims(X);$/;"	v
n	lib/tensor_toolbox/@sptensor/ttt.m	/^    n = 1;$/;"	v
n	lib/tensor_toolbox/@sptensor/ttt.m	/^    n = length(junk);$/;"	v
n	lib/tensor_toolbox/@sumtensor/ndims.m	/^n = ndims(t.part{1});$/;"	v
n	lib/tensor_toolbox/@sumtensor/norm.m	/^n = 0;$/;"	v
n	lib/tensor_toolbox/@symktensor/full.m	/^n = size(t,1);$/;"	v
n	lib/tensor_toolbox/@symktensor/ncomponents.m	/^n = length(t.lambda);$/;"	v
n	lib/tensor_toolbox/@symktensor/ndims.m	/^n = t.m;$/;"	v
n	lib/tensor_toolbox/@symktensor/symktensor.m	/^   n = size(A,1);$/;"	v
n	lib/tensor_toolbox/@symtensor/full.m	/^        n = X.n;$/;"	v
n	lib/tensor_toolbox/@symtensor/indices.m	/^    n = size(A,1);$/;"	v
n	lib/tensor_toolbox/@symtensor/indices.m	/^    n = varargin{2};    $/;"	v
n	lib/tensor_toolbox/@symtensor/ndims.m	/^n = t.m;$/;"	v
n	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^n = floor(n);$/;"	v
n	lib/tensor_toolbox/@symtensor/symtensor.m	/^    n = size(src,1);$/;"	v
n	lib/tensor_toolbox/@symtensor/symtensor.m	/^    n = varargin{3};$/;"	v
n	lib/tensor_toolbox/@symtensor/tenfun.m	/^n = sz{1}(1);$/;"	v
n	lib/tensor_toolbox/@tenmat/norm.m	/^n = norm(v);$/;"	v
n	lib/tensor_toolbox/@tenmat/tenmat.m	/^    n = numel(tsize);$/;"	v
n	lib/tensor_toolbox/@tenmat/tenmat.m	/^n = ndims(T);$/;"	v
n	lib/tensor_toolbox/@tensor/contract.m	/^n = x.size(i);$/;"	v
n	lib/tensor_toolbox/@tensor/issymmetric.m	/^n = ndims(X);$/;"	v
n	lib/tensor_toolbox/@tensor/ndims.m	/^n = numel(t.size);$/;"	v
n	lib/tensor_toolbox/@tensor/nnz.m	/^n = nnz(x.data);$/;"	v
n	lib/tensor_toolbox/@tensor/norm.m	/^n = norm(v);$/;"	v
n	lib/tensor_toolbox/@tensor/subsasgn.m	/^            n = ndims(x);$/;"	v
n	lib/tensor_toolbox/@tensor/symmetrize.m	/^n = ndims(X);$/;"	v
n	lib/tensor_toolbox/@tensor/ttm.m	/^        n = varargin{1};$/;"	v
n	lib/tensor_toolbox/@tensor/ttm.m	/^    n = varargin{1};$/;"	v
n	lib/tensor_toolbox/@tensor/ttm.m	/^n = 1:ndims(X);$/;"	v
n	lib/tensor_toolbox/@tensor/ttsv.m	/^    n = 0;$/;"	v
n	lib/tensor_toolbox/@tensor/ttv.m	/^    n = n-1;$/;"	v
n	lib/tensor_toolbox/@tensor/ttv.m	/^n = ndims(a);$/;"	v
n	lib/tensor_toolbox/@ttensor/ndims.m	/^n = numel(t.u);$/;"	v
n	lib/tensor_toolbox/cp_sym.m	/^        n = names{i};$/;"	v
n	lib/tensor_toolbox/doc/multiply_doc.m	/^n = 2; %<--the dimension to matricize with respect to.$/;"	v
n	lib/tensor_toolbox/doc/symktensor_doc.m	/^n = 4; %The dimension in each mode of the tensor A$/;"	v
n	lib/tensor_toolbox/eig_geap.m	/^n = size(x,1);$/;"	v
n	lib/tensor_toolbox/import_data.m	/^n = sscanf(line, '%d');$/;"	v
n	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        n = struct( 'ten', 10, 'three', 3, 'one', 1);$/;"	v
n	lib/tensor_toolbox/tests/Test_Tensor.m	/^                n = randi(nd);$/;"	v
n	lib/tensor_toolbox/tests/Test_Tensor.m	/^            n = 4;$/;"	v
n	lib/tensor_toolbox/tests/Test_Tensor.m	/^            n = min(nx, prod(sz)); % Number of values in list$/;"	v
n	lib/tensor_toolbox/tests/Test_Tensor.m	/^            n = randi(maxdim);$/;"	v
n	lib/tensor_toolbox/tt_ind2sub.m	/^n = length(siz);$/;"	v
n	lib/tensor_toolbox/tt_ind2sub64.m	/^n = length(siz);$/;"	v
nAk	lib/tensor_toolbox/@tensor/ttm.m	/^        nAk = sz(n) * ncols; % Number entries in each block of A$/;"	v
nBk	lib/tensor_toolbox/@tensor/ttm.m	/^        nBk = p * ncols;$/;"	v
nIn	lib/tensor_toolbox/@symtensor/private/multinomial.m	/^nIn = nargin;$/;"	v
nInnerIters	lib/tensor_toolbox/cp_apr.m	/^nInnerIters   = zeros(maxOuterIters,1);$/;"	v
nInnerIters	lib/tensor_toolbox/cp_apr.m	/^nInnerIters = zeros(maxOuterIters,1);$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = 0;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = j - 1;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = n - j;$/;"	v
nLab	lib/TrialData/util/lib/isomap/dijk.m	/^      nLab = nLab + 1;$/;"	v
nPlotMax	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^nPlotMax   = 20;$/;"	v
nSizeLBFGS	lib/tensor_toolbox/cp_apr.m	/^nSizeLBFGS              = params.Results.lbfgsMem;$/;"	v
nViolations	lib/tensor_toolbox/cp_apr.m	/^nViolations = zeros(maxOuterIters,1);$/;"	v
n_bins	lib/TrialData/td_limblab/subspace_demo.m	/^n_bins = 3;$/;"	v
n_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^n_comps = length(comps);           %% number of connected components$/;"	v
n_comps	lib/TrialData/util/lib/isomap/isomap.m	/^n_comps = length(comps);               %% number of connected components$/;"	v
n_connect	lib/TrialData/util/lib/isomap/isomap.m	/^n_connect = sum(~(D==INF));        %% number of points each point connects to$/;"	v
n_poles	lib/TrialData/td_limblab/parseFileByTrial.m	/^n_poles     =  4;  % for EMG butterworth filter$/;"	v
n_poles	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^n_poles         = 0;   % for high pass filter on threshold (0 means no filter)$/;"	v
n_rows	lib/neuron-table/compareTuning.m	/^n_rows = ceil(sqrt(size(signalIDs,1)+1));$/;"	v
n_shifts	lib/TrialData/Tools/dupeAndShift.m	/^        n_shifts =  length(the_shifts);$/;"	v
n_signals	lib/TrialData/Tools/dimReduce.m	/^    n_signals = cellfun(@(x) length(x),signals(:,2));$/;"	v
n_time	lib/TrialData/Tools/getNorm.m	/^        n_time = size(data,1);$/;"	v
name	lib/tensor_toolbox/@ktensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@sptenmat/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@sptensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@sumtensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@symktensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@symtensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@tenmat/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@tensor/disp.m	/^    name = 'ans';$/;"	v
name	lib/tensor_toolbox/@ttensor/disp.m	/^    name = 'ans';$/;"	v
names	lib/tensor_toolbox/@symktensor/fg_setup.m	/^names = arrayfun(@inputname,1:nargin,'UniformOutput',false);$/;"	v
names	lib/tensor_toolbox/cp_sym.m	/^    names = fieldnames(options);$/;"	v
nan_bins	lib/TrialData/td_limblab/parseFileByTrial.m	/^    nan_bins = NaN(size(all_events));$/;"	v
nan_idx_names	lib/TrialData/Tools/removeBadTrials.m	/^nan_idx_names = 'all';$/;"	v
nanmmean	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function Y = nanmmean(X, dimlist)$/;"	f
nanners	lib/TrialData/util/resample_signals.m	/^    nanners = isnan(data(:,i));$/;"	v
nanners	lib/load_curl_data.m	/^        nanners = isnan(cat(1,td.tgtDir));$/;"	v
nansubs	lib/tensor_toolbox/@sptensor/mldivide.m	/^        nansubs = setdiff(allsubs(A),newsubs,'rows');$/;"	v
nansubs	lib/tensor_toolbox/@sptensor/mrdivide.m	/^        nansubs = setdiff(allsubs(A),newsubs,'rows');$/;"	v
nbig	lib/tensor_toolbox/doc/cp_apr_doc.m	/^        nbig = round( (1\/R)*sz(n) );$/;"	v
nbig	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^    nbig = 5;$/;"	v
nbins	plotBumpcurlTuning.m	/^nbins = 12;$/;"	v
nblocks	lib/tensor_toolbox/@tensor/ttm.m	/^        nblocks = prod(sz(n+1:N));$/;"	v
nbr_chs	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_chs = size(trial_data(1).(signal),2);$/;"	v
nbr_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^nbr_trials = cellfun(@(x) length(getTDidx(trial_data,condition,x)),num2cell(unique([trial_data.(/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            nc = numComps(i);$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            nc = numComps;$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        nc = numComps(margNums(i));$/;"	v
nc	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        nc = numComps;$/;"	v
nc	lib/tensor_toolbox/@ktensor/ktensor.m	/^        nc = length(x) \/ (sum(sz) + 1);$/;"	v
nc	lib/tensor_toolbox/@ktensor/ktensor.m	/^        nc = length(x) \/ sum(sz);$/;"	v
nc	lib/tensor_toolbox/@ktensor/ktensor.m	/^    nc = length(t.lambda);$/;"	v
nc	lib/tensor_toolbox/@ktensor/ktensor.m	/^    nc = size(u{1},2);$/;"	v
nc	lib/tensor_toolbox/@ktensor/ktensor.m	/^    nc = varargin{3};$/;"	v
nc	lib/tensor_toolbox/@ktensor/viz.m	/^nc = ncomponents(K); % Rank$/;"	v
nc	lib/tensor_toolbox/create_problem.m	/^nc = size(P.U{1},2);$/;"	v
nc	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^nc = 2; $/;"	v
nc	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^nc = 3; % Number of components$/;"	v
nc	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^nc = 3;$/;"	v
nc	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    nc = length(C);$/;"	v
ncg_opts	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^ncg_opts = ncg('defaults');$/;"	v
ncg_opts	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^ncg_opts = ncg('defaults');$/;"	v
nclasses	lib/tensor_toolbox/maintenance/capabilitychart.m	/^nclasses = 7;$/;"	v
ncol	bumpcurl_tensors.m	/^            ncol = length(M.U);$/;"	v
ncol	lib/plotTensorDecomp.m	/^    ncol = 3;$/;"	v
ncols	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    ncols = ncols-1;$/;"	v
ncols	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^ncols = ihprs.ncols;$/;"	v
ncols	lib/tensor_toolbox/@tensor/ttm.m	/^        ncols = prod(sz(1:n-1)); % Per block$/;"	v
ncols	lib/tensor_toolbox/cp_arls.m	/^ncols = cellfun(@(x) size(x, 2), A);$/;"	v
ncols	lib/tensor_toolbox/khatrirao.m	/^ncols = cellfun(@(x) size(x, 2), A);$/;"	v
ncols	lib/tensor_toolbox/matrandorth.m	/^            ncols = n;$/;"	v
ncols	lib/tensor_toolbox/matrandorth.m	/^            ncols = tol;$/;"	v
ncols	lib/tensor_toolbox/matrandorth.m	/^        ncols = n;$/;"	v
ncomponents	lib/tensor_toolbox/@ktensor/ncomponents.m	/^function n = ncomponents(t)$/;"	f
ncomponents	lib/tensor_toolbox/@symktensor/ncomponents.m	/^function n = ncomponents(t)$/;"	f
ncopies	lib/tensor_toolbox/@tensor/symmetrize.m	/^            ncopies = prod(cellfun(@length,combos(i+1:end)));$/;"	v
nd	lib/tensor_toolbox/@ktensor/ktensor.m	/^    nd = length(sz);$/;"	v
nd	lib/tensor_toolbox/@ktensor/ktensor.m	/^    nd = varargin{3};$/;"	v
nd	lib/tensor_toolbox/@ktensor/viz.m	/^nd = ndims(K); % Order$/;"	v
nd	lib/tensor_toolbox/create_guess.m	/^nd = length(sz);$/;"	v
nd	lib/tensor_toolbox/create_problem.m	/^nd = length(sz);$/;"	v
nd	lib/tensor_toolbox/create_problem.m	/^nd = ndims(P);$/;"	v
nd	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^nd = length(sz); % Number of dimensions$/;"	v
nd	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^nd = length(sz);$/;"	v
nd	lib/tensor_toolbox/gcp_opt.m	/^nd  = ndims(X);$/;"	v
nd	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            nd = combo(1);$/;"	v
nd	lib/tensor_toolbox/tests/Test_Tensor.m	/^            nd = 4;$/;"	v
nd	lib/tensor_toolbox/tests/Test_Tensor.m	/^        nd = struct( 'three', 3, 'one', 1 );$/;"	v
ndim	lib/estimateBumpFromPCA.m	/^ndim = 10;$/;"	v
ndims	lib/tensor_toolbox/@ktensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@sptensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@sumtensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@symktensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@symtensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@tensor/ndims.m	/^function n = ndims(t)$/;"	f
ndims	lib/tensor_toolbox/@ttensor/ndims.m	/^function n = ndims(t)$/;"	f
ndimsA	lib/tensor_toolbox/cp_arls.m	/^ndimsA = cellfun(@ndims, A);$/;"	v
ndimsA	lib/tensor_toolbox/khatrirao.m	/^ndimsA = cellfun(@ndims, A);$/;"	v
ne	lib/tensor_toolbox/@sptensor/ne.m	/^function z = ne(x,y)$/;"	f
ne	lib/tensor_toolbox/@symtensor/ne.m	/^function Z = ne(X,Y)$/;"	f
ne	lib/tensor_toolbox/@tensor/ne.m	/^function Z = ne(X,Y)$/;"	f
nedges	lib/tensor_toolbox/create_problem.m	/^    nedges = round(nedges * prod(size(P)));$/;"	v
nedges	lib/tensor_toolbox/create_problem.m	/^nedges = params.Sparse_Generation;$/;"	v
negidx	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    negidx = find(sgn == -1);$/;"	v
nelems	lib/tensor_toolbox/@tensor/symmetrize.m	/^            nelems = length(combos{i});$/;"	v
nelx	lib/tensor_toolbox/tt_sample_semistrat.m	/^nelx = prod(sz); % Number of elements in X$/;"	v
nelx	lib/tensor_toolbox/tt_sample_stratified.m	/^nelx = prod(sz); % Number of elements in X$/;"	v
nelx	lib/tensor_toolbox/tt_sample_zeros.m	/^nelx = prod(sz); % Number of entries in X$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = feedforwardnet(layer_sizes, train_func);$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^            net = train(net, x', y');$/;"	v
net	lib/TrialData/Analysis/getModel.m	/^net = b;$/;"	v
neuralIndices	lib/TrialData/util/openNEV_td.m	/^neuralIndices              = find(neuralIndicesPacketIDBounds(2) >= PacketIDs & PacketIDs >= neu/;"	v
neuralIndicesPacketIDBounds	lib/TrialData/util/openNEV_td.m	/^neuralIndicesPacketIDBounds = [1, 16384];$/;"	v
neuralTraj_td	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^function result = neuralTraj_td(runIdx, dat, directory, varargin)$/;"	f
neural_cov	lib/get_dpca_var.m	/^                neural_cov = cov(data);$/;"	v
neural_data	bumpcurl_tensors.m	/^            neural_data = cat(3,td_select.(spikes_in_td{arraynum})); % dimensions are timepoints/;"	v
neural_data	bumpcurl_tensors.m	/^            neural_data = zeros(...$/;"	v
neural_idx	lib/TrialData/Tools/getTDfields.m	/^            neural_idx = neural_idx | ...$/;"	v
neural_idx	lib/TrialData/Tools/getTDfields.m	/^        neural_idx = zeros(length(fn),1);$/;"	v
neural_idx	lib/TrialData/Tools/reorderTDfields.m	/^neural_idx = find(ismember(fn,fn_neural));$/;"	v
neural_tensor	bumpcurl_tensors.m	/^            neural_tensor = tensor(neural_data);$/;"	v
neuroMotiveEvents	lib/TrialData/util/openNEV_td.m	/^            neuroMotiveEvents = find(NEV.Data.Comments.CharSet == 255);$/;"	v
neuronAverage	lib/neuron-table/neuronAverage.m	/^function [avgTable,cond_idx] = neuronAverage(neuronTable, params)$/;"	f
neuronTable	lib/neuron-table/getNTidx.m	/^neuronTable = neuronTable(return_idx,:);$/;"	v
neuronTable	lib/neuron-table/makeNeuronTableStarter.m	/^    neuronTable = horzcat(neuronTable,tab_append{:});$/;"	v
neuronTable	lib/neuron-table/makeNeuronTableStarter.m	/^neuronTable = table(monkey,date,task,out_signal_names,'VariableNames',{'monkey','date','task','s/;"	v
neuronTable_select	lib/neuron-table/neuronAverage.m	/^    neuronTable_select = neuronTable(cond_idx(key_idx,:),:);$/;"	v
neuronsConditions	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^    neuronsConditions = options.numOfTrials(:);$/;"	v
nev_text	lib/TrialData/DataProcessing/processNEV.m	/^        nev_text = cell(1,size(temp_text,1));$/;"	v
newS	lib/tensor_toolbox/@symtensor/subsasgn.m	/^            newS = S;$/;"	v
newS	lib/tensor_toolbox/@symtensor/subsref.m	/^            newS = S;$/;"	v
new_U	lib/tensor_toolbox/@ktensor/extract.m	/^new_U = cell(N,1);$/;"	v
new_X	lib/tensor_toolbox/@ktensor/extract.m	/^new_X = ktensor(new_lambda, new_U);$/;"	v
new_bin_size	lib/TrialData/Tools/upsampleTD.m	/^new_bin_size = trial_data(1).bin_size \/  upsample_factor;$/;"	v
new_col	lib/TrialData/td_limblab/parseFileByTrial.m	/^            new_col = table(markers.(marker_names{marker_ctr})(:,col_ctr),'VariableNames',{col_n/;"	v
new_color	lib/plot_traces.m	/^    new_color = hsv2rgb([1 saturation 1] .* rgb2hsv(color));$/;"	v
new_data	lib/TrialData/Tools/getNorm.m	/^        new_data = zeros(n_time,1);$/;"	v
new_idx	lib/TrialData/Tools/joinTrials.m	/^        new_idx = trial_data(trialnum).(fn_idx{fn_ctr});$/;"	v
new_lambda	lib/tensor_toolbox/@ktensor/extract.m	/^new_lambda = X.lambda(idx);$/;"	v
new_markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^            new_markers = [new_markers new_col];$/;"	v
new_markers	lib/TrialData/td_limblab/parseFileByTrial.m	/^    new_markers = table(markers.t,'VariableNames',{'t'});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = cat(2,new_name{~cellfun(@isempty,new_name)});$/;"	v
new_name	lib/TrialData/Tools/reorderTDfields.m	/^        new_name = strsplit(og_name,'_shift'); % effectively removes the _shift$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = intersect(actual_spikes,1:length(timestamps));$/;"	v
new_spikes	lib/TrialData/util/remove_spike_artifacts.m	/^        new_spikes = reshape(new_spikes,[],1);$/;"	v
new_subs	lib/tensor_toolbox/@sptensor/reshape.m	/^    new_subs = tt_ind2sub(new_size,inds);$/;"	v
new_unit_guide	lib/load_curl_data.m	/^                new_unit_guide = unit_ids(~unsorted_units,:);$/;"	v
newbound	lib/tensor_toolbox/cp_opt.m	/^    newbound = bound * ones(len,1);$/;"	v
newbound	lib/tensor_toolbox/cp_opt.m	/^    newbound = tovec(bound, false);$/;"	v
newbound	lib/tensor_toolbox/cp_opt.m	/^    newbound = tt_fac_to_vec(bound);$/;"	v
newbound	lib/tensor_toolbox/cp_wopt.m	/^    newbound = bound * ones(len,1);$/;"	v
newbound	lib/tensor_toolbox/cp_wopt.m	/^    newbound = tovec(bound, false);$/;"	v
newbound	lib/tensor_toolbox/cp_wopt.m	/^    newbound = tt_fac_to_vec(bound);$/;"	v
newcore	lib/tensor_toolbox/@ttensor/permute.m	/^newcore = permute(a.core,order);$/;"	v
newcore	lib/tensor_toolbox/@ttensor/ttv.m	/^newcore = ttv(a.core,w,dims);$/;"	v
newdata	lib/tensor_toolbox/@symtensor/full.m	/^        newdata = X.val(refidx);$/;"	v
newdata	lib/tensor_toolbox/@tensor/contract.m	/^    newdata = newdata + data(:,i,i);$/;"	v
newdata	lib/tensor_toolbox/@tensor/contract.m	/^    newdata = reshape(newdata,newsize);$/;"	v
newdata	lib/tensor_toolbox/@tensor/contract.m	/^newdata = zeros(m,1);$/;"	v
newdata	lib/tensor_toolbox/@tensor/subsref.m	/^            newdata = t.data(region{:});$/;"	v
newdata	lib/tensor_toolbox/@tensor/symmetrize.m	/^            newdata = avg(linclassidx);  $/;"	v
newdata	lib/tensor_toolbox/@tensor/ttm.m	/^        newdata = V' * newdata;$/;"	v
newdata	lib/tensor_toolbox/@tensor/ttm.m	/^        newdata = V*newdata;$/;"	v
newdata	lib/tensor_toolbox/@tensor/ttm.m	/^    newdata = double(permute(X,order));$/;"	v
newdata	lib/tensor_toolbox/@tensor/ttm.m	/^    newdata = reshape(newdata,sz(n),prod(sz([1:n-1,n+1:N])));$/;"	v
newdata	lib/tensor_toolbox/eig_geap.m	/^    newdata = geap_data(newx,A,B);$/;"	v
newi	lib/tensor_toolbox/cp_arls.m	/^        newi = 0;$/;"	v
newi	lib/tensor_toolbox/cp_arls.m	/^        newi = newi + 1;$/;"	v
newi	lib/tensor_toolbox/cp_arls.m	/^newi = 0; % number of epochs without improvement$/;"	v
newidx	lib/tensor_toolbox/@sptensor/private/renumber.m	/^newidx = map(idx);$/;"	v
newidx	lib/tensor_toolbox/tests/Test_Tensor.m	/^                newidx = tt_sub2ind(newsz, sub);$/;"	v
newitol	lib/tensor_toolbox/cp_arls.m	/^newitol = params.Results.newitol;$/;"	v
newlambda	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    newlambda = subsasgn(t.lambda, s(2:end), b);$/;"	v
newlambda	lib/tensor_toolbox/@ktensor/ttv.m	/^    newlambda = newlambda .* ( a.u{dims(i)}' * v{vidx(i)} );$/;"	v
newlambda	lib/tensor_toolbox/@ktensor/ttv.m	/^newlambda = a.lambda;$/;"	v
newlambda	lib/tensor_toolbox/eig_geap.m	/^    newlambda = newdata.Axm \/ newdata.Bxm;$/;"	v
newlambda	lib/tensor_toolbox/eig_sshopm.m	/^    newlambda = newx'* ttsv(A,newx,-1);    $/;"	v
newlambda	lib/tensor_toolbox/eig_sshopmc.m	/^    newlambda = newx'* ttsv(A,newx,-1);    $/;"	v
newnnz	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            newnnz = size(newsubs,1);$/;"	v
newshift	lib/tensor_toolbox/eig_sshopm.m	/^        newshift = adapt_shift(A,newx,margin,concave);        $/;"	v
newshift	lib/tensor_toolbox/eig_sshopm.m	/^        newshift = shift;$/;"	v
newsiz	lib/tensor_toolbox/@sptensor/collapse.m	/^newsiz = size(t,remdims);$/;"	v
newsiz	lib/tensor_toolbox/@sptensor/subsref.m	/^                    newsiz = [newsiz numel(region{i})];$/;"	v
newsiz	lib/tensor_toolbox/@sptensor/subsref.m	/^                    newsiz = [newsiz size(t,i)];$/;"	v
newsiz	lib/tensor_toolbox/@sptensor/subsref.m	/^            newsiz = [];                % (future) new size$/;"	v
newsiz	lib/tensor_toolbox/@sptensor/ttv.m	/^newsiz = a.size(remdims);$/;"	v
newsiz	lib/tensor_toolbox/@tensor/collapse.m	/^newsiz = size(X,remdims);$/;"	v
newsiz	lib/tensor_toolbox/@tensor/subsasgn.m	/^            newsiz = [max([x.size;bsiz(1:n)]) bsiz(n+1:end)];$/;"	v
newsiz	lib/tensor_toolbox/@tensor/subsref.m	/^                    newsiz = [newsiz numel(region{i})];$/;"	v
newsiz	lib/tensor_toolbox/@tensor/subsref.m	/^                    newsiz = [newsiz size(t,i)];$/;"	v
newsiz	lib/tensor_toolbox/@tensor/subsref.m	/^            newsiz = [];                % (future) new size$/;"	v
newsize	lib/tensor_toolbox/@tensor/contract.m	/^newsize = x.size(remdims);$/;"	v
newsubs	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^        newsubs = [];$/;"	v
newsubs	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    newsubs = newsubs(nzidx,:);$/;"	v
newsubs	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^              newsubs = [newsubs; rsubs(i) csubs(j)];$/;"	v
newsubs	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^        newsubs = [];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/mldivide.m	/^        newsubs = [newsubs; nansubs];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/mldivide.m	/^    newsubs = B.subs;$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/mrdivide.m	/^        newsubs = [newsubs; nansubs];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/mrdivide.m	/^    newsubs = A.subs;$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^        newsubs = [newsubs(:,1:i-1), r*ones(nz,1), newsubs(:,i:end)];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^    newsubs = [];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^newsubs = t.subs;$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/private/renumber.m	/^newsubs = subs;$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/rdivide.m	/^    newsubs = [newsubs; moresubs];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/sptensor.m	/^        newsubs = [];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/sptensor.m	/^    newsubs = newsubs(nzidx,:);$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                newsubs = t.subs(kploc,:);$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            newsubs = [s.subs{1}];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    newsubs = [asubs(ii,:), bsubs(jj,:)];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    newsubs = asubs(ii,:);$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/ttt.m	/^    newsubs = bsubs(jj,:);$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/ttv.m	/^    newsubs = [];$/;"	v
newsubs	lib/tensor_toolbox/@sptensor/ttv.m	/^    newsubs = subs(:,remdims);$/;"	v
newsz	lib/tensor_toolbox/@sptensor/private/renumber.m	/^newsz = numel(range);$/;"	v
newsz	lib/tensor_toolbox/@sptensor/private/renumber.m	/^newsz = sz;$/;"	v
newsz	lib/tensor_toolbox/@tensor/ttm.m	/^    newsz = [p,sz(1:n-1),sz(n+1:N)];$/;"	v
newsz	lib/tensor_toolbox/@tensor/ttm.m	/^    newsz = sz;$/;"	v
newsz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^                newsz = sz;$/;"	v
newsz	lib/tensor_toolbox/tests/Test_Tensor.m	/^                newsz = max(sub,[],1);$/;"	v
newsz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            newsz = [sz 1];$/;"	v
newsz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            newsz = newsz(iscolon);$/;"	v
newsz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            newsz = sz;$/;"	v
newu	lib/tensor_toolbox/@ttensor/permute.m	/^newu = a.u(order);$/;"	v
newvals	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^        newvals = [];$/;"	v
newvals	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^        newvals = accumarray(loc,vals,[size(newsubs,1) 1]);$/;"	v
newvals	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    newvals = newvals(nzidx);$/;"	v
newvals	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^              newvals = [newvals; b(k)];$/;"	v
newvals	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^        newvals = [];$/;"	v
newvals	lib/tensor_toolbox/@sptensor/mldivide.m	/^        newvals = [newvals; repmat(NaN,size(nansubs,1),1)];$/;"	v
newvals	lib/tensor_toolbox/@sptensor/mldivide.m	/^    newvals = B.vals \/ A;$/;"	v
newvals	lib/tensor_toolbox/@sptensor/mrdivide.m	/^        newvals = [newvals; repmat(NaN,size(nansubs,1),1)];$/;"	v
newvals	lib/tensor_toolbox/@sptensor/mrdivide.m	/^    newvals = A.vals \/ B;$/;"	v
newvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^    newvals = A.vals(ia) .\/ B.vals(ib);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^    newvals = [newvals; morevals];$/;"	v
newvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^        newvals = [];$/;"	v
newvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^        newvals = accumarray(loc,vals,[size(newsubs,1) 1],fun);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/sptensor.m	/^    newvals = newvals(nzidx);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                newvals = newvals * ones(newnnz,1);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                newvals = t.vals(kploc);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            newvals = newvals(idx);$/;"	v
newvals	lib/tensor_toolbox/@sptensor/subsasgn.m	/^            newvals = rhs;$/;"	v
newvals	lib/tensor_toolbox/@sptensor/ttv.m	/^        newvals = newvals .* bigw;$/;"	v
newvals	lib/tensor_toolbox/@sptensor/ttv.m	/^newvals = a.vals;$/;"	v
newvals	lib/tensor_toolbox/cp_wopt.m	/^                newvals = newvals .* bigArn;$/;"	v
newvals	lib/tensor_toolbox/cp_wopt.m	/^                newvals = newvals .* bigAr{n};$/;"	v
newvals	lib/tensor_toolbox/cp_wopt.m	/^            newvals = Tvals;$/;"	v
newvals	lib/tensor_toolbox/cp_wopt.m	/^        newvals = newvals .* bigArn;$/;"	v
newvals	lib/tensor_toolbox/cp_wopt.m	/^    newvals = Wvals;$/;"	v
newvals	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            newvals = (1:p)';$/;"	v
newvals	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            newvals = -1*(1:length(idx))';$/;"	v
newvals	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            newvals = 10*(1:size(s,1))';$/;"	v
newx	lib/tensor_toolbox/eig_geap.m	/^        newx = beta * (data.Axm1 + shift * x);$/;"	v
newx	lib/tensor_toolbox/eig_geap.m	/^        newx = beta * (data.Axm1 - lambda * data.Bxm1 + (shift + lambda) * data.Bxm * x);$/;"	v
newx	lib/tensor_toolbox/eig_geap.m	/^    newx = newx \/ nx;    $/;"	v
newx	lib/tensor_toolbox/eig_sshopm.m	/^        newx = -newx;$/;"	v
newx	lib/tensor_toolbox/eig_sshopm.m	/^    newx = newx \/ nx;    $/;"	v
newx	lib/tensor_toolbox/eig_sshopm.m	/^    newx = ttsv(A,x,-1) + shift * x;$/;"	v
newx	lib/tensor_toolbox/eig_sshopmc.m	/^    newx = newx \/ (lambda + shift);   $/;"	v
newx	lib/tensor_toolbox/eig_sshopmc.m	/^    newx = newx \/ nx;    $/;"	v
newx	lib/tensor_toolbox/eig_sshopmc.m	/^    newx = ttsv(A,x,-1) + shift * x;$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = '';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'channels';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'duration';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'electrodes';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'precision';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^        next = 'skipfactor';$/;"	v
next	lib/TrialData/util/openNSx_td.m	/^next = '';$/;"	v
nextra	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^        nextra = niht-length(iht);$/;"	v
nf	lib/tensor_toolbox/create_guess.m	/^        nf = nf * ones(nd,1);$/;"	v
nf	lib/tensor_toolbox/create_guess.m	/^    nf = params.Num_Factors;$/;"	v
nf	lib/tensor_toolbox/create_guess.m	/^    nf = zeros(nd,1);$/;"	v
nf	lib/tensor_toolbox/doc/test_problems_doc.m	/^nf = 2; %<- Number of components$/;"	v
nf	lib/tensor_toolbox/doc/test_problems_doc.m	/^nf = 4;$/;"	v
nfactors	lib/tensor_toolbox/create_problem.m	/^    nfactors = nfactors * ones(size(sz));$/;"	v
nfactors	lib/tensor_toolbox/create_problem.m	/^nfactors = params.Num_Factors;$/;"	v
nfails	lib/tensor_toolbox/gcp_opt.m	/^            nfails = nfails + 1;$/;"	v
nfails	lib/tensor_toolbox/gcp_opt.m	/^    nfails = 0;                     % Counter # times fails to decrease$/;"	v
nflip	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    nflip = 2 * floor(numel(negidx)\/2);$/;"	v
nfunctions	lib/tensor_toolbox/maintenance/capabilitychart.m	/^nfunctions = length(functionnames);$/;"	v
nfunin	lib/tensor_toolbox/@tensor/tenfun.m	/^nfunin = nargin(fun);$/;"	v
ng	lib/tensor_toolbox/teneye.m	/^ng = nargin;$/;"	v
ngrps	lib/tensor_toolbox/@tensor/symmetrize.m	/^        ngrps = length(grps);$/;"	v
nhigh	lib/tensor_toolbox/create_problem_binary.m	/^        nhigh = 0;$/;"	v
nhigh	lib/tensor_toolbox/create_problem_binary.m	/^        nhigh = sum(Xvals);$/;"	v
nhigh_max	lib/tensor_toolbox/create_problem_binary.m	/^    nhigh_max = size(subs,1);$/;"	v
nidx	lib/tensor_toolbox/tt_sample_nonzeros.m	/^    nidx = 1:nnx;$/;"	v
nidx	lib/tensor_toolbox/tt_sample_nonzeros.m	/^    nidx = randi(nnx, nns,1);$/;"	v
nidx	lib/tensor_toolbox/tt_sample_nonzeros.m	/^    nidx = randperm(nnx,nns);$/;"	v
niht	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^    niht = length(iht0);$/;"	v
nl	lib/TrialData/util/lib/isomap/IsomapII.m	/^nl = length(landmarks); $/;"	v
nlin	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^nlin = @(x)log(x+1e-20);$/;"	v
nlocal	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            nlocal = 3;$/;"	v
nlocal	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            nlocal = 5;$/;"	v
nloprob	lib/tensor_toolbox/create_problem_binary.m	/^    nloprob = prod(sz) - nhigh_max; $/;"	v
nlow	lib/tensor_toolbox/create_problem_binary.m	/^    nlow = random('Poisson', nloprob * loprob, 1);$/;"	v
nm	lib/TrialData/util/smooth_data.m	/^nm = conv(kernel,ones(1,nbr_samples))';$/;"	v
nmissing	lib/tensor_toolbox/gcp_opt.m	/^        nmissing = 0;$/;"	v
nmissing	lib/tensor_toolbox/gcp_opt.m	/^        nmissing = tsz - nnz(W); $/;"	v
nmissing	lib/tensor_toolbox/gcp_opt.m	/^    nmissing = 0;$/;"	v
nnonzeros	lib/tensor_toolbox/gcp_opt.m	/^        nnonzeros = nnz(X);$/;"	v
nnonzeros	lib/tensor_toolbox/gcp_opt.m	/^    nnonzeros = nnz(X);$/;"	v
nnx	lib/tensor_toolbox/tt_sample_nonzeros.m	/^nnx = nnz(X);$/;"	v
nnz	lib/tensor_toolbox/@sptenmat/nnz.m	/^function n = nnz(a)$/;"	f
nnz	lib/tensor_toolbox/@sptensor/nnz.m	/^function a = nnz(t)$/;"	f
nnz	lib/tensor_toolbox/@tensor/nnz.m	/^function n = nnz(x)$/;"	f
nnzx	lib/tensor_toolbox/tt_sample_semistrat.m	/^nnzx = nnz(X); % Number of Nonzeros in X$/;"	v
nnzx	lib/tensor_toolbox/tt_sample_stratified.m	/^nnzx = nnz(X); % Number of Nonzeros in X$/;"	v
nnzx	lib/tensor_toolbox/tt_sample_zeros.m	/^nnzx = length(Xnzidx); % Number of Nonzeros in X$/;"	v
noTrials	lib/TrialData/td_limblab/parseFileByTrial.m	/^noTrials       = false;$/;"	v
noise_covar	lib/TrialData/Analysis/getNoiseCovar.m	/^noise_covar = cov(data);$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noise_covar = eye(sum(cellfun(@length,signals(:,2))));$/;"	v
noise_covar	lib/TrialData/Tools/addCorrelatedNoise.m	/^noise_covar     = [];$/;"	v
noise_eigen	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen = cell(1,num_iter);$/;"	v
noise_eigen_prctile	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_eigen_prctile      = prctile(eigenv_noise,99,2);$/;"	v
noise_signals	lib/TrialData/Analysis/getNoiseCovar.m	/^noise_signals = check_signals(td,{fn});$/;"	v
noise_var_99	lib/TrialData/Analysis/estimateDimensionality.m	/^noise_var_99        = zeros(1,nbr_chs);$/;"	v
noisy_data	lib/TrialData/Tools/addCorrelatedNoise.m	/^    noisy_data = mvnrnd(data,noise_covar);$/;"	v
nolabel_cols	lib/neuron-table/neuronAverage.m	/^    nolabel_cols = lin_cols & ~strcmpi(dataTable.Properties.VariableDescriptions,'linear');$/;"	v
nonzero_weights	lib/tensor_toolbox/tt_sample_semistrat.m	/^nonzero_weights = (nnzx \/ nnzs) * ones(nnzs,1); $/;"	v
nonzero_weights	lib/tensor_toolbox/tt_sample_stratified.m	/^nonzero_weights = (nnzx \/ nnzs) * ones(nnzs,1); $/;"	v
norm	lib/tensor_toolbox/@ktensor/norm.m	/^function nrm = norm(A)$/;"	f
norm	lib/tensor_toolbox/@sptenmat/norm.m	/^function nrm = norm(T)$/;"	f
norm	lib/tensor_toolbox/@sptensor/norm.m	/^function nrm = norm(T)$/;"	f
norm	lib/tensor_toolbox/@sumtensor/norm.m	/^function n = norm(T)$/;"	f
norm	lib/tensor_toolbox/@symktensor/norm.m	/^function nrm = norm(A)$/;"	f
norm	lib/tensor_toolbox/@tenmat/norm.m	/^function n = norm(T)$/;"	f
norm	lib/tensor_toolbox/@tensor/norm.m	/^function n = norm(T)$/;"	f
norm	lib/tensor_toolbox/@ttensor/norm.m	/^function nrm = norm(X)$/;"	f
normAsqr	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    normAsqr = norm(A)^2;$/;"	v
normDiff	lib/tensor_toolbox/cp_arls.m	/^    normDiff = sqrt(elem_mean * num_elements); % Approximate!$/;"	v
normX	lib/tensor_toolbox/cp_als.m	/^normX = norm(X);$/;"	v
normX	lib/tensor_toolbox/cp_apr.m	/^    normX = norm(X);   $/;"	v
normX	lib/tensor_toolbox/cp_arls.m	/^normX = sqrt(Xvalsqr_mean * num_elements); % Approximate!$/;"	v
normX	lib/tensor_toolbox/cp_nmu.m	/^normX = norm(X);$/;"	v
normX	lib/tensor_toolbox/tucker_als.m	/^normX = norm(X);$/;"	v
normZsqr	lib/tensor_toolbox/cp_wopt.m	/^        normZsqr = norm(Zdata)^2;$/;"	v
normZsqr	lib/tensor_toolbox/cp_wopt.m	/^        normZsqr = sum(Zdata.^2);$/;"	v
normZsqr	lib/tensor_toolbox/cp_wopt.m	/^    normZsqr = norm(Z)^2;$/;"	v
normZsqr	lib/tensor_toolbox/cp_wopt.m	/^    normZsqr = sum(Zvals.^2);$/;"	v
normZsqr	lib/tensor_toolbox/cp_wopt.m	/^normZsqr = norm(Z)^2;$/;"	v
normalize	lib/tensor_toolbox/@ktensor/normalize.m	/^function X = normalize(X,N,normtype,mode)$/;"	f
normalize	lib/tensor_toolbox/@symktensor/normalize.m	/^function X = normalize(X,N,normtype)$/;"	f
normfac	lib/TrialData/Tools/softNormalize.m	/^    normfac = range(get_vars(trial_data,signals(iSig,:))) + alpha;$/;"	v
normresidual	lib/tensor_toolbox/cp_als.m	/^            normresidual = sqrt( normX^2 + norm(P)^2 - 2 * iprod );$/;"	v
normresidual	lib/tensor_toolbox/cp_als.m	/^        normresidual = sqrt( normX^2 + norm(P)^2 - 2 * innerprod(X,P) );$/;"	v
normresidual	lib/tensor_toolbox/cp_apr.m	/^    normresidual = sqrt( normX^2 + norm(M)^2 - 2 * innerprod(X,M) );$/;"	v
normresidual	lib/tensor_toolbox/cp_arls.m	/^    normresidual = sqrt( norm(X)^2 + norm(P)^2 - 2 * innerprod(X,P) );$/;"	v
normresidual	lib/tensor_toolbox/cp_nmu.m	/^    normresidual = sqrt( normX^2 + norm(P)^2 - 2 * innerprod(X,P) );$/;"	v
normresidual	lib/tensor_toolbox/cp_nmu.m	/^  normresidual = sqrt( normX^2 + norm(P)^2 - 2 * innerprod(X,P) );$/;"	v
normresidual	lib/tensor_toolbox/tucker_als.m	/^    normresidual = sqrt( normX^2 - norm(core)^2 );$/;"	v
norms	lib/tensor_toolbox/matrandnorm.m	/^norms = sqrt(sum(X.^2,1));$/;"	v
normsqr	lib/tensor_toolbox/cp_opt.m	/^normsqr = norm(Z)^2;$/;"	v
normtype	lib/tensor_toolbox/@ktensor/normalize.m	/^    normtype = 2;$/;"	v
normtype	lib/tensor_toolbox/@symktensor/normalize.m	/^    normtype = 2;$/;"	v
normxsqr	lib/tensor_toolbox/hosvd.m	/^normxsqr = collapse(X.^2);$/;"	v
not	lib/tensor_toolbox/@sptensor/not.m	/^function y = not(x)$/;"	f
not	lib/tensor_toolbox/@symtensor/not.m	/^function B = not(A)$/;"	f
not	lib/tensor_toolbox/@tensor/not.m	/^function B = not(A)$/;"	f
nout	lib/tensor_toolbox/eig_geap.m	/^nout = max(nargout,1);$/;"	v
nrm	lib/tensor_toolbox/@ktensor/norm.m	/^nrm = sqrt(abs(sum(coefMatrix(:))));$/;"	v
nrm	lib/tensor_toolbox/@sptenmat/norm.m	/^nrm = norm(T.vals);$/;"	v
nrm	lib/tensor_toolbox/@sptensor/norm.m	/^nrm = norm(T.vals);$/;"	v
nrm	lib/tensor_toolbox/@symktensor/norm.m	/^nrm = sqrt(abs(sum(coefMatrix(:))));$/;"	v
nrm	lib/tensor_toolbox/@ttensor/norm.m	/^    nrm = norm(full(X));$/;"	v
nrm	lib/tensor_toolbox/@ttensor/norm.m	/^    nrm = sqrt(tmp);$/;"	v
nrm	lib/tensor_toolbox/matrandorth.m	/^		nrm = norm(vi);$/;"	v
nrm	lib/tensor_toolbox/matrandorth.m	/^	  nrm = 0;$/;"	v
nrow	bumpcurl_tensors.m	/^            nrow = size(M.U{1},2);$/;"	v
nrow	lib/plotTensorDecomp.m	/^    nrow = size(M.U{1},2);$/;"	v
ns	lib/tensor_toolbox/@ktensor/subsref.m	/^            ns = size(subs,1);$/;"	v
ns	lib/tensor_toolbox/doc/cp_arls_doc.m	/^ns = 0.01;$/;"	v
ns	lib/tensor_toolbox/doc/cp_arls_doc.m	/^ns = 0.10;$/;"	v
nsampfit	lib/tensor_toolbox/cp_arls.m	/^nsampfit = params.Results.nsampfit;$/;"	v
nsampfitles	lib/tensor_toolbox/cp_arls.m	/^nsampfitles = min(num_elements,nsampfit);$/;"	v
nsample	lib/tensor_toolbox/create_problem.m	/^    nsample = csums(c);$/;"	v
nsamples	lib/tensor_toolbox/tt_gcp_fg_est.m	/^nsamples = size(subs,1);$/;"	v
nsamplsq	lib/tensor_toolbox/cp_arls.m	/^nsamplsq = params.Results.nsamplsq;$/;"	v
nsamps	lib/tensor_toolbox/tt_sample_zeros.m	/^nsamps = ceil(oversample * ntmp2); $/;"	v
nsamps	lib/tensor_toolbox/tt_sample_zeros.m	/^nsamps = min(size(tmpsubs,1), nsamps_requested);$/;"	v
nsamps_requested	lib/tensor_toolbox/tt_sample_zeros.m	/^nsamps_requested = nsamps;$/;"	v
nssubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                nssubs = zeros(N,1);$/;"	v
nt	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^nt = length(iht);        % number of points in iht$/;"	v
ntimes	lib/tensor_toolbox/@tensor/symmetrize.m	/^            ntimes = prod(cellfun(@length,combos(1:i-1)));$/;"	v
ntmp1	lib/tensor_toolbox/tt_sample_zeros.m	/^ntmp1 = ceil(nsamps * nelx \/ nzrx);$/;"	v
ntmp2	lib/tensor_toolbox/tt_sample_zeros.m	/^    ntmp2 = ceil(nelx * log(1\/(1-(ntmp1\/nelx))));$/;"	v
ntmp2	lib/tensor_toolbox/tt_sample_zeros.m	/^    ntmp2 = ntmp1;$/;"	v
numChansToRead	lib/TrialData/util/openNSx_td.m	/^    numChansToRead = double(length(min(userRequestedChanRow):max(userRequestedChanRow)));$/;"	v
numCompToShow	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^numCompToShow = min(options.numCompToShow, size(W,2));$/;"	v
numFolds	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^numFolds      = 0;$/;"	v
numOfStimuli	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^        numOfStimuli = time(2); % time is used to pass size(data) for legend$/;"	v
numOfStimuli	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    numOfStimuli = size(data, 2);$/;"	v
numOfStimuli	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    numOfStimuli = size(data, 3);$/;"	v
numSigs	lib/TrialData/util/compute_r2.m	/^numSigs = size(sig1,2);$/;"	v
num_arrays	lib/TrialData/Plotting/visData.m	/^num_arrays = length(arrays);$/;"	v
num_bins	bumpcurl_analysis.m	/^    num_bins = 8;$/;"	v
num_bins	lib/TrialData/Tools/binTD.m	/^        num_bins = t(end); % this will tell you how  many$/;"	v
num_bins	lib/neuron-table/getTuningCurves.m	/^num_bins        = 8;$/;"	v
num_blocks	lib/get_dpca_var.m	/^                    num_blocks = length(unique([td_boot.(sprintf('%s_block',comp_to_plot))]));$/;"	v
num_boots	bumpcurl_analysis.m	/^    num_boots = 1000;$/;"	v
num_boots	lib/TrialData/Analysis/evalModel.m	/^num_boots        =  0;$/;"	v
num_boots	lib/get_dpca_var.m	/^    num_boots = 1;$/;"	v
num_boots	lib/neuron-table/getTDClassicalPDs.m	/^num_boots = 1000;$/;"	v
num_boots	lib/neuron-table/getTDPDs.m	/^num_boots        =  1000;$/;"	v
num_bootstraps	lib/TrialData/Analysis/evalModel.m	/^num_bootstraps = varargin{end};$/;"	v
num_cols	lib/TrialData/Plotting/visData.m	/^num_cols = pos_cols + time_cols;$/;"	v
num_conds	lib/TrialData/Analysis/runDPCA.m	/^    num_conds = size(valIdx,1);$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = 1;$/;"	v
num_conds	lib/TrialData/Tools/trialAverage.m	/^    num_conds = size(all_conds,1);$/;"	v
num_dims	lib/TrialData/Analysis/runDPCA.m	/^num_dims       =  15;$/;"	v
num_dims	lib/TrialData/Tools/dimReduce.m	/^num_dims        =  []; % how many dimensions, needed for PPCA, FA, etc$/;"	v
num_dims	lib/get_dpca_var.m	/^    num_dims = 16;$/;"	v
num_dirs	bumpcurl_analysis.m	/^    num_dirs = length(td_bl);$/;"	v
num_electrodes	lib/TrialData/util/remove_spike_artifacts.m	/^    num_electrodes = length(unique(unit_structure.Data.Spikes.Electrode));$/;"	v
num_elements	lib/tensor_toolbox/cp_arls.m	/^num_elements = prod(sz);$/;"	v
num_epochs	exploreData.m	/^num_epochs = length(epoch_list);$/;"	v
num_epochs	plotBumpcurlTuning.m	/^num_epochs = length(epoch_list);$/;"	v
num_evals	lib/tensor_toolbox/cp_apr.m	/^            num_evals = num_evals + 1;$/;"	v
num_evals	lib/tensor_toolbox/cp_apr.m	/^        num_evals = num_evals + 1;$/;"	v
num_evals	lib/tensor_toolbox/cp_apr.m	/^    num_evals = 1;$/;"	v
num_factors	bumpcurl_tensors.m	/^    num_factors = 5;$/;"	v
num_folds	bumpcurl_lda.m	/^    num_folds = 5;$/;"	v
num_free	lib/tensor_toolbox/cp_apr.m	/^            num_free = num_free + 1;$/;"	v
num_free	lib/tensor_toolbox/cp_apr.m	/^    num_free = 0;$/;"	v
num_free	lib/tensor_toolbox/cp_apr.m	/^    num_free = length(free_indices);$/;"	v
num_freqs	lib/TrialData/td_limblab/getLearningMetrics.m	/^                num_freqs = 3;$/;"	v
num_in_signals	lib/neuron-table/getTDClassicalPDs.m	/^num_in_signals = size(in_signals,1);$/;"	v
num_in_signals	lib/neuron-table/getTDPDs.m	/^num_in_signals = size(in_signals,1);$/;"	v
num_iter	lib/TrialData/Analysis/estimateDimensionality.m	/^num_iter        =  1000;$/;"	v
num_moves	lib/TrialData/td_limblab/getRWMovements.m	/^num_moves = sum(~isnan([trial_data.(go_cue_name)]));$/;"	v
num_neurons	bumpcurl_analysis.m	/^    num_neurons = 10;$/;"	v
num_nonzeros	lib/tensor_toolbox/doc/test_problems_doc.m	/^num_nonzeros = nnz(info.Data)$/;"	v
num_out_signals	lib/neuron-table/getTDClassicalPDs.m	/^num_out_signals = sum(cellfun(@(x) length(x),out_signals(:,2)));$/;"	v
num_out_signals	lib/neuron-table/getTDModelWeights.m	/^num_out_signals = sum(cellfun(@(x) length(x),out_signals(:,2)));$/;"	v
num_repeats	bumpcurl_lda.m	/^    num_repeats = 20;$/;"	v
num_row_nnz	lib/tensor_toolbox/cp_apr.m	/^        num_row_nnz = length(sparse_indices);$/;"	v
num_rows	lib/TrialData/Plotting/visData.m	/^num_rows = length(plot_signals)*kin_rows + event_rows + num_arrays*spike_rows;$/;"	v
num_rows	lib/tensor_toolbox/cp_apr.m	/^        num_rows = size(M{n},1);$/;"	v
num_signals	lib/TrialData/DataProcessing/convertDataToTD.m	/^num_signals = sum(cellfun(@(x) length(x.name),signal_info));$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = 1;$/;"	v
num_signals	lib/TrialData/DataProcessing/initSignalStruct.m	/^    num_signals = length(signal_info.name);$/;"	v
num_test_dirs	lib/neuron-table/getTDClassicalPDs.m	/^num_test_dirs = 1000; % number of directions to test for resampling weights$/;"	v
num_trials_to_plot	lib/TrialData/Plotting/visData.m	/^num_trials_to_plot = length(trials_to_plot);$/;"	v
num_zero	lib/tensor_toolbox/cp_apr.m	/^        num_zero = num_zero + nnz(find(M{n} == 0.0));$/;"	v
num_zero	lib/tensor_toolbox/cp_apr.m	/^    num_zero = 0;$/;"	v
numfactors	lib/tensor_toolbox/cp_arls.m	/^numfactors = length(A);$/;"	v
nvals	lib/tensor_toolbox/@sptensor/mask.m	/^nvals = size(wsubs,1);$/;"	v
nvecs	lib/tensor_toolbox/@ktensor/nvecs.m	/^function u = nvecs(X,n,r,opts)$/;"	f
nvecs	lib/tensor_toolbox/@sptensor/nvecs.m	/^function u = nvecs(t,n,r,opts)$/;"	f
nvecs	lib/tensor_toolbox/@tensor/nvecs.m	/^function u = nvecs(X,n,r,opts)$/;"	f
nvecs	lib/tensor_toolbox/@ttensor/nvecs.m	/^function u = nvecs(X,n,r,opts)$/;"	f
nviols	lib/tensor_toolbox/eig_geap.m	/^        nviols = nviols + 1;$/;"	v
nviols	lib/tensor_toolbox/eig_geap.m	/^nviols = 0;$/;"	v
nx	lib/tensor_toolbox/eig_geap.m	/^    nx = norm(newx);$/;"	v
nx	lib/tensor_toolbox/eig_sshopm.m	/^    nx = norm(newx);$/;"	v
nx	lib/tensor_toolbox/eig_sshopmc.m	/^    nx = norm(newx);$/;"	v
nx	lib/tensor_toolbox/tests/Test_Tensor.m	/^        nx = struct( 'one', 1, 'ten', 10, 'hundred', 100 );$/;"	v
nz	lib/tensor_toolbox/@sptenmat/disp.m	/^nz = size(a.vals,1);$/;"	v
nz	lib/tensor_toolbox/@sptensor/disp.m	/^nz = nnz(X);$/;"	v
nz	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^nz = nnz(t);$/;"	v
nz	lib/tensor_toolbox/@sptensor/sptensor.m	/^            nz = nnz(K);  $/;"	v
nz	lib/tensor_toolbox/@sptensor/sptensor.m	/^        nz = ceil(prod(sz) * nz);$/;"	v
nz	lib/tensor_toolbox/@sptensor/sptensor.m	/^        nz = floor(nz);$/;"	v
nz	lib/tensor_toolbox/@sptensor/sptensor.m	/^    nz = min(nz, size(subs,1));$/;"	v
nz	lib/tensor_toolbox/@sptensor/sptensor.m	/^    nz = varargin{3};$/;"	v
nz	lib/tensor_toolbox/doc/cp_apr_doc.m	/^nz = prod(sz) * .05;$/;"	v
nz	lib/tensor_toolbox/import_data.m	/^    nz = import_nnz(fid);$/;"	v
nz	lib/tensor_toolbox/import_data.m	/^nz = sscanf(line, '%d');$/;"	v
nz	lib/tensor_toolbox/sptenrand.m	/^    nz = prod(sz) * nz;$/;"	v
nz	lib/tensor_toolbox/sptenrand.m	/^nz = ceil(nz);$/;"	v
nz	lib/tensor_toolbox/sptenrand.m	/^nz = min(nz, size(subs,1));$/;"	v
nzeros	lib/tensor_toolbox/cp_apr.m	/^nzeros = zeros(maxOuterIters,1);$/;"	v
nzeros	lib/tensor_toolbox/gcp_opt.m	/^        nzeros = nnz(W) - nnz(X);$/;"	v
nzeros	lib/tensor_toolbox/gcp_opt.m	/^        nzeros = tsz - nnonzeros;$/;"	v
nzeros	lib/tensor_toolbox/gcp_opt.m	/^    nzeros = tsz - nnonzeros;    $/;"	v
nzidx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    nzidx = find(newvals);$/;"	v
nzidx	lib/tensor_toolbox/@sptensor/sptensor.m	/^    nzidx = find(newvals);$/;"	v
nzrx	lib/tensor_toolbox/tt_sample_semistrat.m	/^nzrx = nelx - nnzx; % Number of Zeros in X$/;"	v
nzrx	lib/tensor_toolbox/tt_sample_stratified.m	/^nzrx = nelx - nnzx; % Number of Zeros in X$/;"	v
nzrx	lib/tensor_toolbox/tt_sample_zeros.m	/^nzrx = nelx - nnzx; % Number of Zeros in X$/;"	v
nzsubs	lib/tensor_toolbox/@sptensor/private/extract.m	/^nzsubs = find(tf);$/;"	v
o	lib/tensor_toolbox/@sptensor/private/allsubs.m	/^o = cell(ndims(x),1);$/;"	v
o	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                o = cell(N,1);$/;"	v
obj	lib/tensor_toolbox/cp_apr.m	/^obj = tt_loglikelihood(X,M);$/;"	v
object	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
objectIndex	lib/TrialData/util/openNEV_td.m	/^            objectIndex = [0 '1' '2' '3' '4' '1' '2' '3' '4'];$/;"	v
oddsrange	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^oddsrange = probrange .\/ (1 - probrange);$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = [0 0];$/;"	v
offset	lib/TrialData/Plotting/visData.m	/^            offset = pos_offset;$/;"	v
offset	lib/TrialData/util/openNSx_td.m	/^		offset = double((headerIDX-1)*ExtHeaderLength);$/;"	v
offset	plotTuningDistr.m	/^offset = glm_info.b(1,:);$/;"	v
offsetX	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    offsetX = 0.31;$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = og_idx(end); % get the last one$/;"	v
og_idx	lib/TrialData/Tools/reorderTDfields.m	/^        og_idx = setdiff(find(~cellfun(@isempty,regexp(fn_cont_new,new_name,'ONCE'))),shift_idx)/;"	v
og_name	lib/TrialData/Tools/reorderTDfields.m	/^        og_name = fn_cont_new{the_val};$/;"	v
og_size	lib/TrialData/Tools/stretchSignals.m	/^        og_size = size(trial_data(trial).(time_vars{1}),1);$/;"	v
ok	lib/tensor_toolbox/tt_sizecheck.m	/^    ok = false;$/;"	v
ok	lib/tensor_toolbox/tt_sizecheck.m	/^    ok = true;    $/;"	v
ok	lib/tensor_toolbox/tt_sizecheck.m	/^    ok = true;$/;"	v
ok	lib/tensor_toolbox/tt_subscheck.m	/^    ok = false;$/;"	v
ok	lib/tensor_toolbox/tt_subscheck.m	/^    ok = true;$/;"	v
ok	lib/tensor_toolbox/tt_valscheck.m	/^    ok = false;$/;"	v
ok	lib/tensor_toolbox/tt_valscheck.m	/^    ok = true;$/;"	v
okcolon	lib/tensor_toolbox/@sptensor/private/subdims.m	/^    okcolon = ischar(r) && r == ':';$/;"	v
oknumeric	lib/tensor_toolbox/@sptensor/private/subdims.m	/^    oknumeric = isreal(r) && ~any(isnan(r(:))) && ~any(isinf(r(:))) ...$/;"	v
ol	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
ol	lib/tensor_toolbox/doc/html/ttb.css	/^ol { padding:0px; margin:0px 0px 20px 0px; list-style:decimal; }$/;"	s
ol	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="ol">$/;"	m
ol li	lib/tensor_toolbox/doc/html/ttb.css	/^ol li { padding:0px; margin:0px 0px 7px 23px; list-style-type:decimal; }$/;"	s
ol li ol	lib/tensor_toolbox/doc/html/ttb.css	/^ol li ol { padding:5px 0px 0px; margin:0px 0px 7px 0px; }$/;"	s
ol li ol li	lib/tensor_toolbox/doc/html/ttb.css	/^ol li ol li { list-style-type:lower-alpha; }$/;"	s
ol li ul	lib/tensor_toolbox/doc/html/ttb.css	/^ol li ul { padding-top:7px; }$/;"	s
ol li ul li	lib/tensor_toolbox/doc/html/ttb.css	/^ol li ul li { list-style:square; }$/;"	s
old_modes	lib/tensor_toolbox/@sptensor/reshape.m	/^    old_modes = 1:ndims(a);$/;"	v
old_size	lib/tensor_toolbox/@sptensor/reshape.m	/^old_size = a.size(old_modes);$/;"	v
oldline	lib/tensor_toolbox/maintenance/update_classlist.m	/^        oldline = fgetl(fidold);$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = NaN;$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^            on_idx = find(ds<thresh & (1:length(ds))'<mvt_peak & move_inds,1,'last');$/;"	v
on_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        on_idx = find(s > s_thresh & move_inds,1,'first');$/;"	v
ones	lib/tensor_toolbox/@sptensor/ones.m	/^function t = ones(t)$/;"	f
onesidx	lib/tensor_toolbox/@symktensor/fg.m	/^    onesidx = Data.onesidx;$/;"	v
onesidx	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    onesidx = cell(n,1);$/;"	v
onset_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^onset_name       =  'movement_on';$/;"	v
onset_name	lib/TrialData/td_limblab/getRWMovements.m	/^onset_name         =  'movement_on';$/;"	v
openNEV_td	lib/TrialData/util/openNEV_td.m	/^function varargout = openNEV_td(varargin)$/;"	f
openNSx_td	lib/TrialData/util/openNSx_td.m	/^function varargout = openNSx_td(varargin)$/;"	f
opensimList	lib/TrialData/td_limblab/parseFileByTrial.m	/^    opensimList = opensim.Properties.VariableNames;$/;"	v
opensim_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        opensim_analog_idx = i;$/;"	v
opensim_analog_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^opensim_analog_idx = 0;$/;"	v
opensim_idx	bumpcurl_analysis.m	/^    opensim_idx = find(contains(td(1).opensim_names,'_muscVel'));$/;"	v
operator <	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::operator <(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
operator <	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  HeapNode::operator <(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:int
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void FibHeapNode::operator =(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:void
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::operator =(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:void
operator =	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^void HeapNode::operator =(double NewKeyVal)$/;"	f	class:HeapNode	typeref:typename:void
operator ==	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  FibHeapNode::operator ==(FibHeapNode& RHS)$/;"	f	class:FibHeapNode	typeref:typename:int
operator ==	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^int  HeapNode::operator ==(FibHeapNode& RHS)$/;"	f	class:HeapNode	typeref:typename:int
opt	lib/tensor_toolbox/cp_opt.m	/^opt = params.Results.opt;$/;"	v
opt	lib/tensor_toolbox/cp_wopt.m	/^opt = params.Results.opt;$/;"	v
opt	lib/tensor_toolbox/gcp_opt.m	/^        opt = 'adam';$/;"	v
opt	lib/tensor_toolbox/gcp_opt.m	/^        opt = 'lbfgsb';$/;"	v
opt	lib/tensor_toolbox/gcp_opt.m	/^opt = params.Results.opt;$/;"	v
optfh	lib/tensor_toolbox/cp_sym.m	/^    optfh = eval(sprintf('@%s',alg));$/;"	v
opthandle	lib/tensor_toolbox/cp_wopt.m	/^            opthandle = @lbfgs;$/;"	v
opthandle	lib/tensor_toolbox/cp_wopt.m	/^            opthandle = @ncg;$/;"	v
opthandle	lib/tensor_toolbox/cp_wopt.m	/^            opthandle = @tn;$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^optionNames = fieldnames(options);$/;"	v
optionNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^optionNames = fieldnames(options);$/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca.m	/^options = struct('combinedParams', [],       ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^options = struct('combinedParams', [], ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^options = struct('combinedParams', [],      ...   $/;"	v
options	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^options = struct('time',           [], ...   $/;"	v
options	lib/TrialData/util/lib/isomap/IsomapII.m	/^     options = struct('dims',1:10,'overlay',1,'comp',1,'display',1,'dijkstra',1,'verbose',1); $/;"	v
options	lib/TrialData/util/lib/isomap/isomap.m	/^     options = struct('dims',1:10,'overlay',1,'comp',1,'display',1,'verbose',1); $/;"	v
options	lib/tensor_toolbox/cp_opt.m	/^        options = feval(fhandle, 'defaults');$/;"	v
options	lib/tensor_toolbox/cp_opt.m	/^options = params.Results.opt_options;$/;"	v
options	lib/tensor_toolbox/cp_sym.m	/^        options = optfh('defaults');$/;"	v
options	lib/tensor_toolbox/cp_sym.m	/^        options = optimset('GradObj','on',...$/;"	v
options	lib/tensor_toolbox/cp_sym.m	/^options = params.Results.alg_options;$/;"	v
options	lib/tensor_toolbox/cp_wopt.m	/^        options = feval(fhandle, 'defaults');$/;"	v
options	lib/tensor_toolbox/cp_wopt.m	/^options = params.Results.opt_options;$/;"	v
opts	lib/tensor_toolbox/@ktensor/datadisp.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/@ktensor/nvecs.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/@sptensor/nvecs.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/@tensor/nvecs.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/@ttensor/nvecs.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/cp_nmu.m	/^    opts = struct;$/;"	v
opts	lib/tensor_toolbox/cp_opt.m	/^    opts = options;$/;"	v
opts	lib/tensor_toolbox/cp_wopt.m	/^    opts = options;$/;"	v
or	lib/tensor_toolbox/@sptensor/or.m	/^function C = or(A,B)$/;"	f
or	lib/tensor_toolbox/@symtensor/or.m	/^function Z = or(X,Y)$/;"	f
or	lib/tensor_toolbox/@tensor/or.m	/^function Z = or(X,Y)$/;"	f
ord_seqTrain	lib/TrialData/Analysis/runGPFA.m	/^ord_seqTrain = seqTrain;$/;"	v
order	lib/tensor_toolbox/@tensor/tensor.m	/^            order = [v.rdims,v.cdims];$/;"	v
order	lib/tensor_toolbox/@tensor/ttm.m	/^    order = [n,1:n-1,n+1:N];$/;"	v
order	lib/tensor_toolbox/tenzeros.m	/^    order = sz;$/;"	v
orig_lambda_vs_rescaled	lib/tensor_toolbox/doc/test_problems_doc.m	/^orig_lambda_vs_rescaled = S.lambda .\/ info.Soln.lambda$/;"	v
originalCode	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="originalCode">$/;"	m
orthogonalize	lib/TrialData/util/orthogonalize.m	/^function [Xorth, Lorth, TT] = orthogonalize(X, L)$/;"	f
out	lib/TrialData/DataProcessing/processNEV.m	/^out = struct( ...$/;"	v
out	lib/TrialData/Tools/aliasTDfields.m	/^                out = rmfield(out,alias_list{i,1});$/;"	v
out	lib/TrialData/Tools/aliasTDfields.m	/^out = reorderTDfields(out);$/;"	v
out	lib/TrialData/Tools/aliasTDfields.m	/^out = trial_data;$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = get_vars(trial_data,signals);$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = zeros(size(cat(1,trial_data.(fn{1})),1),size(signals,1));$/;"	v
out	lib/TrialData/Tools/getSig.m	/^    out = ~~out;$/;"	v
out	lib/TrialData/Tools/getSigByTrial.m	/^out = zeros(size(trial_data(1).(signals{1,1}),1), ...$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^    out = [];$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^    out = struct();$/;"	v
out	lib/TrialData/td_limblab/parseFileByTrial.m	/^out = struct();$/;"	v
out	lib/TrialData/util/minusPi2Pi.m	/^out = atan2(sin(in), cos(in));$/;"	v
out	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^out = struct( ...$/;"	v
out	lib/tensor_toolbox/cp_apr.m	/^out = [];$/;"	v
out	lib/tensor_toolbox/cp_apr.m	/^out = struct;$/;"	v
out	lib/tensor_toolbox/cp_opt.m	/^    out = feval(fhandle, @(x)tt_cp_fun(x,Z,normsqr), tt_fac_to_vec(P0), options);$/;"	v
out	lib/tensor_toolbox/cp_sym.m	/^    out = optfh(fhandle, x0, options);$/;"	v
out	lib/tensor_toolbox/cp_wopt.m	/^    out = feval(opthandle, funhandle, tt_fac_to_vec(P0), options);$/;"	v
outArr	lib/neuron-table/getTDClassicalPDs.m	/^    outArr = get_vars(trial_data,out_signals);$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^    out_dims = estimateDimensionality(trial_data,struct( ...$/;"	v
out_dims	lib/TrialData/Analysis/getPotentSpace.m	/^out_dims     =  [];$/;"	v
out_params	lib/TrialData/Analysis/getPotentSpace.m	/^out_params = struct( ...$/;"	v
out_params	lib/TrialData/DataProcessing/loadTDfiles.m	/^out_params = [];$/;"	v
out_params	lib/TrialData/Tools/dimReduce.m	/^    out_params = struct();$/;"	v
out_sig_name	lib/TrialData/Analysis/runDPCA.m	/^            out_sig_name = strcat(out_sig_prefix,'_',marg_names{margnum});$/;"	v
out_sig_prefix	lib/TrialData/Analysis/runDPCA.m	/^out_sig_prefix = 'dPCA';$/;"	v
out_signal_names	lib/neuron-table/makeNeuronTableStarter.m	/^out_signal_names = {};$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals      =  [];$/;"	v
out_signals	lib/TrialData/Analysis/evalModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals   =  {}; % {'name',idx};$/;"	v
out_signals	lib/TrialData/Analysis/getModel.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals  =  [];$/;"	v
out_signals	lib/TrialData/Analysis/getPotentSpace.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/neuron-table/getTDClassicalPDs.m	/^out_signals      =  [];$/;"	v
out_signals	lib/neuron-table/getTDClassicalPDs.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/neuron-table/getTDModelWeights.m	/^out_signals      =  [];$/;"	v
out_signals	lib/neuron-table/getTDModelWeights.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/neuron-table/getTDPDs.m	/^out_signals      =  [];$/;"	v
out_signals	lib/neuron-table/getTDPDs.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals	lib/neuron-table/getTuningCurves.m	/^out_signals      =  [];$/;"	v
out_signals	lib/neuron-table/getTuningCurves.m	/^out_signals = check_signals(trial_data(1),out_signals);$/;"	v
out_signals_name	lib/TrialData/td_limblab/addProcessedSignal.m	/^out_signals_name = '';$/;"	v
out_sigs	lib/TrialData/Analysis/runDPCA.m	/^        out_sigs = (in_sigs-mean_fr)*W;$/;"	v
output	lib/tensor_toolbox/@ktensor/disp.m	/^        output = tt_matrix2cellstr(t.u{j});$/;"	v
output	lib/tensor_toolbox/@ktensor/disp.m	/^output = tt_matrix2cellstr(t.lambda');$/;"	v
output	lib/tensor_toolbox/@ktensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@sptenmat/disp.m	/^output = cell(nz,1);$/;"	v
output	lib/tensor_toolbox/@sptensor/disp.m	/^output = cell(nz,1);$/;"	v
output	lib/tensor_toolbox/@sptensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@sumtensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@symktensor/disp.m	/^output = tt_matrix2cellstr(t.u);$/;"	v
output	lib/tensor_toolbox/@symktensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@symtensor/disp.m	/^output = cell(sz,1);$/;"	v
output	lib/tensor_toolbox/@symtensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@tenmat/disp.m	/^    output = tt_matrix2cellstr(t.data);$/;"	v
output	lib/tensor_toolbox/@tensor/disp.m	/^    output = tt_matrix2cellstr(s{i});$/;"	v
output	lib/tensor_toolbox/@tensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/@ttensor/disp.m	/^    output = tt_matrix2cellstr(t.u{j});$/;"	v
output	lib/tensor_toolbox/@ttensor/isscalar.m	/^output = false;$/;"	v
output	lib/tensor_toolbox/cp_als.m	/^output = struct;$/;"	v
output	lib/tensor_toolbox/cp_apr.m	/^output = struct;$/;"	v
output	lib/tensor_toolbox/cp_arls.m	/^output = struct;$/;"	v
outputName	lib/TrialData/util/openNSx_td.m	/^outputName = ['NS' fext(4)];$/;"	v
outputString	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  <xsl:param name="outputString"\/>$/;"	p	namedTemplate:globalReplace
output_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^    output_data = processor(input_data);$/;"	v
overWrite	lib/TrialData/util/openNEV_td.m	/^        overWrite = input('Would you like to overwrite (Y\/N)? ', 's');$/;"	v
overlay	lib/TrialData/util/lib/isomap/IsomapII.m	/^overlay = options.overlay; $/;"	v
overlay	lib/TrialData/util/lib/isomap/isomap.m	/^overlay = options.overlay; $/;"	v
oversample	lib/tensor_toolbox/gcp_opt.m	/^oversample = params.Results.oversample;$/;"	v
oversample	lib/tensor_toolbox/tt_sample_stratified.m	/^    oversample = 1.1;$/;"	v
oversample	lib/tensor_toolbox/tt_sample_zeros.m	/^    oversample = 1.1;$/;"	v
overwrite_fields	lib/TrialData/Tools/aliasTDfields.m	/^overwrite_fields = false;$/;"	v
p	lib/TrialData/Analysis/runDPCA.m	/^        p = valIdx(depthCount,:)==i;$/;"	v
p	lib/neuron-table/plotTuning.m	/^            p = plot(th_wrap,curve_wrap,'linewidth',2,'color',color);$/;"	v
p	lib/neuron-table/plotTuning.m	/^        p = plot_curve(neuron_table(signum,:),indiv_params);$/;"	v
p	lib/neuron-table/plotTuning.m	/^        p = plot_pd(neuron_table(signum,:),indiv_params);$/;"	v
p	lib/plot_traces.m	/^            p = plot(...$/;"	v
p	lib/plot_traces.m	/^            p = plot3(...$/;"	v
p	lib/plot_traces.m	/^        p = plot(...$/;"	v
p	lib/plot_traces.m	/^        p = plot3(...$/;"	v
p	lib/tensor_toolbox/@sptensor/private/extract.m	/^p = size(srchsubs,1);$/;"	v
p	lib/tensor_toolbox/@sptensor/ttt.m	/^    p = 1;$/;"	v
p	lib/tensor_toolbox/@sptensor/ttt.m	/^    p = length(junk);$/;"	v
p	lib/tensor_toolbox/@symktensor/entry.m	/^p = size(X,2);$/;"	v
p	lib/tensor_toolbox/@symktensor/symktensor.m	/^    p = varargin{3};$/;"	v
p	lib/tensor_toolbox/@symktensor/symktensor.m	/^   p = length(v) \/ (n+1);$/;"	v
p	lib/tensor_toolbox/@symktensor/symktensor.m	/^   p = length(v) \/ n;$/;"	v
p	lib/tensor_toolbox/@symtensor/tenfun.m	/^p = nchoosek(m+n-1,m);$/;"	v
p	lib/tensor_toolbox/@tensor/issymmetric.m	/^            p = perms(grps{i});$/;"	v
p	lib/tensor_toolbox/@tensor/ttm.m	/^        p = size(V, 2);$/;"	v
p	lib/tensor_toolbox/@tensor/ttm.m	/^        p = size(V,1);$/;"	v
p	lib/tensor_toolbox/@tensor/ttm.m	/^        p = size(V,2);$/;"	v
p	lib/tensor_toolbox/@tensor/ttm.m	/^       p = size(V, 1);$/;"	v
p	lib/tensor_toolbox/create_guess.m	/^            p = params.Pertubation * norm(X,'fro') \/ norm(N,'fro');$/;"	v
p	lib/tensor_toolbox/create_guess.m	/^p = inputParser;$/;"	v
p	lib/tensor_toolbox/create_problem.m	/^p = inputParser;$/;"	v
p	lib/tensor_toolbox/doc/cp_apr_doc.m	/^        p = randperm(sz(n));$/;"	v
p	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^p = 0.35; $/;"	v
p	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^        p = randperm(sz(k));$/;"	v
p	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
p	lib/tensor_toolbox/doc/html/ttb.css	/^p { padding:0px; margin:0px 0px 20px; }$/;"	s
p	lib/tensor_toolbox/doc/test_problems_doc.m	/^        p = randperm(sz(n));$/;"	v
p	lib/tensor_toolbox/eig_geap.m	/^p = inputParser;$/;"	v
p	lib/tensor_toolbox/eig_sshopm.m	/^p = inputParser;$/;"	v
p	lib/tensor_toolbox/eig_sshopmc.m	/^p = inputParser;$/;"	v
p	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="p">$/;"	m
p	lib/tensor_toolbox/teneye.m	/^   p = perms(idx(i,:));$/;"	v
p	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            p = nchoosek(m+n-1,m);$/;"	v
p img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
pairwiseCorr	lib/TrialData/Analysis/pairwiseCorr.m	/^function [rho,sort_idx] = pairwiseCorr(trial_data,params)$/;"	f
param	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    param = str2double(tmp{2}(2:end-1));$/;"	v
paramPCA	lib/TrialData/td_limblab/BBDemoScript.m	/^paramPCA = struct('signals', 'S1_spikes');$/;"	v
paramRange	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^paramRange = [0.5 60];$/;"	v
param_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^param_events = setdiff(event_list,time_events);$/;"	v
params	lib/TrialData/Analysis/runDPCA.m	/^params = varargin{end}; if ~isstruct(params), error('Last input must be params.'); end$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = struct();$/;"	v
params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    params      = varargin{2};$/;"	v
params	lib/TrialData/Tools/dupeAndShift.m	/^            params = varargin{end};$/;"	v
params	lib/TrialData/Tools/dupeAndShift.m	/^params = [];$/;"	v
params	lib/TrialData/Tools/getLFPidx.m	/^            params = struct();$/;"	v
params	lib/TrialData/Tools/getLFPidx.m	/^        params = varargin{1};$/;"	v
params	lib/TrialData/td_limblab/parseFileByTrial.m	/^    params = struct();$/;"	v
params	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^params = 2:length(size(X));$/;"	v
params	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^    params = struct();$/;"	v
params	lib/tensor_toolbox/@ktensor/score.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/@ktensor/viz.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/@symktensor/fg_setup.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_als.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_apr.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_arls.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_opt.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_sym.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/cp_wopt.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/create_guess.m	/^params = p.Results;$/;"	v
params	lib/tensor_toolbox/create_problem.m	/^params = p.Results;$/;"	v
params	lib/tensor_toolbox/create_problem_binary.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/gcp_opt.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/hosvd.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/maintenance/update_classlist.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/maintenance/update_copyright.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/tucker_als.m	/^params = inputParser;$/;"	v
params	lib/tensor_toolbox/tucker_sym.m	/^params = inputParser;$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    paramsubsets = options.combinedParams;$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^paramsubsets = subsets(params);$/;"	v
paramsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^paramsubsets = subsets(params-1);$/;"	v
paramsubsubsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    paramsubsubsets = subsets(indRest);$/;"	v
parseFileByTrial	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial(data,params)$/;"	f
parseFileByTrial_cds	lib/TrialData/td_limblab/parseFileByTrial.m	/^function [trial_data,td_params] = parseFileByTrial_cds(cds,params)$/;"	f
part_eval	bumpcurl_analysis.m	/^    part_eval = evalModel(td_ad,eval_params);$/;"	v
pass	lib/TrialData/td_limblab/coord_test.m	/^    pass = false(4,1);$/;"	v
path	lib/TrialData/util/openNSx_td.m	/^    path  = [path '\/'];$/;"	v
patientTrigPacketID	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketID = 65532;$/;"	v
patientTrigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^patientTrigPacketIDIndices = find(PacketIDs == patientTrigPacketID);$/;"	v
pattern	lib/tensor_toolbox/tenrandblk.m	/^    pattern = zeros(gsz);$/;"	v
pc	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^pc = dec2bin(1:2^d-1) - '0';$/;"	v
pc	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^pc = fliplr(pc(ind,:));$/;"	v
pcFields	lib/TrialData/util/openNEV_td.m	/^                            pcFields = fields(tempParsedCommand);$/;"	v
pca_algorithm	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_algorithm   =  'svd'; % algorithm for PCA$/;"	v
pca_algorithm	lib/TrialData/Analysis/getPotentSpace.m	/^pca_algorithm      =  'svd';  % which PCA algorithm$/;"	v
pca_algorithm	lib/TrialData/Tools/dimReduce.m	/^pca_algorithm     = 'svd';  % algorithm for PCA$/;"	v
pca_array	lib/TrialData/Plotting/visData.m	/^pca_array         =   '';$/;"	v
pca_centered	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_centered    =  true;  % whether to center data$/;"	v
pca_centered	lib/TrialData/Analysis/getPotentSpace.m	/^pca_centered       =  true;   % whether to center data$/;"	v
pca_dims	lib/TrialData/Plotting/visData.m	/^pca_dims          =   1:3;$/;"	v
pca_economy	lib/TrialData/Analysis/estimateDimensionality.m	/^pca_economy     =  false; % if num samples < degrees of freedom, will pad with zeros to keep out/;"	v
pca_economy	lib/TrialData/Tools/dimReduce.m	/^pca_economy       = false;  % if num samples < degrees of freedom, will pad with zeros to keep o/;"	v
pca_info	lib/TrialData/Analysis/getPotentSpace.m	/^pca_info = struct(        ...$/;"	v
pca_params	lib/TrialData/Analysis/getPotentSpace.m	/^pca_params = params;$/;"	v
pca_params	lib/TrialData/TrialData_tutorial.m	/^pca_params = struct( ...$/;"	v
pca_params	lib/TrialData/td_limblab/subspace_demo.m	/^pca_params = struct( ...$/;"	v
pdTable	lib/TrialData/td_limblab/BBDemoScript.m	/^pdTable= getTDPDs(trial_data_pca, paramsPDs);$/;"	v
pdTable	lib/neuron-table/getPDsFromWeights.m	/^pdTable = horzcat(pdTable,tab_append{:});$/;"	v
pdTable	lib/neuron-table/getPDsFromWeights.m	/^pdTable = unique(weightTable(:,key_cols));$/;"	v
pdTable	lib/neuron-table/getTDClassicalPDs.m	/^pdTable = horzcat(starter,pdTable_cell{:});$/;"	v
pdTable	lib/neuron-table/getTDPDs.m	/^pdTable = horzcat(starter,tab_append{:});$/;"	v
pdTable_cell	lib/neuron-table/getTDClassicalPDs.m	/^pdTable_cell = cell(1,num_in_signals*3);$/;"	v
pdTable_unit1	lib/neuron-table/comparePDClouds.m	/^    pdTable_unit1 = pdTable1(unit_idx,:);$/;"	v
pdTable_unit2	lib/neuron-table/comparePDClouds.m	/^    pdTable_unit2 = pdTable2(unit_idx,:);$/;"	v
pd_colname	lib/neuron-table/compareTuning.m	/^pd_colname = 'velPD';$/;"	v
pd_colname	lib/neuron-table/plotTuning.m	/^    pd_colname = 'velPD';$/;"	v
pd_linspec	lib/neuron-table/plotTuning.m	/^    pd_linspec = '-';$/;"	v
pdf	lib/neuron-table/getTDClassicalPDs.m	/^    pdf = [pdf(end);pdf];$/;"	v
pdf	lib/neuron-table/getTDClassicalPDs.m	/^    pdf = circ_ksdensity(inDir,test_dirs,10);$/;"	v
peak_divisor	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_divisor        = 2;$/;"	v
peak_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_idx_offset  = 0;$/;"	v
peak_name	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^peak_name        =  'peak_speed';$/;"	v
peak_name	lib/TrialData/td_limblab/getRWMovements.m	/^peak_name          =  'peak_speed';$/;"	v
peaks	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        peaks = [dds(1:end-1)>0 & dds(2:end)<0; 0];$/;"	v
perms_loop	lib/tensor_toolbox/teneye.m	/^function P = perms_loop(N)$/;"	f
perms_no_rep	lib/tensor_toolbox/teneye.m	/^function PN = perms_no_rep(N,K)$/;"	f
perms_rep	lib/tensor_toolbox/teneye.m	/^function PR = perms_rep(N,K)$/;"	f
permute	lib/tensor_toolbox/@ktensor/permute.m	/^function b = permute(a,order)$/;"	f
permute	lib/tensor_toolbox/@sptensor/permute.m	/^function t = permute(t,order)$/;"	f
permute	lib/tensor_toolbox/@symktensor/permute.m	/^function b = permute(a,order)$/;"	f
permute	lib/tensor_toolbox/@tensor/permute.m	/^function T = permute(T,order)$/;"	f
permute	lib/tensor_toolbox/@ttensor/permute.m	/^function b = permute(a,order)$/;"	f
pgtol	lib/tensor_toolbox/gcp_opt.m	/^pgtol = params.Results.pgtol;$/;"	v
phi_row	lib/tensor_toolbox/cp_apr.m	/^        phi_row = w * Pi;$/;"	v
pi	lib/tensor_toolbox/@symtensor/full.m	/^            pi = perms(i);$/;"	v
plasma	lib/matlab-colors/PythonColors/Colormaps/plasma.m	/^function cm_data=plasma(m)$/;"	f
plot3D_td	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^function plot3D_td(seq, xspec, varargin)$/;"	f
plotBumpcurlTuning	plotBumpcurlTuning.m	/^function plotBumpcurlTuning(trial_data)$/;"	f
plotErrorEllipse	lib/plotErrorEllipse.m	/^function plotErrorEllipse(mu, Sigma, p, varargin)$/;"	f
plotTensorDecomp	lib/plotTensorDecomp.m	/^function plotTensorDecomp(M, params)$/;"	f
plotTuning	lib/neuron-table/plotTuning.m	/^function plotTuning(neuron_table,params)$/;"	f
plotTuningDistr	plotTuningDistr.m	/^function plotTuningDistr(trial_data)$/;"	f
plotWeightClouds	lib/neuron-table/plotWeightClouds.m	/^function plotWeightClouds(tuningTable,params,varargin)$/;"	f
plot_ci	lib/neuron-table/plotTuning.m	/^    plot_ci = true;$/;"	v
plot_curve	lib/neuron-table/plotTuning.m	/^function p = plot_curve(curve,params)$/;"	f
plot_dim	lib/plot_traces.m	/^    plot_dim = 3;$/;"	v
plot_field	lib/animateBumpcurlTrials.m	/^            plot_field = td(i).(field);$/;"	v
plot_learning_behavior	bumpcurl_dpca.m	/^function plot_learning_behavior(trial_data_cell)$/;"	f
plot_pca	lib/TrialData/Plotting/visData.m	/^    plot_pca = false;$/;"	v
plot_pca	lib/TrialData/Plotting/visData.m	/^plot_pca          =   false;$/;"	v
plot_pd	lib/neuron-table/plotTuning.m	/^function p = plot_pd(pdData,params)$/;"	f
plot_permutes	lib/plot_trace_projections.m	/^    plot_permutes = {[1 2];[2 3];[1 3]};$/;"	v
plot_signals	lib/TrialData/Plotting/visData.m	/^plot_signals      =   {'vel'};$/;"	v
plot_trace_projections	lib/plot_trace_projections.m	/^function plot_trace_projections(trial_data,params)$/;"	f
plot_traces	lib/plot_traces.m	/^function plot_traces(trial_data,params)$/;"	f
plotnum	bumpcurl_analysis.m	/^                plotnum = (1+num_dirs)*(neuron_ctr-1)+dir_ctr;$/;"	v
plotnum	bumpcurl_analysis.m	/^            plotnum = (1+num_dirs)*(neuron_ctr);$/;"	v
plus	lib/tensor_toolbox/@ktensor/plus.m	/^function C = plus(A,B)$/;"	f
plus	lib/tensor_toolbox/@sptensor/plus.m	/^function C = plus(A,B)$/;"	f
plus	lib/tensor_toolbox/@sumtensor/plus.m	/^function t = plus( t, x )$/;"	f
plus	lib/tensor_toolbox/@symtensor/plus.m	/^function Z = plus( X, Y )$/;"	f
plus	lib/tensor_toolbox/@tenmat/plus.m	/^function Z = plus(X,Y)$/;"	f
plus	lib/tensor_toolbox/@tensor/plus.m	/^function Z = plus(X,Y)$/;"	f
point	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^point = 'hand';$/;"	v
point_idx	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    point_idx = cell(1,3);$/;"	v
point_idx	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    point_idx = repmat({point_idx},length(coord_postfix),1);$/;"	v
polynomial	lib/TrialData/Analysis/getModel.m	/^polynomial    =  0; % order of cascaded nonlinearity$/;"	v
pos	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    pos = trial_data(i).(start_idx_name);$/;"	v
pos	lib/TrialData/td_limblab/getTargetDirection.m	/^    pos = trial_data(i).pos;$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axBar, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(axCum, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    pos = get(gca, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(axColormap, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(cb, 'Position');$/;"	v
pos	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^pos = get(gca, 'Position');$/;"	v
pos_cols	lib/TrialData/Plotting/visData.m	/^pos_cols           =   2;        % how many columns for position plot$/;"	v
pos_location	lib/TrialData/Plotting/visData.m	/^pos_location       =   'right'; % if position plot is on 'left' or 'right'$/;"	v
pos_offset	lib/TrialData/Plotting/visData.m	/^pos_offset        =   [0, 0]; % offset to zero position$/;"	v
pos_offset	lib/TrialData/td_limblab/parseFileByTrial.m	/^pos_offset     =  [0,0];$/;"	v
pos_range	lib/TrialData/Plotting/visData.m	/^pos_range          =   [-9,9];   % range for 2-D position plot axes$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = floor(num_rows\/2);$/;"	v
pos_rows_max	lib/TrialData/Plotting/visData.m	/^    pos_rows_max = num_rows;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = 0;$/;"	v
pos_start	lib/TrialData/Plotting/visData.m	/^        pos_start = time_cols;$/;"	v
possible_corrs	lib/neuron-table/getTuningCurves.m	/^possible_corrs = {'vel','acc','force'};$/;"	v
possible_metrics	lib/TrialData/Analysis/evalModel.m	/^possible_metrics = {'pr2','vaf','r2','r'};$/;"	v
postprocess	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^function [estParams, seqTrain, seqTest] = postprocess(ws, varargin)$/;"	f
power	lib/tensor_toolbox/@symtensor/power.m	/^function Z = power(X,Y)$/;"	f
power	lib/tensor_toolbox/@tensor/power.m	/^function Z = power(X,Y)$/;"	f
prctile_cutoff	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_cutoff  =  99.5;$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^        prctile_dist    =  get_master_dist();$/;"	v
prctile_dist	lib/TrialData/Tools/removeBadNeurons.m	/^prctile_dist = [ ...$/;"	v
pre	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
pre	lib/tensor_toolbox/doc/html/ttb.css	/^pre { margin:0px 0px 20px; }$/;"	s
pre	lib/tensor_toolbox/doc/html/ttb.css	/^pre, code { font-size:12px; }$/;"	s
pre	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="pre">$/;"	m
pre img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
pre.codeinput	lib/tensor_toolbox/doc/html/ttb.css	/^@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }$/;"	c
pre.codeinput	lib/tensor_toolbox/doc/html/ttb.css	/^pre.codeinput { padding:10px; border:1px solid #d3d3d3; background:#f7f7f7; }$/;"	c
pre.codeoutput	lib/tensor_toolbox/doc/html/ttb.css	/^@media print { pre.codeinput, pre.codeoutput { word-wrap:break-word; width:100%; } }$/;"	c
pre.codeoutput	lib/tensor_toolbox/doc/html/ttb.css	/^pre.codeoutput { padding:10px 11px; margin:0px 0px 20px; color:#4c4c4c; }$/;"	c
pre.error	lib/tensor_toolbox/doc/html/ttb.css	/^pre.error { color:red; }$/;"	c
precisionType	lib/TrialData/util/openNSx_td.m	/^				precisionType = '*int16=>int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*int16';$/;"	v
precisionType	lib/TrialData/util/openNSx_td.m	/^                precisionType = '*short=>short';$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i}(3:end);$/;"	v
precisionTypeRaw	lib/TrialData/util/openNSx_td.m	/^            precisionTypeRaw = varargin{i};$/;"	v
precomputeSparseIndices	lib/tensor_toolbox/cp_apr.m	/^precomputeSparseIndices = params.Results.precompinds;$/;"	v
pred_red	lib/tensor_toolbox/cp_apr.m	/^    pred_red = (search_dir(free_indices)' * gradM(free_indices)) + (0.5 * q);$/;"	v
predict_kalman	lib/TrialData/util/predict_kalman.m	/^function [STATEnew,Vnew,VVnew] = predict_kalman(kf_model,OBSERVATIONS,STATE0,V0)$/;"	f
preds	bumpcurl_lda.m	/^                        preds = predict(mdl,fr_test(:,:,timepoint));$/;"	v
prefix	lib/neuron-table/getTDClassicalPDs.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/neuron-table/getTDClassicalPDs.m	/^prefix = '';$/;"	v
prefix	lib/neuron-table/getTDModelWeights.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/neuron-table/getTDModelWeights.m	/^prefix = '';$/;"	v
prefix	lib/neuron-table/getTDPDs.m	/^        prefix = [prefix '_'];$/;"	v
prefix	lib/neuron-table/getTDPDs.m	/^prefix = '';$/;"	v
prefix	lib/neuron-table/getTuningCurves.m	/^    prefix = strcat(prefix,'_');$/;"	v
prefix	lib/neuron-table/getTuningCurves.m	/^prefix = '';$/;"	v
preserveSign	lib/TrialData/util/angleDiff.m	/^    preserveSign = true;$/;"	v
printInnerItn	lib/tensor_toolbox/cp_apr.m	/^printInnerItn           = params.Results.printinneritn;$/;"	v
printInnerItn	lib/tensor_toolbox/cp_apr.m	/^printInnerItn = params.Results.printinneritn;$/;"	v
printOuterItn	lib/tensor_toolbox/cp_apr.m	/^printOuterItn           = params.Results.printitn;$/;"	v
printOuterItn	lib/tensor_toolbox/cp_apr.m	/^printOuterItn = params.Results.printitn;$/;"	v
print_sublist	lib/tensor_toolbox/@ktensor/datadisp.m	/^function print_sublist(score, labels, type, maxentries, threshold)$/;"	f
printitn	lib/tensor_toolbox/cp_als.m	/^printitn = params.Results.printitn;$/;"	v
printitn	lib/tensor_toolbox/cp_arls.m	/^printitn = params.Results.printitn;$/;"	v
printitn	lib/tensor_toolbox/cp_nmu.m	/^printitn = setparam(opts,'printitn',1);$/;"	v
printitn	lib/tensor_toolbox/gcp_opt.m	/^printitn = params.Results.printitn;$/;"	v
printitn	lib/tensor_toolbox/tucker_als.m	/^printitn = params.Results.printitn;$/;"	v
printitn	lib/tensor_toolbox/tucker_sym.m	/^printitn = params.Results.printitn;$/;"	v
printneg	lib/tensor_toolbox/@ktensor/datadisp.m	/^printneg = setparam(opts,'printneg',false);$/;"	v
probrange	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^probrange = [0.01 0.99]; % Absolute min and max of probabilities$/;"	v
processNEV	lib/TrialData/DataProcessing/processNEV.m	/^function out = processNEV(filename,signal_info)$/;"	f
processNSx	lib/TrialData/DataProcessing/processNSx.m	/^function out = processNSx(filename,signal_info)$/;"	f
process_emg	lib/TrialData/util/process_emg.m	/^function emg_data = process_emg(data,params)$/;"	f
process_lfp	lib/TrialData/util/process_lfp.m	/^function [lfp_data,t_fft] = process_lfp(data,t,params)$/;"	f
processor	lib/TrialData/td_limblab/addProcessedSignal.m	/^processor = [];$/;"	v
projGradStep	lib/tensor_toolbox/cp_apr.m	/^    projGradStep = (m_row - grad') .* (m_row - grad' > 0);$/;"	v
projGradStep	lib/tensor_toolbox/cp_apr.m	/^    projGradStep = (m_row - gradM') .* (m_row - gradM' > 0);$/;"	v
prosample	lib/tensor_toolbox/create_problem.m	/^function output = prosample(nsamples, prob)$/;"	f
q	lib/tensor_toolbox/@symktensor/entry.m	/^q = size(I,1);$/;"	v
q	lib/tensor_toolbox/@tensor/issymmetric.m	/^                q = 1:n;$/;"	v
q	lib/tensor_toolbox/cp_apr.m	/^    q = search_dir(free_indices)' ...$/;"	v
q	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
q	lib/tensor_toolbox/teneye.m	/^    q = P;$/;"	v
q	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            q = randi(p);$/;"	v
q	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            q = randi(p,25,1);$/;"	v
q:after	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
q:before	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
qsubs	lib/tensor_toolbox/@symtensor/subsasgn.m	/^                qsubs = sort(S.subs{1},2); %Sort the indices$/;"	v
qsubs	lib/tensor_toolbox/@symtensor/subsref.m	/^                qsubs = sort(S.subs{1},2); % Sort the indices$/;"	v
qualFlag	lib/matlab-colors/linspecer/linspecer.m	/^            qualFlag = 1;$/;"	v
qualFlag	lib/matlab-colors/linspecer/linspecer.m	/^qualFlag = 0;$/;"	v
r	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^r = [5 48 97]\/256;       %# end$/;"	v
r	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    r     = rank(cX);$/;"	v
r	lib/TrialData/util/circular_mean.m	/^r = sum(w.*exp(1i*alpha),dim);$/;"	v
r	lib/tensor_toolbox/@ktensor/arrange.m	/^    r = length(X.lambda);$/;"	v
r	lib/tensor_toolbox/@ktensor/datadisp.m	/^        r = foo;$/;"	v
r	lib/tensor_toolbox/@ktensor/datadisp.m	/^        r = r+1;$/;"	v
r	lib/tensor_toolbox/@ktensor/datadisp.m	/^r = 1;$/;"	v
r	lib/tensor_toolbox/@ktensor/mask.m	/^r = ncomponents(X);$/;"	v
r	lib/tensor_toolbox/@ktensor/subsref.m	/^            r = length(t.lambda);$/;"	v
r	lib/tensor_toolbox/@ktensor/update.m	/^r = ncomponents(M);$/;"	v
r	lib/tensor_toolbox/@sptenmat/disp.m	/^    r = input('Are you sure you want to print all nonzeros? (Y\/N) ','s');$/;"	v
r	lib/tensor_toolbox/@sptensor/disp.m	/^    r = input('Are you sure you want to print all nonzeros? (Y\/N) ','s');$/;"	v
r	lib/tensor_toolbox/@sptensor/private/irenumber.m	/^    r = range{i};$/;"	v
r	lib/tensor_toolbox/@sptensor/private/subdims.m	/^    r = subd{i};$/;"	v
r	lib/tensor_toolbox/@tensor/mttkrps.m	/^    r = size(K,2);$/;"	v
r	lib/tensor_toolbox/@tensor/mttkrps.m	/^r = size(U1,2);$/;"	v
r	lib/tensor_toolbox/doc/symktensor_doc.m	/^r = 2; %The rank of the decomposition$/;"	v
r	lib/tensor_toolbox/hosvd.m	/^    r = ranks;$/;"	v
r	lib/tensor_toolbox/hosvd.m	/^    r = zeros(d,1);$/;"	v
r	lib/tensor_toolbox/import_data.m	/^    r = import_rank(fid);$/;"	v
r	lib/tensor_toolbox/import_data.m	/^r = sscanf(line, '%d');$/;"	v
r	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            r = (min(2,p):min(4,p))';$/;"	v
r	lib/tensor_toolbox/tests/Test_Tensor.m	/^                r = randi(sz(n));$/;"	v
r	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^        r = param;$/;"	v
r2	lib/TrialData/util/compute_r2.m	/^r2 = zeros(numSigs,1);$/;"	v
r2	lib/TrialData/util/lib/isomap/IsomapII.m	/^     r2 = 1-corrcoef(reshape(real(Isomap_L2_distance(Y.coords{di}, Y.coords{di}(:,land_ind))),N*/;"	v
r2	lib/TrialData/util/lib/isomap/isomap.m	/^         r2 = 1-corrcoef(reshape(real(L2_distance(Y.coords{di}, Y.coords{di})),N^2,1),D).^2; $/;"	v
r2_glm	lib/TrialData/td_limblab/BBDemoScript.m	/^r2_glm = evalModel(trial_data_glm, params);$/;"	v
r_fill	lib/neuron-table/plotTuning.m	/^            r_fill = [0 maxFR maxFR 0];$/;"	v
r_fill	lib/neuron-table/plotTuning.m	/^            r_fill = [repmat(curve.(sprintf('%sCIlow',curve_colname)),1,3),...$/;"	v
r_fill	lib/neuron-table/plotTuning.m	/^            r_fill = r_fill(~isnan(r_fill));$/;"	v
r_scramble	lib/neuron-table/getTDClassicalPDs.m	/^            r_scramble = zeros(num_boots,1);$/;"	v
r_true	lib/neuron-table/getTDClassicalPDs.m	/^            r_true = mean(boot_r);$/;"	v
rand_column_stochastic	lib/tensor_toolbox/create_problem.m	/^function Y = rand_column_stochastic(M,N)$/;"	f
rand_orth_mat	lib/tensor_toolbox/create_problem.m	/^function Y = rand_orth_mat(M,N)$/;"	f
range	lib/tensor_toolbox/@ktensor/datadisp.m	/^    range = 1:entries;$/;"	v
range	lib/tensor_toolbox/@ktensor/datadisp.m	/^    range = entries:-1:1;$/;"	v
ranges	lib/TrialData/Tools/removeBadTrials.m	/^ranges         = [];$/;"	v
ranks	lib/tensor_toolbox/hosvd.m	/^ranks = params.Results.ranks;$/;"	v
rate	lib/tensor_toolbox/gcp_opt.m	/^rate = params.Results.rate;$/;"	v
rcb_b	lib/TrialData/Tools/convBasisFunc.m	/^rcb_b         =  [];$/;"	v
rcb_hpeaks	lib/TrialData/Tools/convBasisFunc.m	/^rcb_hpeaks    =  [];$/;"	v
rcb_n	lib/TrialData/Tools/convBasisFunc.m	/^rcb_n         =  [];$/;"	v
rdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^            rdims = setdiff(1:n, cdims);$/;"	v
rdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^            rdims = varargin{2};$/;"	v
rdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    rdims = varargin{2};$/;"	v
rdims	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    rdims = varargin{3};$/;"	v
rdims	lib/tensor_toolbox/@sptensor/ttm.m	/^rdims = Xnt.rdims;$/;"	v
rdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^	    rdims = find(tmp);   % i.e., rdims = setdiff(1:n, cdims);$/;"	v
rdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^            rdims = varargin{2};$/;"	v
rdims	lib/tensor_toolbox/@tenmat/tenmat.m	/^    rdims = varargin{2};$/;"	v
rdims	lib/tensor_toolbox/doc/identities_doc.m	/^  rdims = n;$/;"	v
rdims	lib/tensor_toolbox/doc/identities_doc.m	/^  rdims = setdiff(1:ndims(X),cdims);$/;"	v
rdims	lib/tensor_toolbox/doc/identities_doc.m	/^rdims = 1:ndims(X);$/;"	v
rdivide	lib/tensor_toolbox/@sptensor/rdivide.m	/^function C = rdivide(A,B)$/;"	f
rdivide	lib/tensor_toolbox/@symtensor/rdivide.m	/^function Z = rdivide(X,Y)$/;"	f
rdivide	lib/tensor_toolbox/@tensor/rdivide.m	/^function Z = rdivide(X,Y)$/;"	f
reach_distance	lib/TrialData/td_limblab/getTargetDirection.m	/^reach_distance  =  8; % cm$/;"	v
readSize	lib/TrialData/util/openNSx_td.m	/^    readSize                   = double(ChannelCount * ExtHeaderLength);$/;"	v
readTime	lib/TrialData/util/openNEV_td.m	/^                readTime = [temp(1), temp(end)];$/;"	v
read_waveforms	lib/TrialData/DataProcessing/processNEV.m	/^read_waveforms   = false; % (not implemented) whether to include waveforms for spikes. Big file /;"	v
recenter_for_proj	lib/TrialData/Tools/dimReduce.m	/^recenter_for_proj = false;  % whether to recenter data before projecting into PC space$/;"	v
reconfigPacketID	lib/TrialData/util/openNEV_td.m	/^reconfigPacketID = 65531;$/;"	v
reconfigPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^reconfigPacketIDIndices    = find(PacketIDs == reconfigPacketID);$/;"	v
redBlue256	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^redBlue256 = [c1;c2];$/;"	v
redistribute	lib/tensor_toolbox/@ktensor/redistribute.m	/^function X = redistribute(X,mode)$/;"	f
region	lib/tensor_toolbox/@sptensor/subsref.m	/^            region = s(1).subs;$/;"	v
region	lib/tensor_toolbox/@tensor/subsref.m	/^            region = s(1).subs;$/;"	v
rejection_num_chans	lib/TrialData/DataProcessing/processNEV.m	/^rejection_num_chans = 10;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = 3;$/;"	v
rejection_num_chans	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_num_chans = varargin{2};$/;"	v
rejection_samples	lib/TrialData/util/remove_spike_artifacts.m	/^rejection_samples = rejection_window*30000;$/;"	v
rejection_window	lib/TrialData/DataProcessing/processNEV.m	/^rejection_window = 0.0005;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = 0.001;$/;"	v
rejection_window	lib/TrialData/util/remove_spike_artifacts.m	/^    rejection_window = varargin{3};  % in seconds$/;"	v
rel_learning_dPC	lib/get_dpca_var.m	/^                        rel_learning_dPC = block_learning_dPC-learning_dPC_end;$/;"	v
relerr	lib/tensor_toolbox/doc/hosvd_doc.m	/^relerr = norm(X-full(T))\/norm(X)$/;"	v
rellambda	lib/tensor_toolbox/@ktensor/viz.m	/^    rellambda = abs (K.lambda \/ K.lambda(1));$/;"	v
relnorm	lib/tensor_toolbox/hosvd.m	/^    relnorm = sqrt(diffnormsqr\/normxsqr);$/;"	v
reload_NEV	lib/TrialData/DataProcessing/processNEV.m	/^reload_NEV       = false;$/;"	v
remdims	lib/tensor_toolbox/@ktensor/ttv.m	/^remdims = setdiff(1:ndims(a),dims);$/;"	v
remdims	lib/tensor_toolbox/@sptensor/collapse.m	/^remdims = setdiff(1:ndims(t),dims);$/;"	v
remdims	lib/tensor_toolbox/@sptensor/contract.m	/^remdims = setdiff(1:ndims(x),[i j]);$/;"	v
remdims	lib/tensor_toolbox/@sptensor/ttv.m	/^remdims = setdiff(1:ndims(a),dims);$/;"	v
remdims	lib/tensor_toolbox/@tensor/collapse.m	/^remdims = setdiff(1:ndims(X),dims);$/;"	v
remdims	lib/tensor_toolbox/@tensor/contract.m	/^remdims = setdiff(1:ndims(x),[i j]);$/;"	v
remdims	lib/tensor_toolbox/@tensor/scale.m	/^remdims = setdiff(1:ndims(X),dims);$/;"	v
remdims	lib/tensor_toolbox/@tensor/ttv.m	/^remdims = setdiff(1:ndims(a),dims);$/;"	v
remdims	lib/tensor_toolbox/@ttensor/ttv.m	/^remdims = setdiff(1:ndims(a),dims);$/;"	v
removeBadNeurons	lib/TrialData/Tools/removeBadNeurons.m	/^function [trial_data,bad_units] = removeBadNeurons(trial_data,params)$/;"	f
removeBadTrials	lib/TrialData/Tools/removeBadTrials.m	/^function [trial_data,bad_trials] = removeBadTrials(trial_data,params)$/;"	f
remove_artifacts	lib/TrialData/DataProcessing/processNEV.m	/^remove_artifacts = false; % whether to remove the artifacts$/;"	v
remove_common_avg	lib/TrialData/util/process_lfp.m	/^remove_common_avg =  true;     % whether to do common average referencing$/;"	v
remove_incomplete	lib/TrialData/td_limblab/getRWMovements.m	/^remove_incomplete  =  false;$/;"	v
remove_nan_idx	lib/TrialData/Tools/removeBadTrials.m	/^remove_nan_idx = false;$/;"	v
remove_old_fields	lib/TrialData/Tools/aliasTDfields.m	/^remove_old_fields = true;$/;"	v
remove_short	lib/TrialData/Tools/trimTD.m	/^remove_short = false;$/;"	v
remove_spike_artifacts	lib/TrialData/util/remove_spike_artifacts.m	/^function unit_structure = remove_spike_artifacts(varargin)$/;"	f
remove_time_avg	lib/TrialData/util/process_lfp.m	/^remove_time_avg   =  true;     % whether to center  data in time$/;"	v
removesubs	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                removesubs = loc(idxb);$/;"	v
renumber	lib/tensor_toolbox/@sptensor/private/renumber.m	/^function [newsubs, newsz] = renumber(subs, sz, range)$/;"	f
renumberdim	lib/tensor_toolbox/@sptensor/private/renumber.m	/^function [newidx, newsz] = renumberdim(idx, sz, range)$/;"	f
reorderTDfields	lib/TrialData/Tools/reorderTDfields.m	/^function trial_data = reorderTDfields(trial_data)$/;"	f
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = (1:length(fn_cont_new))';$/;"	v
reorder_idx	lib/TrialData/Tools/reorderTDfields.m	/^        reorder_idx = [reorder_idx(1:og_idx); the_val; reorder_idx(og_idx+1:end)];$/;"	v
repeattic	bumpcurl_lda.m	/^            repeattic = tic;$/;"	v
replacement	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  <xsl:param name="replacement"\/>$/;"	p	namedTemplate:globalReplace
res	lib/tensor_toolbox/@ktensor/innerprod.m	/^      res = res + X.lambda(r) * ttv(Y,vecs);$/;"	v
res	lib/tensor_toolbox/@ktensor/innerprod.m	/^    res = 0;$/;"	v
res	lib/tensor_toolbox/@ktensor/innerprod.m	/^    res = sum(M(:));$/;"	v
res	lib/tensor_toolbox/@ktensor/viz.m	/^res = params.Results;$/;"	v
res	lib/tensor_toolbox/@sptensor/innerprod.m	/^            res = 0;$/;"	v
res	lib/tensor_toolbox/@sptensor/innerprod.m	/^        res = VY'*VX;$/;"	v
res	lib/tensor_toolbox/@sptensor/innerprod.m	/^        res = innerprod(Y,X);$/;"	v
res	lib/tensor_toolbox/@sptensor/innerprod.m	/^    res = 0;$/;"	v
res	lib/tensor_toolbox/@sumtensor/innerprod.m	/^    res = res + innerprod(X.part{i},Y); $/;"	v
res	lib/tensor_toolbox/@sumtensor/innerprod.m	/^res = innerprod(X.part{1},Y);$/;"	v
res	lib/tensor_toolbox/@tensor/innerprod.m	/^    res = innerprod(Y,X);  $/;"	v
res	lib/tensor_toolbox/@tensor/innerprod.m	/^    res = x*y;$/;"	v
res	lib/tensor_toolbox/@ttensor/innerprod.m	/^            res = innerprod(Y,X);$/;"	v
res	lib/tensor_toolbox/@ttensor/innerprod.m	/^            res = innerprod(Z,Y);$/;"	v
res	lib/tensor_toolbox/@ttensor/innerprod.m	/^        res = innerprod(X.core,J);$/;"	v
res	lib/tensor_toolbox/@ttensor/innerprod.m	/^        res = innerprod(Y,X);$/;"	v
res	lib/tensor_toolbox/@ttensor/innerprod.m	/^        res = innerprod(Z, X.core);$/;"	v
resamp_vec	lib/TrialData/util/resample_signals.m	/^resamp_vec = ones(size(data,1),1);$/;"	v
resamp_vec	lib/TrialData/util/resample_signals.m	/^resamp_vec = upsample(downsample(resamp_vec,Q),P);$/;"	v
resample_signals	lib/TrialData/td_limblab/parseFileByTrial.m	/^function out = resample_signals(data,var_list,bin_size,start_time,end_time)$/;"	f
resample_signals	lib/TrialData/util/resample_signals.m	/^function [dataResampled,ty] = resample_signals(data,tx,params)$/;"	f
reshape	lib/tensor_toolbox/@sptensor/reshape.m	/^function a = reshape(a,new_size,old_modes)$/;"	f
reshape	lib/tensor_toolbox/@tensor/reshape.m	/^function t = reshape(t,siz)$/;"	f
response_var	lib/neuron-table/getTDPDs.m	/^response_var = get_vars(trial_data(trial_idx),out_signals);$/;"	v
response_var	lib/neuron-table/getTuningCurves.m	/^response_var = get_vars(trial_data,out_signals);$/;"	v
response_var_in_bin	lib/neuron-table/getTuningCurves.m	/^    response_var_in_bin = response_var(dir_bins==bins(i),:)';$/;"	v
result	lib/TrialData/Analysis/runGPFA.m	/^result = neuralTraj_td(runIdx, dat, save_dir, 'method', method, 'xDim', xDim,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        result = gpfaEngine_td(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^        result = twoStageEngine_matt(seqTrain, seqTest, fname,...$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    result = [];$/;"	v
result	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^result = [];$/;"	v
return_empty	lib/TrialData/Tools/splitTD.m	/^return_empty       = false; % if true will return any trial that does not have a split idx$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(1:bounds{2});$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^                return_idx = return_idx(end-(bounds{2}-1):end);$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx( 1+floor(bounds(1)*length(return_idx)) : floor(bounds(2)*len/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^            return_idx = return_idx(bounds(1):bounds(2));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^    return_idx = return_idx(temp(1:n));$/;"	v
return_idx	lib/TrialData/Tools/getTDidx.m	/^return_idx = find(idx);$/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^                return_idx = return_idx(1:bounds{2});$/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^                return_idx = return_idx(end-(bounds{2}-1):end);$/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^        return_idx = return_idx( 1+floor(bounds(1)*length(return_idx)) : floor(bounds(2)*length(/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^        return_idx = return_idx(bounds(1):bounds(2));$/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^    return_idx = return_idx(temp(1:n));$/;"	v
return_idx	lib/neuron-table/getNTidx.m	/^return_idx = find(idx);$/;"	v
revision	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="revision">$/;"	m
reward_idx	lib/load_curl_data.m	/^        reward_idx = [td.result]=='R';$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = rho(sort_idx,sort_idx);$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^    rho = temp1 + temp2;$/;"	v
rho	lib/TrialData/Analysis/pairwiseCorr.m	/^rho = method(data).*(-1*eye(size(data,2))+ones(size(data,2)));$/;"	v
rho	lib/tensor_toolbox/cp_apr.m	/^                rho = actual_red \/ (-predicted_red);$/;"	v
rho	lib/tensor_toolbox/cp_apr.m	/^            rho = zeros(nSizeLBFGS, 1);$/;"	v
ridx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    ridx = [];$/;"	v
ridx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    ridx = ones(nnz(T),1);$/;"	v
ridx	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    ridx = tt_sub2ind(rsize,tsubs(:,rdims));$/;"	v
rmdims	lib/tensor_toolbox/@sptensor/subsref.m	/^                    rmdims = [rmdims i];$/;"	v
rmdims	lib/tensor_toolbox/@sptensor/subsref.m	/^            rmdims = [];                % dimensions to remove$/;"	v
rmdims	lib/tensor_toolbox/@tensor/subsref.m	/^                    rmdims = [rmdims i];$/;"	v
rmdims	lib/tensor_toolbox/@tensor/subsref.m	/^            rmdims = [];                % dimensions to remove$/;"	v
rmloc	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                rmloc = subdims(s.subs,t);$/;"	v
rng	lib/tensor_toolbox/tests/Test_Tensor.m	/^                rng = [1:idx-1, idx+1:prod(sz)]';$/;"	v
roundedD	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    roundedD = floor(d);$/;"	v
row	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        row = find(margRowSeq == m, 1);$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^            row_tally = row_tally + traj_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + kin_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^        row_tally = row_tally + spike_rows;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = 0;$/;"	v
row_tally	lib/TrialData/Plotting/visData.m	/^    row_tally = row_tally + event_rows;$/;"	v
rowsubprobStopTol	lib/tensor_toolbox/cp_apr.m	/^        rowsubprobStopTol = max(stoptol, kktViolations(iter) \/ 100.0);$/;"	v
rowsubprobStopTol	lib/tensor_toolbox/cp_apr.m	/^rowsubprobStopTol = stoptol;$/;"	v
rowsum	lib/tensor_toolbox/cp_apr.m	/^  rowsum = sum(Minit{n},2);$/;"	v
rsize	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^rsize = tsize(rdims);$/;"	v
rsubs	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^        rsubs = s.subs{1};$/;"	v
rsz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            rsz = usz - lsz;$/;"	v
runDPCA	lib/TrialData/Analysis/runDPCA.m	/^function [trial_data, dPCA_info] = runDPCA(trial_data,varargin)$/;"	f
runDir	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    runDir = sprintf([directory '\\\\mat_resultsgpfa\\\\run%s'], runIdx);$/;"	v
runGPFA	lib/TrialData/Analysis/runGPFA.m	/^function [trial_data, gpfa_out] = runGPFA(trial_data, params)$/;"	f
runIdx	lib/TrialData/Analysis/runGPFA.m	/^runIdx = ['-' [arrays{:}]];$/;"	v
run_func	lib/TrialData/DataProcessing/loadTDfiles.m	/^function [trial_data,out_params] = run_func(trial_data,funcCall)$/;"	f
run_through_error	lib/TrialData/DataProcessing/convertDataToTD.m	/^run_through_error = false; % false: breaks on error in signal processing$/;"	v
runtime	lib/tensor_toolbox/cp_sym.m	/^    runtime = toc(starttime);    $/;"	v
runtime	lib/tensor_toolbox/cp_sym.m	/^    runtime = toc(starttime);$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^    rw_td = getMoveOnsetAndPeak(rw_td,struct( ...$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^rw_td = reorderTDfields(rw_td);$/;"	v
rw_td	lib/TrialData/td_limblab/getRWMovements.m	/^rw_td = repmat(struct(),1,num_moves);$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                    s = s_temp;$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^                s = rmfield(s,{'resid','residp','residd','resida','wts'});$/;"	v
s	lib/TrialData/Analysis/getModel.m	/^s                    =  [];        %    provided as a params input$/;"	v
s	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^    s = getSig(trial_data(trial),which_field);$/;"	v
s	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    s = subplot(4,4,options.legendSubplot);$/;"	v
s	lib/tensor_toolbox/@sptensor/collapse.m	/^        s = accumarray(t.subs(:,remdims), t.vals, [newsiz 1], fun);$/;"	v
s	lib/tensor_toolbox/@sptensor/collapse.m	/^        s = zeros(newsiz,1);$/;"	v
s	lib/tensor_toolbox/@sptensor/collapse.m	/^    s = fun(t.vals);$/;"	v
s	lib/tensor_toolbox/@sptensor/collapse.m	/^  s = sptensor([],[],newsiz);$/;"	v
s	lib/tensor_toolbox/@sptensor/collapse.m	/^  s = sptensor(t.subs(:,remdims), t.vals, newsiz, fun);$/;"	v
s	lib/tensor_toolbox/@sptensor/private/allsubs.m	/^s = zeros(prod(x.size),ndims(x));$/;"	v
s	lib/tensor_toolbox/@sptensor/spmatrix.m	/^    s = sparse(a.size(1), a.size(2));$/;"	v
s	lib/tensor_toolbox/@sptensor/spmatrix.m	/^    s = sparse(a.subs(:,1), a.subs(:,2), a.vals, a.size(1), a.size(2));$/;"	v
s	lib/tensor_toolbox/@symktensor/fg_setup.m	/^s = cell2struct(varargin,names,2);$/;"	v
s	lib/tensor_toolbox/@tensor/disp.m	/^s = shiftdim(num2cell(X.data,1:2),2);$/;"	v
s	lib/tensor_toolbox/@tensor/mttkrps.m	/^s = min_split(sz);$/;"	v
s	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
s	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            s = randi(n,1,m);$/;"	v
s	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            s = randi(n,5,m);$/;"	v
s	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            s = s(locs,:);$/;"	v
s	lib/tensor_toolbox/tests/Test_Tensor.m	/^            s = rng; % Save state of random number generator$/;"	v
s	lib/tensor_toolbox/tt_intvec2str.m	/^    s = sprintf('[]');$/;"	v
s	lib/tensor_toolbox/tt_intvec2str.m	/^s = ['[ ' sprintf('%d ',v(1:end)) ']'];$/;"	v
s	lib/tensor_toolbox/tt_size2str.m	/^    s = [sprintf('%d x ',sz(1:end-1)) sprintf('%d', sz(end)) ];$/;"	v
s	lib/tensor_toolbox/tt_size2str.m	/^    s = sprintf('%d',sz);$/;"	v
s	lib/tensor_toolbox/tt_size2str.m	/^    s = sprintf('[empty tensor]');$/;"	v
s1	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    s1 = warning('error','MATLAB:singularMatrix');$/;"	v
s1	lib/tensor_toolbox/@sptenmat/aatx.m	/^s1 = subs(:,1);$/;"	v
s1	lib/tensor_toolbox/teneye.m	/^    s1 = 'p';$/;"	v
s1PCADown	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCADown = cat(1,downMove.S1_pca);$/;"	v
s1PCARight	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCARight = cat(1, rightMove.S1_pca);$/;"	v
s1PCAUp	lib/TrialData/td_limblab/BBDemoScript.m	/^s1PCAUp = cat(1, upMove.S1_pca);$/;"	v
s2	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    s2 = warning('error','MATLAB:nearlySingularMatrix');$/;"	v
s2	lib/tensor_toolbox/@sptenmat/aatx.m	/^s2 = subs(:,2);$/;"	v
s2	lib/tensor_toolbox/teneye.m	/^    s2 = 'n';$/;"	v
s2	lib/tensor_toolbox/teneye.m	/^    s2 = 'r';$/;"	v
s_min	lib/tensor_toolbox/@tensor/mttkrps.m	/^        s_min = s;$/;"	v
s_p	lib/plotErrorEllipse.m	/^    s_p = chi2inv(p,size(mu,2));$/;"	v
s_temp	lib/TrialData/Analysis/getModel.m	/^                        s_temp = NaN;$/;"	v
s_thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^s_thresh         =  10;$/;"	v
samp	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
sample_all_modes	lib/tensor_toolbox/cp_arls.m	/^function [subs, idxs] = sample_all_modes(nsamplsq, dims)$/;"	f
sample_ktensor	lib/tensor_toolbox/cp_arls.m	/^function [data] = sample_ktensor(P, subs)$/;"	f
sample_mode_n	lib/tensor_toolbox/cp_arls.m	/^function [tensor_idx, factor_idx] = sample_mode_n(nsamplsq, dims, n)$/;"	f
sample_weight	lib/neuron-table/getTDClassicalPDs.m	/^    sample_weight = 1.\/interp1(test_dirs,pdf,inDir);$/;"	v
samples	lib/TrialData/Tools/stretchSignals.m	/^        samples = params;$/;"	v
samples	lib/TrialData/Tools/stretchSignals.m	/^samples    =  100;$/;"	v
samprate	lib/TrialData/td_limblab/parseFileByTrial.m	/^    samprate = 1\/mode(diff(emg.t));$/;"	v
samprate	lib/TrialData/util/process_emg.m	/^samprate        =  [];$/;"	v
samprate	lib/TrialData/util/process_lfp.m	/^    samprate = samprate\/downsample_fac;$/;"	v
samprate	lib/TrialData/util/process_lfp.m	/^samprate          =  [];       % sampling rate of data$/;"	v
samprate	lib/TrialData/util/resample_signals.m	/^samprate        =  [];$/;"	v
saturation	lib/plot_traces.m	/^    saturation = 1;$/;"	v
save_NEV_mat	lib/TrialData/DataProcessing/processNEV.m	/^save_NEV_mat     = false;$/;"	v
save_dir	lib/TrialData/Analysis/runGPFA.m	/^save_dir    =  [];$/;"	v
savefmt	lib/tensor_toolbox/@sptensor/disp.m	/^savefmt = get(0,'FormatSpacing');$/;"	v
savefmt	lib/tensor_toolbox/@symtensor/disp.m	/^savefmt = get(0,'FormatSpacing');$/;"	v
scale	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    scale = exp(2*sum(log(diag(chol(cX))))\/xDim);$/;"	v
scale	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^    scale = geomean(e(1:r));$/;"	v
scale	lib/tensor_toolbox/@sptensor/scale.m	/^function t = scale(t,s,dims)$/;"	f
scale	lib/tensor_toolbox/@tensor/scale.m	/^function Y = scale(X,S,dims)$/;"	f
scalingFactor	lib/TrialData/td_limblab/td_dpca/dpca.m	/^            scalingFactor = (A(:)'*B(:))\/(B(:)'*B(:));$/;"	v
score	lib/tensor_toolbox/@ktensor/score.m	/^function [best_score, A, flag, best_perm] = score(A,B,varargin)$/;"	f
score	lib/tensor_toolbox/@ktensor/score.m	/^score = sum(scores,2)\/RB;$/;"	v
score	lib/tensor_toolbox/@symktensor/score.m	/^function [best_score, A, flag, best_perm] = score(A,B,varargin)$/;"	f
score_in	lib/TrialData/Analysis/getPotentSpace.m	/^score_in = pca_info_in.scores;$/;"	v
score_out	lib/TrialData/Analysis/getPotentSpace.m	/^score_out = pca_info_out.scores;$/;"	v
scores	lib/TrialData/Tools/dimReduce.m	/^            scores = Y.coords{end}';$/;"	v
scores	lib/TrialData/Tools/dimReduce.m	/^            scores = info_out.scores;$/;"	v
scores	lib/tensor_toolbox/@ktensor/score.m	/^scores = zeros(size(M));$/;"	v
scr	lib/tensor_toolbox/doc/cp_opt_doc.m	/^scr = score(M,M_true)$/;"	v
scr	lib/tensor_toolbox/doc/cp_opt_doc.m	/^scr = score(M,M_true)/;"	v
scr	lib/tensor_toolbox/doc/cp_opt_doc.m	/^scr = score(M_plus, M_true)$/;"	v
scr	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^scr = score(M,M_true)$/;"	v
scr	lib/tensor_toolbox/doc/cp_opt_poblano_doc.m	/^scr = score(M_plus, M_true)$/;"	v
scr	lib/tensor_toolbox/doc/cp_wopt_doc.m	/^scr = score(M,M_true)$/;"	v
scr	lib/tensor_toolbox/doc/cp_wopt_poblano_doc.m	/^scr = score(M,M_true)$/;"	v
scr1	lib/tensor_toolbox/doc/cp_arls_doc.m	/^scr1 = score(M1,M_true);$/;"	v
scr2	lib/tensor_toolbox/doc/cp_arls_doc.m	/^scr2 = score(M2,M_true);$/;"	v
scr3	lib/tensor_toolbox/doc/cp_arls_doc.m	/^scr3 = score(M3,M_true);$/;"	v
scramble_coef	lib/neuron-table/getTDPDs.m	/^        scramble_coef = bootstrp(num_boots,@(response) scramblefunc(response), response_var(:,ui/;"	v
scramble_high	lib/neuron-table/getTDClassicalPDs.m	/^            scramble_high = prctile(r_scramble,(1-alpha_cutoff)*100);$/;"	v
scramble_high	lib/neuron-table/getTDPDs.m	/^                scramble_high = prctile(scramble_moddepths,95);$/;"	v
scramble_moddepths	lib/neuron-table/getTDPDs.m	/^                scramble_moddepths = sqrt(sum(scramble_coef(:,(2*in_signal_idx):(2*in_signal_idx/;"	v
scramblefunc	lib/neuron-table/getTDPDs.m	/^scramblefunc = @(data) transpose(glmfit(input_var,data,distribution));$/;"	v
scree_noise	lib/TrialData/Analysis/estimateDimensionality.m	/^scree_noise         = zeros(size(eigenv_noise,1),num_iter);$/;"	v
screenNames	lib/TrialData/td_limblab/parseFileByTrial.m	/^            screenNames = {sortedUnits.label};$/;"	v
sd	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^            sd = -rms(d);$/;"	v
search_dir	lib/tensor_toolbox/cp_apr.m	/^                search_dir = getSearchDirPqnr(m_row, gradM, epsActSet, ...$/;"	v
search_dir	lib/tensor_toolbox/cp_apr.m	/^        search_dir = -gradM;$/;"	v
search_dir	lib/tensor_toolbox/cp_apr.m	/^    search_dir = zeros(R,1);$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^        segmentCount = segmentCount + 1;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 0;$/;"	v
segmentCount	lib/TrialData/util/openNSx_td.m	/^    segmentCount = 1;$/;"	v
segmentsThatAreZero	lib/TrialData/util/openNSx_td.m	/^    segmentsThatAreZero = find(NSx.MetaTags.DataPoints == 0);$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    seq = seq(trialsToKeep);$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  seq = [];$/;"	v
seq	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^seq  = getSeq_td(dat, binWidth, extraOpts{:});$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^        seqTest = cosmoother_gpfa_viaOrth_fast(seqTest, estParams, 1:xDim);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    seqTest       = seq(testTrialIdx);$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');    $/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest        = segmentByTrial(ws.seqTest, Xorth, 'xorth');            $/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^      seqTest = segmentByTrial(ws.kern(k).seqTest, Xorth, 'xorth');$/;"	v
seqTest	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  seqTest   = [];$/;"	v
seqTrain	lib/TrialData/Analysis/runGPFA.m	/^seqTrain = ord_seqTrain;$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    seqTrain      = seq(trainTrialIdx);$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, X, 'xorth');$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.kern(k).seqTrain, Xorth, 'xorth');    $/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^    seqTrain        = segmentByTrial(ws.seqTrain, Xorth, 'xorth');$/;"	v
seqTrain	lib/TrialData/td_limblab/td_gpfa/postprocess.m	/^  seqTrain  = [];$/;"	v
seqTrainCut	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^    seqTrainCut = cutTrials(seqTrain, 'segLength', Inf);$/;"	v
seqTrainCut	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^seqTrainCut = cutTrials(seqTrain, extraOpts{:});$/;"	v
sequential	lib/tensor_toolbox/hosvd.m	/^sequential = params.Results.sequential;$/;"	v
session_colors	bumpcurl_dpca.m	/^        session_colors = linspecer(length(sessions));$/;"	v
sessions	bumpcurl_dpca.m	/^        sessions = unique(array_metric_table.date_time);$/;"	v
set1	lib/matlab-colors/linspecer/linspecer.m	/^set1 = brighten(colorBrew2mat({[ 55, 126, 184]*.85;[228, 26, 28];[ 77, 175, 74];[ 255, 127, 0];[/;"	v
set1JL	lib/matlab-colors/linspecer/linspecer.m	/^set1JL = brighten(colorBrew2mat({[228, 26, 28];[ 55, 126, 184]; [ 77, 175, 74];[ 255, 127, 0];[ /;"	v
set3	lib/matlab-colors/linspecer/linspecer.m	/^  set3 = colorBrew2mat({[141, 211, 199];[ 255, 237, 111];[ 190, 186, 218];[ 251, 128, 114];[ 128/;"	v
set3	lib/matlab-colors/linspecer/linspecer.m	/^set3 = dim(set3,.93);$/;"	v
setparam	lib/tensor_toolbox/@ktensor/datadisp.m	/^function x = setparam(opts,name,default)$/;"	f
setparam	lib/tensor_toolbox/cp_nmu.m	/^function x = setparam(opts,name,default)$/;"	f
setupStartA	lib/tensor_toolbox/gcp_opt.m	/^setupStartA = tic;$/;"	v
setupStartB	lib/tensor_toolbox/gcp_opt.m	/^    setupStartB = tic;$/;"	v
setupTimeA	lib/tensor_toolbox/gcp_opt.m	/^setupTimeA = toc(setupStartA);$/;"	v
setupTimeB	lib/tensor_toolbox/gcp_opt.m	/^    setupTimeB = toc(setupStartB);$/;"	v
setuptime	lib/tensor_toolbox/cp_sym.m	/^setuptime = toc(starttime);$/;"	v
sfl	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        sfl = struct('mldivide', @mldivide, 'mtimes', @mtimes);$/;"	v
sfl	lib/tensor_toolbox/tests/Test_Tensor.m	/^        sfl = struct('mldivide', @mldivide, 'mtimes', @mtimes);$/;"	v
sfr	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        sfr = struct('mtimes', @mtimes, 'mrdivide', @mrdivide);$/;"	v
sfr	lib/tensor_toolbox/tests/Test_Tensor.m	/^        sfr = struct('mtimes', @mtimes, 'mrdivide', @mrdivide);$/;"	v
sfr_noise_diff	lib/TrialData/Analysis/estimateDimensionality.m	/^    sfr_noise_diff  = (sfr_noise1 - sfr_noise2)\/sqrt(2*min(nbr_trials));$/;"	v
sg	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg = trial_data(1).([fn_array{iArray} '_unit_guide']);$/;"	v
sg	lib/TrialData/td_limblab/parseFileByTrial.m	/^sg = zeros(length(unit_idx),2);$/;"	v
sg_new	lib/TrialData/Tools/stripSpikeSorting.m	/^    sg_new = [elecs, zeros(length(elecs),1)];$/;"	v
sgn_score	lib/tensor_toolbox/@ktensor/fixsigns.m	/^    sgn_score = zeros(N,1);$/;"	v
shift	lib/tensor_toolbox/@ktensor/ktensor.m	/^        shift = 0;$/;"	v
shift	lib/tensor_toolbox/@ktensor/ktensor.m	/^        shift = nc;$/;"	v
shift	lib/tensor_toolbox/eig_geap.m	/^        shift = beta * max(0, ( margin \/ data.m ) - tmp);$/;"	v
shift	lib/tensor_toolbox/eig_geap.m	/^    shift = 0;$/;"	v
shift	lib/tensor_toolbox/eig_geap.m	/^shift = p.Results.Shift;$/;"	v
shift	lib/tensor_toolbox/eig_sshopm.m	/^    shift = 0;$/;"	v
shift	lib/tensor_toolbox/eig_sshopm.m	/^    shift = adapt_shift(A,x,margin,concave);$/;"	v
shift	lib/tensor_toolbox/eig_sshopm.m	/^    shift = newshift;$/;"	v
shift	lib/tensor_toolbox/eig_sshopm.m	/^shift = p.Results.Shift;$/;"	v
shift	lib/tensor_toolbox/eig_sshopmc.m	/^shift = p.Results.Shift;$/;"	v
shift_idx	lib/TrialData/Tools/reorderTDfields.m	/^        shift_idx = find(~cellfun(@isempty,regexp(fn_cont_new,shift_idx_all{i},'ONCE')));$/;"	v
shift_idx_all	lib/TrialData/Tools/reorderTDfields.m	/^shift_idx_all = fn_cont(~cellfun(@isempty,regexp(fn_cont,'_shift','ONCE')));$/;"	v
shifttrace	lib/tensor_toolbox/eig_geap.m	/^    shifttrace = shift * ones(maxits,1);$/;"	v
shifttrace	lib/tensor_toolbox/eig_geap.m	/^    shifttrace = zeros(maxits,1);$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig  = sig - repmat(m,size(sig,1),1);$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = 2 * sig.*sig;$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = abs(sqrt(sig));$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = sig(:,signals{iSig,2});$/;"	v
sig	lib/TrialData/Tools/getEnvelope.m	/^        sig = trial_data(trial).(signals{iSig,1});$/;"	v
sigIDs	lib/neuron-table/plotTuning.m	/^sigIDs = unique(neuron_table.signalID,'rows');$/;"	v
sig_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^sig_data = repmat(struct('type',[],'meta',[],'name',[],'duration',[],'samprate',[],'labels',[],'/;"	v
sig_name	lib/TrialData/Tools/convBasisFunc.m	/^                sig_name = sig_name(5:end);$/;"	v
sig_name	lib/TrialData/Tools/convBasisFunc.m	/^            sig_name = signals{iSig,1};$/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^        sig_name = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_name	lib/TrialData/Tools/dimReduce.m	/^sig_name          = '';     % output will be in field "SIG_NAMES_ALGORITHM". Defaults to concate/;"	v
sig_name_in	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_in = cellfun(@(x) strrep(x,'_spikes',''),in_signals(:,1),'uni',0);$/;"	v
sig_name_out	lib/TrialData/Analysis/getPotentSpace.m	/^sig_name_out = cellfun(@(x) strrep(x,'_spikes',''),out_signals(:,1),'uni',0);$/;"	v
sig_names	lib/TrialData/Tools/addCorrelatedNoise.m	/^sig_names = cellfun(@(x) strrep(x,'_spikes',''),signals(:,1),'uni',0);$/;"	v
sig_tic	lib/neuron-table/getTDClassicalPDs.m	/^    sig_tic = tic;$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = [signals{:,1}];$/;"	v
signal	lib/TrialData/Analysis/estimateDimensionality.m	/^    signal = signals{1,1};$/;"	v
signal	lib/TrialData/Tools/getDifferential.m	/^    signal = signals{iSig,1};$/;"	v
signalIDs	lib/neuron-table/compareTuning.m	/^signalIDs = unique(neuron_table.signalID,'rows');$/;"	v
signal_factors	bumpcurl_tensors.m	/^            signal_factors = M.U{2};$/;"	v
signal_factors	lib/plotTensorDecomp.m	/^    signal_factors = M.U{2};$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = repmat({'all'},length(signals),1);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = signals(2);$/;"	v
signal_idx	lib/TrialData/util/subfcn/check_signals.m	/^        signal_idx = {1:size(trial_data(1).(signals{1}),2)};$/;"	v
signal_info	lib/TrialData/DataProcessing/convertDataToTD.m	/^    signal_info = varargin{1};$/;"	v
signal_info	lib/TrialData/DataProcessing/initSignalStruct.m	/^signal_info = struct( ...$/;"	v
signal_means	lib/TrialData/Tools/centerSignals.m	/^signal_means = cell(1,size(signals,1));$/;"	v
signal_name	bumpcurl_analysis.m	/^    signal_name = 'opensim';$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals         =  [];$/;"	v
signals	lib/TrialData/Analysis/estimateDimensionality.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals          =  [];$/;"	v
signals	lib/TrialData/Analysis/pairwiseCorr.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Analysis/runDPCA.m	/^signals        =  [];$/;"	v
signals	lib/TrialData/Analysis/runDPCA.m	/^signals        =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals         =  {};$/;"	v
signals	lib/TrialData/Tools/addCorrelatedNoise.m	/^signals = check_signals(td(1),signals);$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^signals      =  getTDfields(trial_data,'time');$/;"	v
signals	lib/TrialData/Tools/centerSignals.m	/^signals     =  check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/convBasisFunc.m	/^signals       =  getTDfields(trial_data,'time'); % default to all time signals$/;"	v
signals	lib/TrialData/Tools/convBasisFunc.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals         =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/dimReduce.m	/^signals     =  check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = signals(:,1); % we don't need the idx$/;"	v
signals	lib/TrialData/Tools/dupeAndShift.m	/^signals = {varargin{1:2:end}};$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals     =  check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getDifferential.m	/^signals  =  ''; % signal to process$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^    signals = params;$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals      =  '';$/;"	v
signals	lib/TrialData/Tools/getEnvelope.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^signals      =  ''; % which signals to use$/;"	v
signals	lib/TrialData/Tools/getNorm.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getSig.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/getSigByTrial.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals         =  []; $/;"	v
signals	lib/TrialData/Tools/smoothSignals.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/softNormalize.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^    signals = getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals  =  '';$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/TrialData/Tools/sqrtTransform.m	/^signals = signals(:,1); % don't need the idx if they exist$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^        signals = params;$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals  =  getTDfields(trial_data,'spikes');$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = check_signals(trial_data,signals);$/;"	v
signals	lib/TrialData/Tools/zscoreSignals.m	/^signals = signals(:,1); % you don't need the idx if they exist, just do it for them all$/;"	v
signals	lib/TrialData/td_limblab/dPCA_demo.m	/^signals = {'PMd_spikes', 'all'; 'M1_spikes','all'};$/;"	v
signals	lib/TrialData/util/subfcn/check_field_extra.m	/^    signals = {''};$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^        signals = signals(1);$/;"	v
signals	lib/TrialData/util/subfcn/check_signals.m	/^    signals = [signals, signal_idx];$/;"	v
signals	lib/plot_trace_projections.m	/^    signals = [];$/;"	v
signals	lib/plot_trace_projections.m	/^    signals = check_signals(trial_data(1),signals);$/;"	v
signals	lib/plot_traces.m	/^    signals = [];$/;"	v
signals	lib/plot_traces.m	/^    signals = check_signals(trial_data(1),signals);$/;"	v
signifTrace	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        signifTrace = [];$/;"	v
signifTrace	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        signifTrace = options.componentsSignif(cc,:);$/;"	v
sincos	lib/TrialData/td_limblab/getLearningMetrics.m	/^                sincos = [sin(theta'*(1:num_freqs)) cos(theta'*(1:num_freqs))];$/;"	v
single_eval	bumpcurl_analysis.m	/^        single_eval = squeeze(ad_eval(:,i,:));$/;"	v
single_eval	bumpcurl_analysis.m	/^        single_eval = squeeze(wo_eval(:,i,:));$/;"	v
siz	lib/tensor_toolbox/@sptenmat/full.m	/^siz = size(A);$/;"	v
siz	lib/tensor_toolbox/@sptenmat/size.m	/^    siz = [];$/;"	v
siz	lib/tensor_toolbox/@sptenmat/size.m	/^    siz = siz(idx);$/;"	v
siz	lib/tensor_toolbox/@sptenmat/size.m	/^siz = [m n];$/;"	v
siz	lib/tensor_toolbox/@sptensor/full.m	/^siz = size(A);$/;"	v
siz	lib/tensor_toolbox/@sptensor/sptensor.m	/^                siz = size(source);$/;"	v
siz	lib/tensor_toolbox/@sptensor/sptensor.m	/^            siz = source.tsize;$/;"	v
siz	lib/tensor_toolbox/@sptensor/sptensor.m	/^        siz = max(subs,[],1);$/;"	v
siz	lib/tensor_toolbox/@sptensor/sptensor.m	/^        siz = varargin{3};$/;"	v
siz	lib/tensor_toolbox/@sptensor/squeeze.m	/^    siz = X.size(idx);$/;"	v
siz	lib/tensor_toolbox/@sptensor/ttm.m	/^siz = size(X);$/;"	v
siz	lib/tensor_toolbox/@tensor/squeeze.m	/^    siz = X.size(idx);$/;"	v
siz	lib/tensor_toolbox/@tensor/tensor.m	/^        siz = size(data);$/;"	v
siz	lib/tensor_toolbox/@tensor/tensor.m	/^        siz = varargin{2};$/;"	v
siz	lib/tensor_toolbox/@tensor/tensor.m	/^    siz = varargin{2};$/;"	v
size	lib/tensor_toolbox/@ktensor/size.m	/^function m = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@sptenmat/size.m	/^function siz = size(a,idx)$/;"	f
size	lib/tensor_toolbox/@sptensor/size.m	/^function m = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@sumtensor/size.m	/^function m = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@symktensor/size.m	/^function sz = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@symtensor/size.m	/^function sz = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@tenmat/size.m	/^function sz = size(a,idx)$/;"	f
size	lib/tensor_toolbox/@tensor/size.m	/^function m = size(t,idx)$/;"	f
size	lib/tensor_toolbox/@ttensor/size.m	/^function m = size(t,idx)$/;"	f
size_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^size_comps = size_comps(comp_order(end:-1:1)); $/;"	v
size_comps	lib/TrialData/util/lib/isomap/IsomapII.m	/^size_comps = sum((repmat(firsts,n_comps,1)==((1:n_comps)'*ones(1,N)))'); $/;"	v
size_comps	lib/TrialData/util/lib/isomap/isomap.m	/^size_comps = n_connect(comps);     %% size of each connected component$/;"	v
size_comps	lib/TrialData/util/lib/isomap/isomap.m	/^size_comps = size_comps(comp_order(end:-1:1)); $/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = inputArgument;$/;"	v
skipFactor	lib/TrialData/util/openNSx_td.m	/^            skipFactor = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
skipchecks	lib/tensor_toolbox/eig_geap.m	/^skipchecks = p.Results.SkipChecks;$/;"	v
skr	lib/tensor_toolbox/cp_arls.m	/^function P = skr(varargin)$/;"	f
small	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
smallStepTol	lib/tensor_toolbox/cp_apr.m	/^    smallStepTol = 1.0e-7;$/;"	v
smallval	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^smallval = nthroot(min(oddsrange)\/nc,nd);$/;"	v
smax	lib/tensor_toolbox/@sptensor/subsasgn.m	/^                smax = max(newsubs(:,n));$/;"	v
smoothSignals	lib/TrialData/Tools/smoothSignals.m	/^function trial_data = smoothSignals(trial_data,params)$/;"	f
smooth_data	lib/TrialData/util/smooth_data.m	/^function data_smooth = smooth_data(data,dt,kernel_SD)$/;"	f
smoothing_window_size	bumpcurl_dpca.m	/^        smoothing_window_size = 5;$/;"	v
snoptwrapperfun	lib/tensor_toolbox/cp_sym.m	/^    snoptwrapperfun = @(x) fg_wrapper(x,data);$/;"	v
softNormalize	lib/TrialData/Tools/softNormalize.m	/^function trial_data = softNormalize(trial_data,params)$/;"	f
soln	lib/tensor_toolbox/doc/test_problems_doc.m	/^soln = info.Soln$/;"	v
soln	lib/tensor_toolbox/doc/test_problems_doc.m	/^soln = ktensor({rand(50,3), rand(40,3), rand(30,3)});$/;"	v
sort_idx	exploreData.m	/^sort_idx = find(td(1).S1_unit_guide(:,2));$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cat(1,temp{:});$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        sort_idx = cluster_rho(rho);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = 1:size(rho,2);$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^    sort_idx = [sort_idx; idx(I)];$/;"	v
sort_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^sort_idx = [];$/;"	v
sort_idx	plotTuningDistr.m	/^sort_idx = find(td(1).S1_unit_guide(:,2));$/;"	v
sortedRefs	lib/tensor_toolbox/@ktensor/datadisp.m	/^sortedRefs = labels(sortedIdx);$/;"	v
sortedUnits	lib/TrialData/td_limblab/parseFileByTrial.m	/^            sortedUnits = chanNames(find(~ismember([chanNames.ID],exclude_units) & strcmpi({chan/;"	v
source	lib/tensor_toolbox/@sptensor/sptensor.m	/^    source = varargin{1};$/;"	v
span	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
span.comment	lib/tensor_toolbox/doc/html/ttb.css	/^span.comment { color:#228B22 }$/;"	c
span.keyword	lib/tensor_toolbox/doc/html/ttb.css	/^span.keyword { color:#0000FF }$/;"	c
span.string	lib/tensor_toolbox/doc/html/ttb.css	/^span.string { color:#A020F0 }$/;"	c
span.syscmd	lib/tensor_toolbox/doc/html/ttb.css	/^span.syscmd { color:#B28C00 }$/;"	c
span.untermstring	lib/tensor_toolbox/doc/html/ttb.css	/^span.untermstring { color:#B20000 }$/;"	c
sparseIx	lib/tensor_toolbox/cp_apr.m	/^    sparseIx = cell(N);$/;"	v
sparse_indices	lib/tensor_toolbox/cp_apr.m	/^                    sparse_indices = find(X.subs(:,n) == jj);$/;"	v
sparse_indices	lib/tensor_toolbox/cp_apr.m	/^                    sparse_indices = sparseIx{n}{jj};$/;"	v
spc	lib/tensor_toolbox/@sptenmat/disp.m	/^spc = floor(log10(max(a.subs)))+1;$/;"	v
spc	lib/tensor_toolbox/@sptensor/disp.m	/^spc = floor(log10(max(double(X.subs),[],1)))+1;$/;"	v
spc	lib/tensor_toolbox/@symtensor/disp.m	/^spc = floor(log10(max(double(I),[],1)))+1;$/;"	v
specfile	lib/tensor_toolbox/cp_sym.m	/^        specfile = which('snoptspecs.txt');$/;"	v
specfile	lib/tensor_toolbox/cp_sym.m	/^    specfile = which('snoptspecs.txt');$/;"	v
speed1	lib/TrialData/td_limblab/BBDemoScript.m	/^speed1 = cat(2, trial_data_movement.speed);$/;"	v
spgen	lib/tensor_toolbox/create_problem_binary.m	/^spgen = params.Results.spgen;$/;"	v
sph	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    sph = [az el r];$/;"	v
spike_method	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_method    = 'threshold'; % 'threshold', later: 'template'?$/;"	v
spike_rows	lib/TrialData/Plotting/visData.m	/^spike_rows         =   4;        % how many rows for spike markers$/;"	v
spike_threshold	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spike_threshold = 3;   % x RMS$/;"	v
spikes	bumpcurl_analysis.m	/^    spikes = cat(1,td_bl.S1_spikes);$/;"	v
spikes	bumpcurl_analysis.m	/^    spikes = repmat(cat(1,td_bl.S1_spikes),2,1);$/;"	v
spikes	lib/TrialData/Tools/addFiringRates.m	/^            spikes = trial_data(trial).([array '_spikes']);$/;"	v
spikes	lib/load_curl_data.m	/^                spikes = td(trialnum).(sprintf('%s_spikes',arrayname));$/;"	v
spikes_are_spikes	lib/TrialData/Tools/binTD.m	/^spikes_are_spikes = true(1,length(fn_spikes));$/;"	v
spikes_in_td	bumpcurl_lda.m	/^        spikes_in_td = getTDfields(td,'spikes');$/;"	v
spikes_in_td	bumpcurl_tensors.m	/^        spikes_in_td = getTDfields(td,'spikes');$/;"	v
spikes_in_td	lib/get_dpca_var.m	/^        spikes_in_td = getTDfields(td,'spikes');$/;"	v
spikes_resamp	lib/neuron-table/getTDClassicalPDs.m	/^                spikes_resamp = datasample(outArr(:,out_signal_idx),length(inDir),'Weights',samp/;"	v
spikes_resamp	lib/neuron-table/getTDClassicalPDs.m	/^            spikes_resamp = outArr(resamp_idx,out_signal_idx);$/;"	v
spiking_chans	lib/TrialData/DataProcessing/processNEV.m	/^spiking_chans    = 1:96;$/;"	v
spiking_chans	lib/TrialData/util/subfcn/extract_ns5_spikes.m	/^spiking_chans   = 1:96;$/;"	v
spiking_inputs	lib/TrialData/td_limblab/subspace_demo.m	/^spiking_inputs = {'M1_spikes'};$/;"	v
splitDigiValues	lib/TrialData/util/openNEV_td.m	/^            splitDigiValues = regexp(DigiValues(2:end), '*', 'split')';$/;"	v
splitTD	lib/TrialData/Tools/splitTD.m	/^function td_s = splitTD(trial_data,params)$/;"	f
split_idx	lib/TrialData/Tools/splitTD.m	/^    split_idx = td.(split_idx_name);$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^        split_idx_name = params;$/;"	v
split_idx_name	lib/TrialData/Tools/splitTD.m	/^split_idx_name     =  'idx_trial_start';$/;"	v
spmatrix	lib/tensor_toolbox/@sptensor/spmatrix.m	/^function s = spmatrix(a)$/;"	f
spones	lib/tensor_toolbox/@sptensor/spones.m	/^function X = spones(X)$/;"	f
sptendiag	lib/tensor_toolbox/sptendiag.m	/^function X = sptendiag(v,sz)$/;"	f
sptenmat	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^function a = sptenmat(varargin)$/;"	f
sptenrand	lib/tensor_toolbox/sptenrand.m	/^function Y = sptenrand(sz,nz)$/;"	f
sptensor	lib/tensor_toolbox/@sptensor/sptensor.m	/^function t = sptensor(varargin)$/;"	f
sqrtTransform	lib/TrialData/Tools/sqrtTransform.m	/^function trial_data = sqrtTransform(trial_data,params)$/;"	f
sqrt_transform	lib/TrialData/Tools/dimReduce.m	/^sqrt_transform    = false;  % square root transform before reduction (projections don't have it)$/;"	v
squeeze	lib/tensor_toolbox/@sptensor/squeeze.m	/^function Y = squeeze(X)$/;"	f
squeeze	lib/tensor_toolbox/@tensor/squeeze.m	/^function Y = squeeze(X)$/;"	f
src	lib/tensor_toolbox/@symtensor/symtensor.m	/^    src = symmetrize(src);$/;"	v
src	lib/tensor_toolbox/@symtensor/symtensor.m	/^    src = varargin{1};$/;"	v
srchsubs	lib/tensor_toolbox/@sptensor/subsref.m	/^            srchsubs = s(1).subs{1};$/;"	v
srchsubs	lib/tensor_toolbox/@sptensor/subsref.m	/^            srchsubs = tt_ind2sub(size(t),idx);$/;"	v
ss	lib/TrialData/util/predict_kalman.m	/^    ss = size(V0,1);$/;"	v
sse	lib/tensor_toolbox/tenrandblk.m	/^    sse = collapse(block.^2);$/;"	v
ssrt	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            ssrt = sort(s,2);$/;"	v
stackgrad	lib/tensor_toolbox/@symktensor/fg.m	/^function g = stackgrad(G,nolambda)$/;"	f
startEps	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^startEps      = 1e-3;$/;"	v
startTau	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^startTau      = 100; % in msec$/;"	v
start_dot	lib/plot_traces.m	/^    start_dot = false;$/;"	v
start_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^        start_idx = [0 cellfun(@length,neurons)];$/;"	v
start_idx	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx        =  'idx_go_cue';$/;"	v
start_idx_name	lib/TrialData/td_limblab/getRWTargetDirection.m	/^start_idx_name = 'cursor_start';$/;"	v
start_idx_offset	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^start_idx_offset = 0;$/;"	v
start_name	lib/TrialData/Tools/splitTD.m	/^start_name         =  'idx_trial_start';$/;"	v
start_name	lib/TrialData/td_limblab/getRWMovements.m	/^start_name         =  'idx_trial_start';$/;"	v
start_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        start_point = 1;$/;"	v
start_point	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        start_point = trial_data(trial).(start_idx);$/;"	v
starter	lib/neuron-table/getTDClassicalPDs.m	/^starter = makeNeuronTableStarter(trial_data,params);$/;"	v
starter	lib/neuron-table/getTDPDs.m	/^starter = makeNeuronTableStarter(trial_data,params);$/;"	v
starttime	lib/tensor_toolbox/cp_sym.m	/^        starttime = tic;$/;"	v
starttime	lib/tensor_toolbox/cp_sym.m	/^    starttime = tic;$/;"	v
starttime	lib/tensor_toolbox/cp_sym.m	/^starttime = tic;$/;"	v
state	lib/tensor_toolbox/doc/test_problems_doc.m	/^state = RandStream.getGlobalStream.State; %<- Random state$/;"	v
stats	lib/TrialData/Tools/dimReduce.m	/^            stats = [];$/;"	v
step	lib/tensor_toolbox/gcp_opt.m	/^                step = 1\/sqrt(gnormsum); $/;"	v
step	lib/tensor_toolbox/gcp_opt.m	/^        step = decay^nfails * rate;     % Ignored by Adagrad$/;"	v
stepSize	lib/tensor_toolbox/cp_apr.m	/^                stepSize = stepSize * step_red;$/;"	v
stepSize	lib/tensor_toolbox/cp_apr.m	/^            stepSize = stepSize * step_red;$/;"	v
stepSize	lib/tensor_toolbox/cp_apr.m	/^    stepSize = step_len;$/;"	v
step_trace	lib/tensor_toolbox/gcp_opt.m	/^    step_trace = zeros(maxiters+1,1);$/;"	v
stoptime	lib/tensor_toolbox/cp_apr.m	/^stoptime                = params.Results.stoptime;$/;"	v
stoptime	lib/tensor_toolbox/cp_apr.m	/^stoptime      = params.Results.stoptime;$/;"	v
stoptol	lib/tensor_toolbox/cp_apr.m	/^stoptol                 = params.Results.stoptol;$/;"	v
stp	lib/tensor_toolbox/teneye.m	/^        stp = 1;$/;"	v
stp	lib/tensor_toolbox/teneye.m	/^        stp = inc;  % This is where the for loop below stops.$/;"	v
str	lib/tensor_toolbox/@tensor/subsasgn.m	/^                    str = [sprintf('x.data(') ...$/;"	v
str	lib/tensor_toolbox/@tensor/subsasgn.m	/^                    str = sprintf('x.data(%d)=0;',newsiz);$/;"	v
str1	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str1 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str1	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str1 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(1));$/;"	v
str2	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str2 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str2	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str2 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(2));$/;"	v
str3	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str3 = sprintf('$$\\\\tilde{\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
str3	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    str3 = sprintf('$${\\\\mathbf x}_{%d,:}$$', dimsToPlot(3));$/;"	v
stretchSignals	lib/TrialData/Tools/stretchSignals.m	/^function trial_data = stretchSignals(trial_data,params)$/;"	f
strike	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
stripSpikeSorting	lib/TrialData/Tools/stripSpikeSorting.m	/^function trial_data = stripSpikeSorting(trial_data)$/;"	f
strip_sort	lib/TrialData/DataProcessing/processNEV.m	/^strip_sort       = false;  % whether to ignore unit sort codes$/;"	v
strong	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
stylesheet	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template name="stylesheet">$/;"	n
sub	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
sub	lib/tensor_toolbox/tests/Test_Tensor.m	/^                sub = tt_ind2sub(sz, idx);$/;"	v
sub	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sub = [tt_ind2sub(sz, randi(prod(sz))) 1];$/;"	v
sub	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sub = randi(maxdim, 1, nd);$/;"	v
sub	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sub = tt_ind2sub(sz, idx);$/;"	v
subB	lib/TrialData/util/lib/isomap/IsomapII.m	/^     subB = -.5*(D.^2 - sum(D'.^2)'*ones(1,nl)\/nl - ones(N,1)*sum(D.^2)\/N+sum(sum(D.^2))\/(N*n/;"	v
subdims	lib/tensor_toolbox/@sptensor/private/subdims.m	/^function loc = subdims(subd, t)$/;"	f
subname	lib/tensor_toolbox/@sumtensor/disp.m	/^    subname = sprintf('%s.part{%d}',name,i);$/;"	v
subplot_grid	lib/TrialData/Plotting/visData.m	/^subplot_grid = repmat((0:num_rows-1)'*num_cols,1,num_cols) + repmat(1:num_cols,num_rows,1);$/;"	v
subplot_signals	lib/plot_trace_projections.m	/^    subplot_signals = repmat(signals,3,1);$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        subplots = [subplots (i-1)*4+2:(i-1)*4+2 + length(moreComponents) - 1];$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        subplots = subplots(1:numCompToShow);$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    subplots = [2 3 4 6 7 8 10 11 12 14 15 16];$/;"	v
subplots	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    subplots = [];$/;"	v
subs	lib/tensor_toolbox/@ktensor/subsref.m	/^            subs = s.subs{1};$/;"	v
subs	lib/tensor_toolbox/@sptenmat/aatx.m	/^subs = a.subs;$/;"	v
subs	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    subs = [i j];$/;"	v
subs	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    subs = varargin{1};$/;"	v
subs	lib/tensor_toolbox/@sptensor/divide.m	/^subs = Y.subs;$/;"	v
subs	lib/tensor_toolbox/@sptensor/find.m	/^subs = t.subs;$/;"	v
subs	lib/tensor_toolbox/@sptensor/not.m	/^subs = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs	lib/tensor_toolbox/@sptensor/private/subdims.m	/^subs = t.subs;$/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^                subs = [];            $/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^        subs = ceil( rand(nz, size(sz,2)) * diag(sz) );$/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^        subs = unique(subs, 'rows');$/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^    subs = [];$/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^    subs = subs(1:nz,:);$/;"	v
subs	lib/tensor_toolbox/@sptensor/sptensor.m	/^    subs = varargin{1};   $/;"	v
subs	lib/tensor_toolbox/@sptensor/subsref.m	/^            subs = t.subs(loc,:);$/;"	v
subs	lib/tensor_toolbox/@sptensor/ttv.m	/^subs = a.subs;$/;"	v
subs	lib/tensor_toolbox/@tensor/find.m	/^subs = tt_ind2sub(t.size,idx);$/;"	v
subs	lib/tensor_toolbox/@tensor/subsasgn.m	/^            subs = s.subs{1};$/;"	v
subs	lib/tensor_toolbox/@tensor/subsref.m	/^            subs = s(1).subs{1};$/;"	v
subs	lib/tensor_toolbox/cp_arls.m	/^subs = unique(subs,'rows'); %todo: do this more efficiently$/;"	v
subs	lib/tensor_toolbox/cp_arls.m	/^subs = zeros(nsamplsq, D);     % Tuples that index fibers in original tensor$/;"	v
subs	lib/tensor_toolbox/create_problem.m	/^            subs = subs(idx(1:Q),:);$/;"	v
subs	lib/tensor_toolbox/create_problem.m	/^        subs = unique(ceil(rand(ceil(1.5*Q),size(sz,2))*diag(sz)),'rows');$/;"	v
subs	lib/tensor_toolbox/create_problem.m	/^subs = cell(nc,1);$/;"	v
subs	lib/tensor_toolbox/create_problem_binary.m	/^            subs = [subs; fsubs];$/;"	v
subs	lib/tensor_toolbox/create_problem_binary.m	/^    subs = [];$/;"	v
subs	lib/tensor_toolbox/create_problem_binary.m	/^    subs = unique(subs,'rows');$/;"	v
subs	lib/tensor_toolbox/doc/sptensor_doc.m	/^subs = [1 1 1; 1 1 3; 2 2 2; 4 4 4; 1 1 1; 1 1 1]; %<-- (1,1,1) is repeated.$/;"	v
subs	lib/tensor_toolbox/doc/sptensor_doc.m	/^subs = [1,1,1;1,2,1;3,4,2]; %<-- Subscripts of the nonzeros.$/;"	v
subs	lib/tensor_toolbox/doc/tensor_doc.m	/^subs = [1,1,1,1; 3,4,2,1]; X(subs) %<-- Extract 2 values by subscript.$/;"	v
subs	lib/tensor_toolbox/import_data.m	/^subs = cell2mat(data(1:n));$/;"	v
subs	lib/tensor_toolbox/sptendiag.m	/^subs = repmat((1:N)', 1, length(sz));$/;"	v
subs	lib/tensor_toolbox/sptenrand.m	/^    subs = ceil( rand(nz, size(sz,2)) * diag(sz) );$/;"	v
subs	lib/tensor_toolbox/sptenrand.m	/^    subs = unique(subs, 'rows');$/;"	v
subs	lib/tensor_toolbox/sptenrand.m	/^subs = [];$/;"	v
subs	lib/tensor_toolbox/sptenrand.m	/^subs = subs(1:nz,:);$/;"	v
subs	lib/tensor_toolbox/tendiag.m	/^subs = repmat((1:N)', 1, length(sz));$/;"	v
subs	lib/tensor_toolbox/tests/Test_Tensor.m	/^            subs = find(X > 0.5);$/;"	v
subs	lib/tensor_toolbox/tt_ind2sub.m	/^    subs = [];$/;"	v
subs	lib/tensor_toolbox/tt_ind2sub64.m	/^    subs = [];$/;"	v
subs	lib/tensor_toolbox/tt_ind2sub64.m	/^subs = double(subs);/;"	v
subs	lib/tensor_toolbox/tt_sample_nonzeros.m	/^subs = X.subs(nidx,:); $/;"	v
subs	lib/tensor_toolbox/tt_sample_semistrat.m	/^subs = [nonzero_subs; zero_subs];$/;"	v
subs	lib/tensor_toolbox/tt_sample_stratified.m	/^subs = [nonzero_subs; zero_subs];$/;"	v
subs	lib/tensor_toolbox/tt_sample_uniform.m	/^subs = bsxfun(@(a,b)ceil(a.*b), rand(nsamp,d), sz);$/;"	v
subs	lib/tensor_toolbox/tt_sample_zeros.m	/^subs = tmpsubs(1:nsamps,:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ge.m	/^    subs1 = find(y <= 0);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ge.m	/^    subs1 = setdiff(subs1,x.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ge.m	/^    subs1 = x.subs((x.vals >= y),:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/gt.m	/^        subs1 = setdiff(subs1,x.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/gt.m	/^    subs1 = find(y < 0);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/gt.m	/^    subs1 = x.subs((x.vals > y),:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/le.m	/^    subs1 = find(y >= 0);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/le.m	/^    subs1 = setdiff(subs1,x.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/le.m	/^    subs1 = setdiff(x.subs,y.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/le.m	/^    subs1 = subs1(extract(x,subs1) < 0, :);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/le.m	/^    subs1 = x.subs((x.vals <= y),:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/lt.m	/^        subs1 = setdiff(subs1,x.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/lt.m	/^    subs1 = find(y > 0);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/lt.m	/^    subs1 = setdiff(x.subs,y.subs,'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/lt.m	/^    subs1 = subs1(extract(x,subs1) < 0, :);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/lt.m	/^    subs1 = x.subs((x.vals < y),:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ne.m	/^        subs1 = x.subs(x.vals ~= y,:);$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ne.m	/^    subs1 = setdiff(allsubs(x),union(x.subs,find(y == 0),'rows'),'rows');$/;"	v
subs1	lib/tensor_toolbox/@sptensor/ne.m	/^    subs1 = setxor(x.subs,y.subs,'rows'); $/;"	v
subs2	lib/tensor_toolbox/@sptensor/ge.m	/^        subs2 = [];$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ge.m	/^        subs2 = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ge.m	/^    subs2 = x.subs(x.vals >= y(x.subs,'extract'),:);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/gt.m	/^        subs2 = [];$/;"	v
subs2	lib/tensor_toolbox/@sptensor/gt.m	/^        subs2 = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/gt.m	/^    subs2 = x.subs(x.vals > y(x.subs,'extract'),:);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/le.m	/^        subs2 = [];$/;"	v
subs2	lib/tensor_toolbox/@sptensor/le.m	/^        subs2 = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/le.m	/^    subs2 = setdiff(y.subs,x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/le.m	/^    subs2 = subs2(extract(y,subs2) > 0, :);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/le.m	/^    subs2 = x.subs(x.vals <= y(x.subs,'extract'),:);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/lt.m	/^        subs2 = [];$/;"	v
subs2	lib/tensor_toolbox/@sptensor/lt.m	/^        subs2 = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/lt.m	/^    subs2 = setdiff(y.subs,x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/lt.m	/^    subs2 = subs2(extract(y,subs2) > 0, :);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/lt.m	/^    subs2 = x.subs(x.vals < y(x.subs,'extract'),:);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ne.m	/^        subs2 = setdiff(allsubs(x),x.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ne.m	/^    subs2 = intersect(x.subs,y.subs,'rows');$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ne.m	/^    subs2 = subs2(extract(x,subs2) ~= extract(y,subs2),:);$/;"	v
subs2	lib/tensor_toolbox/@sptensor/ne.m	/^    subs2 = x.subs(x.vals ~= y(x.subs,'extract'),:);$/;"	v
subs3	lib/tensor_toolbox/@sptensor/le.m	/^    subs3 = intersect(x.subs,y.subs,'rows');$/;"	v
subs3	lib/tensor_toolbox/@sptensor/le.m	/^    subs3 = subs3(extract(x,subs3) <= extract(y,subs3),:);$/;"	v
subs3	lib/tensor_toolbox/@sptensor/lt.m	/^    subs3 = intersect(x.subs,y.subs,'rows');$/;"	v
subs3	lib/tensor_toolbox/@sptensor/lt.m	/^    subs3 = subs3(extract(x,subs3) < extract(y,subs3),:);$/;"	v
subs4	lib/tensor_toolbox/@sptensor/le.m	/^    subs4 = intersect(xzerosubs,yzerosubs,'rows');$/;"	v
subsasgn	lib/tensor_toolbox/@ktensor/subsasgn.m	/^function t = subsasgn(t,s,b)$/;"	f
subsasgn	lib/tensor_toolbox/@sptenmat/subsasgn.m	/^function t = subsasgn(t,s,b)$/;"	f
subsasgn	lib/tensor_toolbox/@sptensor/subsasgn.m	/^function t = subsasgn(t,s,rhs)$/;"	f
subsasgn	lib/tensor_toolbox/@symktensor/subsasgn.m	/^function t = subsasgn(t,s,b)$/;"	f
subsasgn	lib/tensor_toolbox/@symtensor/subsasgn.m	/^function A = subsasgn(A, S, B)$/;"	f
subsasgn	lib/tensor_toolbox/@tenmat/subsasgn.m	/^function t = subsasgn(t,s,b)$/;"	f
subsasgn	lib/tensor_toolbox/@tensor/subsasgn.m	/^function x = subsasgn(x,s,b)$/;"	f
subsasgn	lib/tensor_toolbox/@ttensor/subsasgn.m	/^function t = subsasgn(t,s,b)$/;"	f
subsets	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^function S = subsets(X)$/;"	f
subsref	lib/tensor_toolbox/@ktensor/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@sptenmat/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@sptensor/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@sumtensor/subsref.m	/^function B = subsref(A, S) $/;"	f
subsref	lib/tensor_toolbox/@symktensor/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@symtensor/subsref.m	/^function B = subsref(A, S)$/;"	f
subsref	lib/tensor_toolbox/@tenmat/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@tensor/subsref.m	/^function a = subsref(t,s)$/;"	f
subsref	lib/tensor_toolbox/@ttensor/subsref.m	/^function a = subsref(t,s)$/;"	f
substr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            substr = strjoin(arrayfun(@num2str, sub, 'UniformOutput', false),',');$/;"	v
substr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            substr = strjoin(substrs,',');$/;"	v
substrs	lib/tensor_toolbox/tests/Test_Tensor.m	/^            substrs = cell(nd,1);$/;"	v
subtractConditionMean	lib/TrialData/Tools/subtractConditionMean.m	/^function trial_data = subtractConditionMean(trial_data,params)$/;"	f
sumtensor	lib/tensor_toolbox/@sumtensor/sumtensor.m	/^function t = sumtensor(varargin)$/;"	f
sup	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
svdtol	lib/tensor_toolbox/tucker_sym.m	/^svdtol = D^(N-1) * norm(S) * eps(1.0);$/;"	v
sym_perms	lib/tensor_toolbox/@tensor/symmetrize.m	/^        sym_perms = repmat(1:n, total_perms, 1);$/;"	v
symidx	lib/tensor_toolbox/@symtensor/full.m	/^        symidx = indices(X);$/;"	v
symktensor	lib/tensor_toolbox/@symktensor/symktensor.m	/^function t = symktensor(varargin)$/;"	f
symmetrize	lib/tensor_toolbox/@ktensor/symmetrize.m	/^function Y = symmetrize(X)$/;"	f
symmetrize	lib/tensor_toolbox/@tensor/symmetrize.m	/^function Y = symmetrize(X,grps,ver)$/;"	f
symprod	lib/tensor_toolbox/eig_geap.m	/^function M = symprod(a,b)$/;"	f
symtensor	lib/tensor_toolbox/@symtensor/symtensor.m	/^function [t,I] = symtensor(varargin)$/;"	f
symver	lib/tensor_toolbox/tests/Test_Tensor.m	/^        symver = struct('new', 0, 'old', 1);$/;"	v
sz	lib/tensor_toolbox/@ktensor/double.m	/^sz = [size(X) 1];$/;"	v
sz	lib/tensor_toolbox/@ktensor/full.m	/^sz = size(t);$/;"	v
sz	lib/tensor_toolbox/@ktensor/issymmetric.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@ktensor/ktensor.m	/^    sz = varargin{2};$/;"	v
sz	lib/tensor_toolbox/@ktensor/symmetrize.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@ktensor/update.m	/^sz = size(M);$/;"	v
sz	lib/tensor_toolbox/@sptenmat/tsize.m	/^    sz = [];$/;"	v
sz	lib/tensor_toolbox/@sptenmat/tsize.m	/^    sz = a.tsize(idx);$/;"	v
sz	lib/tensor_toolbox/@sptenmat/tsize.m	/^    sz = a.tsize;$/;"	v
sz	lib/tensor_toolbox/@sptensor/sptensor.m	/^    sz = varargin{2};$/;"	v
sz	lib/tensor_toolbox/@symktensor/full.m	/^sz = nchoosek(m+n-1,m);$/;"	v
sz	lib/tensor_toolbox/@symktensor/size.m	/^    sz = [];$/;"	v
sz	lib/tensor_toolbox/@symktensor/size.m	/^    sz = size(t.u, 1) * ones(1,t.m);  $/;"	v
sz	lib/tensor_toolbox/@symktensor/size.m	/^    sz = size(t.u, 1);$/;"	v
sz	lib/tensor_toolbox/@symtensor/full.m	/^        sz = X.n * ones(1,X.m);$/;"	v
sz	lib/tensor_toolbox/@symtensor/indices.m	/^sz = nchoosek(m+n-1,m);$/;"	v
sz	lib/tensor_toolbox/@symtensor/size.m	/^        sz = t.n;$/;"	v
sz	lib/tensor_toolbox/@symtensor/size.m	/^    sz = [];$/;"	v
sz	lib/tensor_toolbox/@symtensor/size.m	/^    sz = t.n * ones(1,t.m);  $/;"	v
sz	lib/tensor_toolbox/@symtensor/symtensor.m	/^    sz = nchoosek(m+n-1,m);$/;"	v
sz	lib/tensor_toolbox/@symtensor/tenfun.m	/^sz = cellfun(@size, varargin(tfsymtensor), 'UniformOutput', false);$/;"	v
sz	lib/tensor_toolbox/@tenmat/size.m	/^    sz = [];$/;"	v
sz	lib/tensor_toolbox/@tenmat/size.m	/^    sz = size(a.data);$/;"	v
sz	lib/tensor_toolbox/@tenmat/size.m	/^    sz = size(a.data, idx);$/;"	v
sz	lib/tensor_toolbox/@tenmat/tsize.m	/^    sz = [];$/;"	v
sz	lib/tensor_toolbox/@tenmat/tsize.m	/^    sz = a.tsize(idx);$/;"	v
sz	lib/tensor_toolbox/@tenmat/tsize.m	/^    sz = a.tsize;$/;"	v
sz	lib/tensor_toolbox/@tensor/issymmetric.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@tensor/mttkrps.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@tensor/symmetrize.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@tensor/tenfun.m	/^            sz = size(varargin{i});$/;"	v
sz	lib/tensor_toolbox/@tensor/tenfun.m	/^    sz = size(varargin{1});$/;"	v
sz	lib/tensor_toolbox/@tensor/tenfun.m	/^    sz = size(varargin{2});$/;"	v
sz	lib/tensor_toolbox/@tensor/tensor.m	/^            sz = tsize(v);$/;"	v
sz	lib/tensor_toolbox/@tensor/ttm.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/@tensor/ttsv.m	/^sz = size(A,1); % Size of one mode (they're all the same)$/;"	v
sz	lib/tensor_toolbox/@tensor/ttv.m	/^sz = a.size([remdims dims]);$/;"	v
sz	lib/tensor_toolbox/cp_arls.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/cp_opt.m	/^sz = size(Z);$/;"	v
sz	lib/tensor_toolbox/cp_wopt.m	/^sz = cellfun(@(x)size(x,1),A);$/;"	v
sz	lib/tensor_toolbox/cp_wopt.m	/^sz = size(Z);$/;"	v
sz	lib/tensor_toolbox/create_guess.m	/^    sz = params.Size;$/;"	v
sz	lib/tensor_toolbox/create_guess.m	/^    sz = size(params.Data);$/;"	v
sz	lib/tensor_toolbox/create_guess.m	/^    sz = size(params.Soln);$/;"	v
sz	lib/tensor_toolbox/create_problem.m	/^sz = params.Size;$/;"	v
sz	lib/tensor_toolbox/create_problem.m	/^sz = size(S);$/;"	v
sz	lib/tensor_toolbox/doc/cp_apr_doc.m	/^sz = [100 80 60];$/;"	v
sz	lib/tensor_toolbox/doc/cp_arls_doc.m	/^sz = [200 300 400];$/;"	v
sz	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^sz = [50 60 70]; $/;"	v
sz	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^sz = [50 60 70]; % Tensor size$/;"	v
sz	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^sz = [50 60 70];$/;"	v
sz	lib/tensor_toolbox/doc/gcp_opt_doc.m	/^sz = [80 90 100];$/;"	v
sz	lib/tensor_toolbox/doc/test_problems_doc.m	/^sz = [20 15 10];$/;"	v
sz	lib/tensor_toolbox/doc/test_problems_doc.m	/^sz = [5 4 3]; %<- Size$/;"	v
sz	lib/tensor_toolbox/gcp_opt.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/import_data.m	/^    sz = import_size(fid);$/;"	v
sz	lib/tensor_toolbox/import_data.m	/^sz = sscanf(line, '%d');$/;"	v
sz	lib/tensor_toolbox/import_data.m	/^sz = sz';$/;"	v
sz	lib/tensor_toolbox/sptendiag.m	/^    sz = repmat(N,1,N);$/;"	v
sz	lib/tensor_toolbox/tendiag.m	/^    sz = repmat(N,1,N);$/;"	v
sz	lib/tensor_toolbox/tenones.m	/^    sz = cell2mat(varargin);$/;"	v
sz	lib/tensor_toolbox/tenones.m	/^    sz = varargin{1};$/;"	v
sz	lib/tensor_toolbox/tenrand.m	/^    sz = cell2mat(varargin);$/;"	v
sz	lib/tensor_toolbox/tenrand.m	/^    sz = varargin{1};$/;"	v
sz	lib/tensor_toolbox/tenzeros.m	/^    sz = cell2mat(varargin);$/;"	v
sz	lib/tensor_toolbox/tenzeros.m	/^    sz = dim * ones(1,order);$/;"	v
sz	lib/tensor_toolbox/tenzeros.m	/^    sz = varargin{1};$/;"	v
sz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            sz = lsz * ones(1, nd) + randi(rsz, 1, nd);$/;"	v
sz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            sz = usz * ones(1, nd);$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^                sz = max(sz,2);$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^                sz = randi(maxdim, 1, nd);$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = [4 3 2 4];$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = [4 3 2];$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = [7 4 1];$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = n * ones(1, nd);$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = n * ones(1,m);$/;"	v
sz	lib/tensor_toolbox/tests/Test_Tensor.m	/^            sz = randi(maxdim, 1, nd);$/;"	v
sz	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^sz = size(Z);$/;"	v
sz	lib/tensor_toolbox/tt_fac_to_vec.m	/^sz = zeros(N,1);$/;"	v
sz	lib/tensor_toolbox/tt_gcp_fg_est.m	/^sz = size(M);$/;"	v
sz	lib/tensor_toolbox/tt_sample_semistrat.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/tt_sample_stratified.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/tt_sample_uniform.m	/^sz = size(X);$/;"	v
sz	lib/tensor_toolbox/tt_sample_zeros.m	/^sz = size(X);$/;"	v
szl	lib/tensor_toolbox/@tensor/mttkrp.m	/^szl = prod(size(X,1:n-1)); %#ok<*PSIZE>$/;"	v
szn	lib/tensor_toolbox/@tensor/mttkrp.m	/^szn = size(X,n);$/;"	v
szr	lib/tensor_toolbox/@tensor/mttkrp.m	/^szr = prod(size(X,n+1:N));$/;"	v
szs	lib/tensor_toolbox/tests/Test_Tensor.m	/^        szs = struct( 'fourthreetwo', [4 3 2], 'threetwoone', [3 2 1], 'threetwo', [3 2], 'three/;"	v
szstr	lib/tensor_toolbox/tests/Test_Tensor.m	/^            szstr = strjoin(arrayfun(@num2str, sz, 'UniformOutput', false),',');$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                t = t(idx_keep);$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            t = t(idx_keep);$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        t = t';$/;"	v
t	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    t = file_data_temp.t;$/;"	v
t	lib/TrialData/Tools/binTD.m	/^    t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/Tools/getTDfields.m	/^        t = 0;$/;"	v
t	lib/TrialData/Tools/trimTD.m	/^    t = 1:size(trial_data(trial).(fn_time{1}),1);$/;"	v
t	lib/TrialData/util/circular_mean.m	/^  t = circular_confmean(alpha,0.05,w,[],dim);$/;"	v
t	lib/TrialData/util/openNEV_td.m	/^t                         = double(typecast(BasicHeader(29:44), 'uint16'));$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    	t                          = dir([path fname]);$/;"	v
t	lib/TrialData/util/openNSx_td.m	/^    t                          = double(typecast(BasicHeader(287:302), 'uint16'));$/;"	v
t	lib/TrialData/util/process_lfp.m	/^    t = decimate(t,downsample_fac);$/;"	v
t	lib/plotErrorEllipse.m	/^    t = linspace(0, 2 * pi);$/;"	v
t	lib/tensor_toolbox/@ktensor/full.m	/^t = tensor(data,sz);$/;"	v
t	lib/tensor_toolbox/@ktensor/ktensor.m	/^    t = class(t, 'ktensor');$/;"	v
t	lib/tensor_toolbox/@ktensor/ktensor.m	/^    t = class(t,'ktensor');$/;"	v
t	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    t = ktensor(b, t.u);$/;"	v
t	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    t = ktensor(newlambda, t.u);$/;"	v
t	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    t = ktensor(t.lambda, b);$/;"	v
t	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    t = ktensor(t.lambda, tmpu);$/;"	v
t	lib/tensor_toolbox/@ktensor/subsasgn.m	/^        t = subsasgn(t, new_s, b);$/;"	v
t	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    t = varargin{1};$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^                t = class(t, 'sptensor');$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^                t = class(t,'sptensor');$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^            t = class(t, 'sptensor');$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^            t = class(t,'sptensor');               $/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^            t = sptensor(tensor(source));$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^    t = class(t, 'sptensor');$/;"	v
t	lib/tensor_toolbox/@sptensor/sptensor.m	/^    t = class(t,'sptensor');$/;"	v
t	lib/tensor_toolbox/@sumtensor/plus.m	/^    t = sumtensor(t.part{:}, x);$/;"	v
t	lib/tensor_toolbox/@sumtensor/plus.m	/^    t = sumtensor(t.part{:}, x{:});$/;"	v
t	lib/tensor_toolbox/@sumtensor/sumtensor.m	/^    t = class(t, 'sumtensor');$/;"	v
t	lib/tensor_toolbox/@sumtensor/sumtensor.m	/^t = class(t, 'sumtensor');$/;"	v
t	lib/tensor_toolbox/@symktensor/full.m	/^t = tnew;/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^        t = symktensor(varargin{1},varargin{2});$/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^        t = symktensor(varargin{1},varargin{2},varargin{3});$/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^    t = class(t, 'symktensor');$/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^    t = class(t,'symktensor');$/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^   t = class(t, 'symktensor');$/;"	v
t	lib/tensor_toolbox/@symktensor/symktensor.m	/^t = class(t, 'symktensor');$/;"	v
t	lib/tensor_toolbox/@symtensor/symtensor.m	/^t = class(t,'symtensor');$/;"	v
t	lib/tensor_toolbox/@symtensor/symtensor.m	/^t = init_fields;$/;"	v
t	lib/tensor_toolbox/@tensor/tensor.m	/^            t = class(t, 'tensor');$/;"	v
t	lib/tensor_toolbox/@tensor/tensor.m	/^            t = full(v);$/;"	v
t	lib/tensor_toolbox/@tensor/tensor.m	/^    t = class(t, 'tensor');$/;"	v
t	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    t = ttensor(b, t.u);$/;"	v
t	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    t = ttensor(t.core, b);$/;"	v
t	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    t = ttensor(t.core, tmpu);$/;"	v
t	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    t = ttensor(tmpcore, t.u);$/;"	v
t	lib/tensor_toolbox/@ttensor/subsasgn.m	/^        t = subsasgn(t, new_s, b);$/;"	v
t	lib/tensor_toolbox/@ttensor/ttensor.m	/^    t = class(t, 'ttensor');$/;"	v
t	lib/tensor_toolbox/@ttensor/ttensor.m	/^t = class(t, 'ttensor');$/;"	v
t	lib/tensor_toolbox/teneye.m	/^        t = q;$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^                t1 = trial_data(bl_idx(iTrial)).(time_window{1,1})+time_window{1,2};$/;"	v
t1	lib/TrialData/td_limblab/getLearningMetrics.m	/^            t1 = trial_data(iTrial).(time_window{1,1})+time_window{1,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        t2 = min(t2,trial_data(bl_idx(iTrial)).idx_endTime);$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^                t2 = trial_data(bl_idx(iTrial)).(time_window{2,1})+time_window{2,2};$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^            t2 = min(t2,trial_data(iTrial).idx_endTime);$/;"	v
t2	lib/TrialData/td_limblab/getLearningMetrics.m	/^            t2 = trial_data(iTrial).(time_window{2,1})+time_window{2,2};$/;"	v
tId	lib/TrialData/Analysis/runGPFA.m	/^    tId = seqTrain(tr).trialId;$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^        tRawData  = fread(FID, [Trackers.countPacketBytes Trackers.readPackets(2)], ...$/;"	v
tRawData	lib/TrialData/util/openNEV_td.m	/^    tRawData  = fread(FID, [10 Trackers.countDataPacket], '10*uint8=>uint8', Trackers.countPacke/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    t_bin = (0:bin_size:sig_data(count).duration)';$/;"	v
t_bin	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^        t_bin = 1:num_bins:t(end)+1;$/;"	v
t_bin	lib/TrialData/Tools/binTD.m	/^        t_bin = [1 t(end)+1];$/;"	v
t_bin	lib/TrialData/td_limblab/parseFileByTrial.m	/^t_bin = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_bin_temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        t_bin_temp = [t_bin; t_bin(end)+mode(diff(t_bin))];$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = 1+idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = ceil(trial_data(trial).(idx_end{1}) + idx_end{2});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = ceil(trial_data(trial).(idx_end{1}));$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = int32(idx_end{1});$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = length(t);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^                t_end = size(trial_data(trial).(fn_time{1}),1) + idx_end{2};$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = size(trial_data(trial).(fn_time{1}),1);$/;"	v
t_end	lib/TrialData/Tools/trimTD.m	/^            t_end = t_end(end);$/;"	v
t_end	lib/TrialData/td_limblab/parseFileByTrial.m	/^        t_end = cds_bin.trials.endTime(iTrial) + extra_time(2);$/;"	v
t_fft	lib/TrialData/util/process_lfp.m	/^t_fft = t_fft + t(1);$/;"	v
t_fft	lib/TrialData/util/process_lfp.m	/^t_fft = t_fft\/samprate;$/;"	v
t_fn	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_fn = fn(cellfun(@(x) ~isempty(x),strfind(fn,'_t')));$/;"	v
t_lengths	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_lengths = cellfun(@(x) size(trial_data.(x),1),t_fn);$/;"	v
t_max	lib/TrialData/Tools/splitTD.m	/^    t_max = size(td.(fn_time{1}),1);$/;"	v
t_min	lib/TrialData/DataProcessing/convertDataToTD.m	/^t_min = min(t_lengths);$/;"	v
t_new	lib/TrialData/Tools/trimTD.m	/^        t_new = t_start:t_end;$/;"	v
t_poly	lib/TrialData/util/resample_signals.m	/^    t_poly = tx(~nanners);$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = 1+idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = 1;$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}) + idx_start{2});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = floor(trial_data(trial).(idx_start{1}));$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = int32(idx_start{1});$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = size(trial_data(trial).(fn_time{1}),1) + idx_start{2};$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^            t_start = t_start(1);$/;"	v
t_start	lib/TrialData/Tools/trimTD.m	/^        t_start = 1;$/;"	v
t_start	lib/TrialData/td_limblab/parseFileByTrial.m	/^        t_start = cds_bin.trials.startTime(iTrial) - extra_time(1);$/;"	v
t_stop	lib/tensor_toolbox/cp_apr.m	/^t_stop = toc;$/;"	v
t_total	lib/TrialData/Tools/getSig.m	/^            t_total = t_total + size(trial_data(trial).(fn{1}),1);$/;"	v
t_total	lib/TrialData/Tools/getSig.m	/^        t_total = 0;$/;"	v
tab_append	lib/neuron-table/getPDsFromWeights.m	/^tab_append = cell(1,length(baseline_cols_idx));$/;"	v
tab_append	lib/neuron-table/getPDsFromWeights.m	/^tab_append = cell(1,length(weight_cols_idx));$/;"	v
tab_append	lib/neuron-table/getTDModelWeights.m	/^    tab_append = table(weightArr, 'VariableNames',{[prefix in_signals{in_signal_idx,1} 'Weight']/;"	v
tab_append	lib/neuron-table/getTDPDs.m	/^tab_append = cell(1,size(in_signals,1));$/;"	v
tab_append	lib/neuron-table/getTuningCurves.m	/^    tab_append = table(repmat(bins,size(response_var,2),1),curve,...$/;"	v
tab_append	lib/neuron-table/getTuningCurves.m	/^    tab_append = table(repmat(bins,size(response_var,2),1),curve,curve_CIlow,curve_CIhigh,...$/;"	v
tab_append	lib/neuron-table/makeNeuronTableStarter.m	/^    tab_append = cell(1,numel(fields));$/;"	v
tab_append	lib/neuron-table/neuronAverage.m	/^tab_append = cell(height(keyTable),1);$/;"	v
tab_height	lib/neuron-table/makeNeuronTableStarter.m	/^tab_height = size(out_signal_names,1);$/;"	v
table	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
table td	lib/tensor_toolbox/doc/html/ttb.css	/^table td { padding:7px 5px; text-align:left; vertical-align:top; border:1px solid #d6d4d4; }$/;"	s
table th	lib/tensor_toolbox/doc/html/ttb.css	/^table th { padding:7px 5px; text-align:left; vertical-align:middle; border: 1px solid #d6d4d4; f/;"	s
tableStarter	lib/neuron-table/getTDModelWeights.m	/^tableStarter = makeNeuronTableStarter(trial_data,params);$/;"	v
tail	lib/animateBumpcurlTrials.m	/^            tail = max(1,tail);$/;"	v
tail	lib/animateBumpcurlTrials.m	/^            tail = timeCtr-tail_length:timeCtr;$/;"	v
targ	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ	lib/TrialData/td_limblab/getTargetDirection.m	/^    targ = atan2(tgt_pos(:,2)-pos(:,2),tgt_pos(:,1)-pos(:,1));$/;"	v
targ_angs	lib/TrialData/td_limblab/parseFileByTrial.m	/^            targ_angs = [pi\/2, pi\/4, 0, -pi\/4, -pi\/2, -3*pi\/4, pi, 3*pi\/4];$/;"	v
target	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  <xsl:param name="target"\/>$/;"	p	namedTemplate:globalReplace
target_blocks	bumpcurl_tensors.m	/^            target_blocks = unique([td.target_block]);$/;"	v
target_dir_fieldname	lib/TrialData/td_limblab/getLearningMetrics.m	/^target_dir_fieldname = 'target_direction';$/;"	v
target_distance	lib/TrialData/Plotting/visData.m	/^target_distance   =   8; % distance of outer targets in cm$/;"	v
target_pos_name	lib/TrialData/td_limblab/getRWTargetDirection.m	/^target_pos_name = 'target_center';$/;"	v
target_size	lib/TrialData/Plotting/visData.m	/^target_size       =   2; % target size in cm$/;"	v
task	lib/neuron-table/makeNeuronTableStarter.m	/^    task = cell(tab_height,1);$/;"	v
task	lib/neuron-table/makeNeuronTableStarter.m	/^    task = repmat({trial_data(1).task},tab_height,1);$/;"	v
tbody	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
tcs	lib/TrialData/td_limblab/getNeuronTuning.m	/^        tcs = regressTuningCurves(fr,covar,{'none'},'doparallel',false);$/;"	v
td	bumpcurl_analysis.m	/^    td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime'));$/;"	v
td	bumpcurl_analysis.m	/^    td = getSpeed(td);$/;"	v
td	bumpcurl_analysis.m	/^    td = removeBadTrials(td,struct('remove_nan_idx',false));$/;"	v
td	bumpcurl_dpca.m	/^        td = trial_data_cell{filenum};$/;"	v
td	bumpcurl_dpca.m	/^        td = trimTD(td,{'idx_goCueTime',0},{'idx_endTime',0});$/;"	v
td	bumpcurl_lda.m	/^            td = binTD(td,2);$/;"	v
td	bumpcurl_lda.m	/^        td = smoothSignals(td,struct('signals',{spikes_in_td}));$/;"	v
td	bumpcurl_lda.m	/^        td = trial_data_cell{filenum};$/;"	v
td	bumpcurl_lda.m	/^        td = trimTD(td,struct(...$/;"	v
td	bumpcurl_tensors.m	/^            td = binTD(td,2);$/;"	v
td	bumpcurl_tensors.m	/^        td = smoothSignals(td,struct('signals',{spikes_in_td},'width',0.1));$/;"	v
td	bumpcurl_tensors.m	/^        td = trial_data_cell{filenum};$/;"	v
td	bumpcurl_tensors.m	/^        td = trimTD(td,struct(...$/;"	v
td	exploreData.m	/^td = getDPCA(td,blocks,'bumpDir',struct('signals',{{'S1_spikes',sort_idx}},'do_plot',true,'num_d/;"	v
td	exploreData.m	/^td = getMoveOnsetAndPeak(td,struct('start_idx','idx_goCueTime','end_idx','idx_endTime'));$/;"	v
td	exploreData.m	/^td = getSpeed(td);$/;"	v
td	exploreData.m	/^td = removeBadTrials(td,struct('remove_nan_idx',false));$/;"	v
td	exploreData.m	/^td = smoothSignals(td,struct('signals','S1_spikes','sqrt_transform',true));$/;"	v
td	exploreData.m	/^td = smoothSignals(td,struct('signals',{'S1_spikes'},'sqrt_transform',true,'do_smoothing',true,'/;"	v
td	exploreData.m	/^td = trialAverage(td,{'bumpDir','epoch'});$/;"	v
td	exploreData.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',15});$/;"	v
td	exploreData.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',30});$/;"	v
td	lib/TrialData/Analysis/estimateDimensionality.m	/^td = trialAverage(trial_data,condition);$/;"	v
td	lib/TrialData/Analysis/getNoiseCovar.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/addCorrelatedNoise.m	/^td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/addFiringRates.m	/^td = trial_data;$/;"	v
td	lib/TrialData/Tools/appendTDs.m	/^        td = varargin{i};$/;"	v
td	lib/TrialData/Tools/catTDs.m	/^        td = varargin{iTD};$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = smoothSignals(td,struct('signals',{signals},'width',width));$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^        td = sqrtTransform(td,signals);$/;"	v
td	lib/TrialData/Tools/dimReduce.m	/^    td = trial_data(use_trials);$/;"	v
td	lib/TrialData/Tools/removeBadNeurons.m	/^        td = trimTD(trial_data(use_trials),fr_window(1,:),fr_window(2,:));$/;"	v
td	lib/TrialData/Tools/removeBadTrials.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/splitTD.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/Tools/subtractConditionMean.m	/^td = trial_data(cond_idx);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = binTD(td,2);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = dupeAndShift(td,'M1_spikes',-(1:10),'PMd_spikes',-(1:10));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = getModel(td,model_params);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = getNorm(td,struct('signals','vel','norm_name','speed'));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = removeBadNeurons(td,struct('min_fr',0.5));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = removeBadTrials(td);$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = smoothSignals(td,struct('signals',{{'M1_spikes','PMd_spikes'}},'width',0.1));$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = splitTD(td,struct( ...$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = td_store;$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = trial_data;$/;"	v
td	lib/TrialData/TrialData_tutorial.m	/^td = trimTD(td, {'idx_target_on',-5},'idx_trial_end');$/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = removeBadNeurons(trial_data,struct('min_fr',1,'do_shunt_check',false));$/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = removeBadTrials(td,struct('ranges',{{'idx_go_cue','idx_movement_on',[5 50];'idx_movement_on/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = smoothSignals(td,struct('signals',{signals},'sqrt_transform',true,'do_smoothing',true,'kern/;"	v
td	lib/TrialData/td_limblab/dPCA_demo.m	/^td = trimTD(td,{'idx_movement_on',-20},{'idx_movement_on',50});$/;"	v
td	lib/TrialData/td_limblab/getRWMovements.m	/^    td = trial_data(trial);$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = binTD(td,n_bins);$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = trialAverage(td,'target_direction');$/;"	v
td	lib/TrialData/td_limblab/subspace_demo.m	/^td = trimTD(trial_data,{'idx_movement_on',-50},{'idx_movement_on',70});$/;"	v
td	lib/animateBumpcurlTrials.m	/^td = trial_data;$/;"	v
td	lib/estimateBumpFromPCA.m	/^td = smoothSignals(td,struct('signals','S1_spikes','sqrt_transform',true));$/;"	v
td	lib/estimateBumpFromPCA.m	/^td = truncateAndBin(td,{'idx_bumpTime',-10},{'idx_bumpTime',15});$/;"	v
td	lib/get_dpca_var.m	/^            td = binTD(td,2);$/;"	v
td	lib/get_dpca_var.m	/^        td = smoothSignals(td,struct('signals',{spikes_in_td},'width',0.1));$/;"	v
td	lib/get_dpca_var.m	/^        td = trial_data_cell{filenum};$/;"	v
td	lib/get_dpca_var.m	/^        td = trimTD(td,struct(...$/;"	v
td	lib/load_curl_data.m	/^            td = getDifferential(td,struct('signals','markers','alias','marker_vel'));$/;"	v
td	lib/load_curl_data.m	/^            td = getMoveOnsetAndPeak(td,struct(...$/;"	v
td	lib/load_curl_data.m	/^        td = aliasTDfields(td,struct('alias_list',{{...$/;"	v
td	lib/load_curl_data.m	/^        td = getDifferential(td,struct('signals','vel_norm','alias','dvel_norm'));$/;"	v
td	lib/load_curl_data.m	/^        td = getNorm(td,struct('signals','vel','field_extra','_norm'));$/;"	v
td	lib/load_curl_data.m	/^        td = load([filenames{filenum}]);$/;"	v
td	lib/load_curl_data.m	/^        td = removeBadNeurons(td,struct(...$/;"	v
td	lib/load_curl_data.m	/^        td = reorderTDfields(td);$/;"	v
td	lib/load_curl_data.m	/^        td = splitTD(...$/;"	v
td	lib/load_curl_data.m	/^        td = td(reward_idx);$/;"	v
td	lib/load_curl_data.m	/^        td = td(~nanners);$/;"	v
td	lib/load_curl_data.m	/^        td = td.trial_data;$/;"	v
td	lib/plot_traces.m	/^    td = trial_data(trials_to_use);$/;"	v
td	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
td	plotBumpcurlTuning.m	/^td = trialAverage(td,{'bumpDir','epoch'});$/;"	v
td	plotBumpcurlTuning.m	/^td = truncateAndBin(td,nbins,{'idx_bumpTime',0},{'idx_bumpTime',nbins*2});$/;"	v
td	plotTuningDistr.m	/^td = truncateAndBin(td,4,{'idx_bumpTime',0},{'idx_bumpTime',12});$/;"	v
td1	exploreData.m	/^td1 = trimTD(td,{'idx_movement_on',0},{'idx_peak_speed',0});$/;"	v
td2	exploreData.m	/^td2 = trimTD(td,{'idx_movement_on',0},{'idx_endTime',0});$/;"	v
td_ad	bumpcurl_analysis.m	/^    td_ad = binTD(td_ad,5);$/;"	v
td_ad	bumpcurl_analysis.m	/^    td_ad = trimTD(td_ad,{'idx_goCueTime',0},{'idx_endTime',0});$/;"	v
td_avg	lib/get_dpca_var.m	/^                    td_avg = binTD(td_boot,'average');$/;"	v
td_avg	lib/plot_traces.m	/^    td_avg = trialAverage(td,'all');$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = binTD(td_bl,15);$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = binTD(td_bl,5);$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = trialAverage(td_bl,'bumpDir');$/;"	v
td_bl	bumpcurl_analysis.m	/^    td_bl = trimTD(td_bl,{'idx_bumpTime',0},{'idx_bumpTime',15});$/;"	v
td_block	lib/get_dpca_var.m	/^                        td_block = binTD(td_block,'average');$/;"	v
td_block	lib/get_dpca_var.m	/^                    td_block = binTD(td_block,'average');$/;"	v
td_boot	lib/get_dpca_var.m	/^                    td_boot = randsample(td_dpca,length(td_dpca),true);$/;"	v
td_boot	lib/get_dpca_var.m	/^                    td_boot = td_dpca;$/;"	v
td_dpca	lib/get_dpca_var.m	/^        td_dpca = td(all_block_inds);$/;"	v
td_fn_prefix	lib/TrialData/Analysis/evalModel.m	/^td_fn_prefix     =  '';    % prefix for fieldname$/;"	v
td_fn_prefix	lib/TrialData/Analysis/getModel.m	/^td_fn_prefix         =  '';        % name prefix for trial_data field$/;"	v
td_idx	bumpcurl_tensors.m	/^        td_idx = cat(2,...$/;"	v
td_j	lib/TrialData/Tools/joinTrials.m	/^td_j = reorderTDfields(td_j);$/;"	v
td_j	lib/TrialData/Tools/joinTrials.m	/^td_j = struct();$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = binTD(td_move,n_bins);$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = trialAverage(td_move,'target_direction');$/;"	v
td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_move = trimTD(trial_data,{'idx_movement_on',10},{'idx_movement_on',40});$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^            td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^    td_params = [];$/;"	v
td_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^td_params = struct( ...$/;"	v
td_params	lib/TrialData/td_limblab/parseFileByTrial.m	/^td_params = struct( ...$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = binTD(td_prep,n_bins);$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = trialAverage(td_prep,'target_direction');$/;"	v
td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_prep = trimTD(trial_data,{'idx_go_cue',-30},{'idx_go_cue',0});$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = reorderTDfields(td_s);$/;"	v
td_s	lib/TrialData/Tools/splitTD.m	/^td_s = trial_data(1);$/;"	v
td_select	bumpcurl_tensors.m	/^        td_select = td(td_idx);$/;"	v
td_select	lib/plot_traces.m	/^    td_select = trial_data(trials_to_plot);$/;"	v
td_store	lib/TrialData/TrialData_tutorial.m	/^td_store = td;$/;"	v
td_td_move	lib/TrialData/TrialData_tutorial.m	/^td_td_move   = dimReduce(td_store,setfield(pca_params,'w',pca_move.w));$/;"	v
td_td_move	lib/TrialData/td_limblab/subspace_demo.m	/^td_td_move   = dimReduce(td,setfield(pca_params,'w',pca_move.w));$/;"	v
td_td_prep	lib/TrialData/TrialData_tutorial.m	/^td_td_prep   = dimReduce(td_store,setfield(pca_params,'w',pca_prep.w));$/;"	v
td_td_prep	lib/TrialData/td_limblab/subspace_demo.m	/^td_td_prep   = dimReduce(td,setfield(pca_params,'w',pca_prep.w));$/;"	v
td_temp	lib/load_curl_data.m	/^        td_temp = smoothSignals(td,struct('signals','vel','width',0.1));$/;"	v
td_test	bumpcurl_lda.m	/^                    td_test = td_ad(fold_inds==foldnum);$/;"	v
td_test	lib/TrialData/td_limblab/coord_test.m	/^        td_test = addCoordPoint2TD(trial_data,struct('method',method{i},'point','hand','coord','/;"	v
td_train	bumpcurl_lda.m	/^                    td_train = td_ad(fold_inds~=foldnum);$/;"	v
td_true	lib/TrialData/td_limblab/coord_test.m	/^        td_true = addCylHand2TD(trial_data,method{i});$/;"	v
td_true	lib/TrialData/td_limblab/coord_test.m	/^        td_true = addSphereHand2TD(trial_data,method{i});$/;"	v
td_unav	plotBumpcurlTuning.m	/^td_unav = truncateAndBin(td,4,{'idx_bumpTime',0},{'idx_bumpTime',12});$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = binTD(td_wo,15);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = binTD(td_wo,5);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = getModel(td_wo,bl_linmodel);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = getModel(td_wo,bl_nnmodel);$/;"	v
td_wo	bumpcurl_analysis.m	/^    td_wo = trimTD(td_wo,{'idx_bumpTime',0},{'idx_bumpTime',15});$/;"	v
temp	bumpcurl_lda.m	/^                    temp = table(repeatnum,foldnum,acc,'VariableNames',{'repeatID','foldID','cla/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^            temp = trial_data(trial).(signals{i,1});$/;"	v
temp	lib/TrialData/Analysis/estimateDimensionality.m	/^        temp = trial_data(trial).(signal);$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^        temp = cell(1,size(signals,1));$/;"	v
temp	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp = cat(1,trial_data.(signals{i,1}));$/;"	v
temp	lib/TrialData/Analysis/runDPCA.m	/^        temp = varargin;$/;"	v
temp	lib/TrialData/Analysis/runDPCA.m	/^    temp = cat(dim,val{:});$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^        temp = [temp, trial_data(iTrial).([arrays '_spikes'])];$/;"	v
temp	lib/TrialData/Analysis/runGPFA.m	/^    temp = [];$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^            temp = temp';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = find(sig_data(idx(iSig)).data)';$/;"	v
temp	lib/TrialData/DataProcessing/convertDataToTD.m	/^        temp = trial_data.(fn{iName});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^                temp = signal_info.(fn{i});$/;"	v
temp	lib/TrialData/DataProcessing/initSignalStruct.m	/^temp = signal_info.type;$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp(int16(temp) > 0);$/;"	v
temp	lib/TrialData/DataProcessing/processNEV.m	/^            temp = temp_text(iText,:);$/;"	v
temp	lib/TrialData/DataProcessing/processNSx.m	/^    temp = uint16(labels{i});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = t(temp);$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^            temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^        temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/binTD.m	/^        temp = trial_data(trial).(fn_spikes{iArray});$/;"	v
temp	lib/TrialData/Tools/centerSignals.m	/^        temp = getSig(trial_data(trial),signals(iSig,:));$/;"	v
temp	lib/TrialData/Tools/convBasisFunc.m	/^                        temp =  flipud(conv(flipud(data(:,i)),b(:,iFunc),'full'));$/;"	v
temp	lib/TrialData/Tools/convBasisFunc.m	/^                        temp = conv(data(:,i),b(:,iFunc),'full');$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = temp  - max_shift;$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = trial_data(trial).(fn_idx{k});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^            temp = trial_data(trial).(fn_time{k});$/;"	v
temp	lib/TrialData/Tools/dupeAndShift.m	/^        temp = trial_data(trial).(the_field);$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/getCommonUnits.m	/^        temp = trial_data(i).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^        temp = s; temp(~move_inds) = 0;$/;"	v
temp	lib/TrialData/Tools/getSigByTrial.m	/^    temp = cat(3,trial_data.(signals{iSig,1}));$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randi(n,[1,n]);$/;"	v
temp	lib/TrialData/Tools/getTDidx.m	/^        temp = randperm(length(return_idx));$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/Tools/removeBadNeurons.m	/^            temp = trial_data(trial).([array '_unit_guide']);$/;"	v
temp	lib/TrialData/Tools/reorderTDfields.m	/^    temp = trial_data(1).(fn{idx_idx(i)});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                                temp = td.(linked_fields{iFn});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                                temp = temp(idx);$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                        temp = NaN;$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = td.(fn_idx{iFn});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = td.(fn_time{iFn});$/;"	v
temp	lib/TrialData/Tools/splitTD.m	/^                    temp = temp(temp >= idx_start & temp < idx_end) - idx_start + 1;$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^            temp = temp';$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^        temp = interp1(1:size(temp,1),temp,linspace(1,size(temp,1),samples));$/;"	v
temp	lib/TrialData/Tools/stretchSignals.m	/^        temp = trial_data(trial).(time_vars{iVar});$/;"	v
temp	lib/TrialData/Tools/stripSpikeSorting.m	/^            temp = trial_data(trial).([fn_array{iArray} '_spikes']);$/;"	v
temp	lib/TrialData/Tools/trialAverage.m	/^    temp = cellfun(@(x) 1:length(x),cond_vals,'Uni',0);$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^                        temp = temp_padded;$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^            temp = trial_data(trial).(fn_idx{iIdx});$/;"	v
temp	lib/TrialData/Tools/trimTD.m	/^            temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/Tools/upsampleTD.m	/^        temp = trial_data(trial).(fn_time{iSig});$/;"	v
temp	lib/TrialData/TrialData_tutorial.m	/^    temp = td_td_move(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/TrialData_tutorial.m	/^    temp = td_td_prep(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                        temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    temp = trial_data(bl_idx(iTrial)).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^                temp = trial_data(bl_idx(iTrial)).vel;$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = [interp1(1:length(idx),temp(idx,1),linspace(1,length(idx),corr_samples))', ../;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = trial_data(iTrial).(vel_or_pos);$/;"	v
temp	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp = trial_data(iTrial).vel;$/;"	v
temp	lib/TrialData/td_limblab/getNeuronTuning.m	/^            temp = trial_data(trial).([array '_spikes']);$/;"	v
temp	lib/TrialData/td_limblab/getRWMovements.m	/^                temp = td.(fn_time{i});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.emg.(fn{muscle});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.markers.(fn{entry});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp = cds_bin.opensim.(fn{entry});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp = cds_bin.trials.(event_list{e});$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp = temp(iTrial,:);$/;"	v
temp	lib/TrialData/td_limblab/parseFileByTrial.m	/^        temp = find(histcounts(all_events(:,i),t_bin));$/;"	v
temp	lib/TrialData/td_limblab/subspace_demo.m	/^    temp = td_td_move(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/td_limblab/subspace_demo.m	/^    temp = td_td_prep(i).([[arrays{:}] '_pca']);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^                temp = str2num(temp);$/;"	v
temp	lib/TrialData/util/openNEV_td.m	/^            temp = varargin{i};$/;"	v
temp	lib/TrialData/util/openNSx_td.m	/^        temp = inputArgument;$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = 2*temp.*temp;$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = filtfilt(bhigh,ahigh,double(data(data_idx,:)));$/;"	v
temp	lib/TrialData/util/process_emg.m	/^temp = filtfilt(blow,alow,temp);$/;"	v
temp	lib/TrialData/util/process_lfp.m	/^        temp = mean(data_fft(idx_freq,:),1)';$/;"	v
temp	lib/TrialData/util/process_lfp.m	/^    temp              = filtfilt(B,A,data(data_idx,:));$/;"	v
temp	lib/TrialData/util/resample_signals.m	/^temp = resample(dataDetrend,P,Q);$/;"	v
temp	lib/TrialData/util/subfcn/get_vars.m	/^    temp = cat(1,trial_data.(signals{iSig,1}));$/;"	v
temp	lib/neuron-table/getNTidx.m	/^    temp = randperm(length(return_idx));$/;"	v
temp	plotBumpcurlTuning.m	/^    temp = cat(1,td_epoch.S1_spikes)\/0.15;$/;"	v
temp1	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp1 = temp1.\/repmat(max(rho),size(rho,1),1);$/;"	v
temp1	lib/TrialData/util/checkUnitGuides.m	/^    temp1 = varargin{i-1};$/;"	v
temp2	lib/TrialData/Analysis/pairwiseCorr.m	/^    temp2 = -temp2.\/repmat(min(rho),size(rho,1),1);$/;"	v
temp2	lib/TrialData/util/checkUnitGuides.m	/^    temp2 = varargin{i}; $/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^    tempClassOrReason = uint8(tRawData(7,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempClassOrReason	lib/TrialData/util/openNEV_td.m	/^tempClassOrReason = [];$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = tRawData(9:10,Trackers.readPackets(1):Trackers.readPackets(2));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = typecast(tempDigiVals(:), 'uint16');$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^        tempDigiVals      = uint16(tRawData(9,Trackers.readPackets(1):Trackers.readPackets(2)));$/;"	v
tempDigiVals	lib/TrialData/util/openNEV_td.m	/^tempDigiVals = [];$/;"	v
temp_adjust	lib/TrialData/Tools/binTD.m	/^            temp_adjust = zeros(size(temp));$/;"	v
temp_adjust	lib/TrialData/Tools/trimTD.m	/^                temp_adjust = zeros(size(temp));$/;"	v
temp_conv	lib/TrialData/Tools/convBasisFunc.m	/^            temp_conv = zeros(size(data,1),size(data,2)*size(b,2));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^                    temp_data = cat(1,trial_data(trial).(signals{iSig,1}));$/;"	v
temp_data	lib/TrialData/Tools/dimReduce.m	/^        temp_data = cat(1,td.(signals{i,1}));$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^                    temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^                temp_err = zeros(length(bl_idx),1);$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp_err = angleDiff(minusPi2Pi(trial_data(iTrial).(target_dir_fieldname)), ...$/;"	v
temp_err	lib/TrialData/td_limblab/getLearningMetrics.m	/^            temp_err = median(curvature(temp(t1:t2,:)));$/;"	v
temp_fr	lib/TrialData/Analysis/runDPCA.m	/^        temp_fr = cat(3,trial_data(all_trials).(signals{n,1}));$/;"	v
temp_fr	lib/TrialData/Analysis/runDPCA.m	/^        temp_fr = temp_fr(:,signals{n,2},:);$/;"	v
temp_guide	lib/TrialData/DataProcessing/convertDataToTD.m	/^                                temp_guide = [temp_guide; ...$/;"	v
temp_guide	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_guide = [];$/;"	v
temp_idx	lib/TrialData/Tools/reorderTDfields.m	/^        temp_idx = strcmpi(fn_cont,fn_cont_new{i});$/;"	v
temp_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^                temp_idx = ismember(array_alias(:,1),arrays{array});$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^                    temp_idx = intersect(artifacts,find(unit_index == iUnit));$/;"	v
temp_idx	lib/TrialData/util/remove_spike_artifacts.m	/^            temp_idx = intersect(actual_spikes,find(unit_index == iUnit));$/;"	v
temp_idx	plotBumpcurlTuning.m	/^    temp_idx = 1:2:size(temp,1); % only index first bins$/;"	v
temp_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^    temp_label = which_label{1};$/;"	v
temp_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    temp_name = event_alias{alias_idx,2};$/;"	v
temp_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            temp_name = event_list{e};$/;"	v
temp_padded	lib/TrialData/Tools/trimTD.m	/^                        temp_padded = zeros(t_end,size(temp,2));$/;"	v
temp_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_params = params;$/;"	v
temp_params	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            temp_params = signal_info{iFile}.params;$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                    temp_proj = temp_proj'; % that code uses dimensions as rows$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                temp_proj = (data - repmat(mu,size(data,1),1)) * w;$/;"	v
temp_proj	lib/TrialData/Tools/dimReduce.m	/^                temp_proj = scores(count+1:count+N,:);$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = NaN(size(temp,1)+max_shift,size(temp,2)*(1+n_shifts));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = NaN(size(temp,1),size(temp,2)*(1+n_shifts));$/;"	v
temp_shift	lib/TrialData/Tools/dupeAndShift.m	/^            temp_shift = temp_shift(1:end-max_shift,:);$/;"	v
temp_text	lib/TrialData/DataProcessing/processNEV.m	/^        temp_text = reshape( ...$/;"	v
temp_us	lib/TrialData/Tools/upsampleTD.m	/^        temp_us = zeros(size(temp,1)*upsample_factor,size(temp,2));$/;"	v
temporal_factors	bumpcurl_tensors.m	/^            temporal_factors = M.U{1};$/;"	v
temporal_factors	lib/plotTensorDecomp.m	/^    temporal_factors = M.U{1};$/;"	v
tendiag	lib/tensor_toolbox/tendiag.m	/^function X = tendiag(v,sz)$/;"	f
teneye	lib/tensor_toolbox/teneye.m	/^function A = teneye(M,N)$/;"	f
tenfun	lib/tensor_toolbox/@symtensor/tenfun.m	/^function Z = tenfun(fun,varargin)$/;"	f
tenfun	lib/tensor_toolbox/@tensor/tenfun.m	/^function Z = tenfun(fun,varargin)$/;"	f
tenmat	lib/tensor_toolbox/@tenmat/tenmat.m	/^function A = tenmat(varargin)$/;"	f
tenones	lib/tensor_toolbox/tenones.m	/^function X = tenones(varargin)$/;"	f
tenrand	lib/tensor_toolbox/tenrand.m	/^function X = tenrand(varargin)$/;"	f
tenrandblk	lib/tensor_toolbox/tenrandblk.m	/^function G = tenrandblk(bsz, bns, verbose)$/;"	f
tensor	lib/tensor_toolbox/@tensor/tensor.m	/^function t = tensor(varargin)$/;"	f
tensor_idx	lib/tensor_toolbox/cp_arls.m	/^tensor_idx = kron(tensor_idx,ones(dims(n),1)); % portable$/;"	v
tensor_idx	lib/tensor_toolbox/cp_arls.m	/^tensor_idx = tt_sub2ind(dims, tensor_idx);$/;"	v
tensor_idx	lib/tensor_toolbox/cp_arls.m	/^tensor_idx = zeros(nsamplsq, D);     % Tuples that index fibers in original tensor$/;"	v
tenzeros	lib/tensor_toolbox/tenzeros.m	/^function X = tenzeros(varargin)$/;"	f
term1	lib/tensor_toolbox/cp_apr.m	/^    term1 = -sum(m);$/;"	v
term2	lib/tensor_toolbox/cp_apr.m	/^                term2 = term2 + x(i) .* log(b_pi(i));$/;"	v
term2	lib/tensor_toolbox/cp_apr.m	/^        term2 = 0;$/;"	v
term2	lib/tensor_toolbox/cp_apr.m	/^        term2 = sum(x' .* log(m * Pi'));$/;"	v
test	lib/TrialData/td_limblab/coord_test.m	/^        test = getSig(td_test,'cyl_hand_pos');$/;"	v
test	lib/TrialData/td_limblab/coord_test.m	/^        test = getSig(td_test,'sph_hand_pos');$/;"	v
testMask	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    testMask = false(1, N);$/;"	v
testTrialIdx	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    testTrialIdx  = tr(testMask);$/;"	v
test_dirs	lib/neuron-table/getTDClassicalPDs.m	/^    test_dirs = [-pi;test_dirs];$/;"	v
test_dirs	lib/neuron-table/getTDClassicalPDs.m	/^    test_dirs = linspace(-pi,pi,num_test_dirs+1)'; % directions in which to test sampling bias$/;"	v
test_dirs	lib/neuron-table/getTDClassicalPDs.m	/^    test_dirs = test_dirs(2:end);$/;"	v
test_idx	lib/TrialData/TrialData_tutorial.m	/^test_idx = 1:10;$/;"	v
testfit	lib/tensor_toolbox/cp_arls.m	/^    testfit = 1 - sqrt(Xfit_mean*num_elements)\/normX;$/;"	v
text/mcode-xmlized	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="text\/mcode-xmlized">$/;"	m
tf	lib/tensor_toolbox/@ktensor/isequal.m	/^tf = false;$/;"	v
tf	lib/tensor_toolbox/@ktensor/isequal.m	/^tf = tf_lambda & all(tf_U);$/;"	v
tf	lib/tensor_toolbox/@ktensor/issymmetric.m	/^tf = all(diffs(:) == 0);$/;"	v
tf	lib/tensor_toolbox/@ktensor/score.m	/^    tf = ismember(foo,best_perm);$/;"	v
tf	lib/tensor_toolbox/@sptensor/private/subdims.m	/^        tf = ismember(subs(loc,i), subd{i});$/;"	v
tf	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    tf = idx > 0;$/;"	v
tf	lib/tensor_toolbox/@symktensor/isequal.m	/^tf = false;$/;"	v
tf	lib/tensor_toolbox/@symktensor/isequal.m	/^tf = tf_lambda & tf_U;$/;"	v
tf	lib/tensor_toolbox/@symktensor/issymmetric.m	/^tf = true;$/;"	v
tf	lib/tensor_toolbox/@symktensor/symktensor.m	/^    tf = varargin{3}; %No lambda option$/;"	v
tf	lib/tensor_toolbox/@symktensor/symktensor.m	/^    tf = varargin{4};$/;"	v
tf	lib/tensor_toolbox/@symtensor/issymmetric.m	/^tf = true;$/;"	v
tf	lib/tensor_toolbox/@tensor/issymmetric.m	/^                    tf = false;$/;"	v
tf	lib/tensor_toolbox/@tensor/issymmetric.m	/^                tf = false;$/;"	v
tf	lib/tensor_toolbox/@tensor/issymmetric.m	/^        tf = true;$/;"	v
tf	lib/tensor_toolbox/@tensor/issymmetric.m	/^tf = all(all_diffs == 0);$/;"	v
tf	lib/tensor_toolbox/@ttensor/isequal.m	/^tf = false;$/;"	v
tf	lib/tensor_toolbox/@ttensor/isequal.m	/^tf = tf_core & all(tf_U);$/;"	v
tf	lib/tensor_toolbox/create_problem.m	/^tf = isa(x,'tensor') || isa(x,'sptensor') || (isscalar(x) && (x > 0) && (x < 1));$/;"	v
tf	lib/tensor_toolbox/create_problem_binary.m	/^        tf = (Xvals == 1);$/;"	v
tf	lib/tensor_toolbox/doc/test_problems_doc.m	/^tf = isequal(info1.Soln, info2.Soln)$/;"	v
tf	lib/tensor_toolbox/maintenance/capabilitychart.m	/^tf = false(nfunctions, nclasses);$/;"	v
tf	lib/tensor_toolbox/tt_dimscheck.m	/^    tf = ismember(-dims,1:N);$/;"	v
tf	lib/tensor_toolbox/tt_dimscheck.m	/^tf = ismember(dims,1:N);$/;"	v
tf	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    tf = all(X(:) > 0);$/;"	v
tf	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    tf = all(X.vals == 1);$/;"	v
tf	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    tf = all(X.vals > 0);$/;"	v
tf	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    tf = isequal(unique(X(:)),[0;1]);$/;"	v
tf	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^tf = all(vals >= 0) && all(vals == round(vals));/;"	v
tf_U	lib/tensor_toolbox/@ktensor/isequal.m	/^    tf_U = cellfun(@isequal, A.u, B.u);$/;"	v
tf_U	lib/tensor_toolbox/@ktensor/isequal.m	/^tf_U = false;$/;"	v
tf_U	lib/tensor_toolbox/@symktensor/isequal.m	/^tf_U = false;$/;"	v
tf_U	lib/tensor_toolbox/@symktensor/isequal.m	/^tf_U = isequal(A.u, B.u);$/;"	v
tf_U	lib/tensor_toolbox/@ttensor/isequal.m	/^tf_U = cellfun(@isequal, A.u, B.u);$/;"	v
tf_U	lib/tensor_toolbox/@ttensor/isequal.m	/^tf_U = false;$/;"	v
tf_core	lib/tensor_toolbox/@ttensor/isequal.m	/^tf_core = false;$/;"	v
tf_core	lib/tensor_toolbox/@ttensor/isequal.m	/^tf_core = isequal(A.core, B.core);$/;"	v
tf_lambda	lib/tensor_toolbox/@ktensor/isequal.m	/^tf_lambda = false;$/;"	v
tf_lambda	lib/tensor_toolbox/@ktensor/isequal.m	/^tf_lambda = isequal(A.lambda, B.lambda);$/;"	v
tf_lambda	lib/tensor_toolbox/@symktensor/isequal.m	/^tf_lambda = false;$/;"	v
tf_lambda	lib/tensor_toolbox/@symktensor/isequal.m	/^tf_lambda = isequal(A.lambda, B.lambda);$/;"	v
tf_tmp	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    tf_tmp = false(nc,1);$/;"	v
tfidx	lib/tensor_toolbox/@sptensor/contract.m	/^    tfidx = (x.subs(:,1) == x.subs(:,2)); % find diagonal entries$/;"	v
tflag	lib/tensor_toolbox/@sptensor/ttm.m	/^        tflag = varargin{1};$/;"	v
tflag	lib/tensor_toolbox/@sptensor/ttm.m	/^    tflag = varargin{2};$/;"	v
tflag	lib/tensor_toolbox/@sptensor/ttm.m	/^tflag = '';$/;"	v
tflag	lib/tensor_toolbox/@tensor/ttm.m	/^        tflag = varargin{1};$/;"	v
tflag	lib/tensor_toolbox/@tensor/ttm.m	/^    tflag = varargin{2};$/;"	v
tflag	lib/tensor_toolbox/@tensor/ttm.m	/^tflag = '';$/;"	v
tfoot	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
tfscalar	lib/tensor_toolbox/@symtensor/tenfun.m	/^tfscalar = cellfun(@isscalar, varargin);$/;"	v
tfsymtensor	lib/tensor_toolbox/@symtensor/tenfun.m	/^tfsymtensor = cellfun(@(x) isa(x,'symtensor'), varargin);$/;"	v
tgt_block_assign	bumpcurl_tensors.m	/^                tgt_block_assign = [1 2 3 4];$/;"	v
tgt_block_assign	bumpcurl_tensors.m	/^                tgt_block_assign = reshape(repmat([1 2 3 4],2,1),1,8);$/;"	v
tgt_block_assign	bumpcurl_tensors.m	/^                tgt_block_assign = reshape(repmat([1 2 3 4],4,1),1,16);$/;"	v
tgt_block_assign	lib/load_curl_data.m	/^        tgt_block_assign = [0 pi\/2 pi 3*pi\/2];$/;"	v
tgt_dirs	bumpcurl_tensors.m	/^        tgt_dirs = cat(2,td.tgtDir);$/;"	v
tgt_dirs	lib/load_curl_data.m	/^        tgt_dirs = cat(2,td.tgtDir);$/;"	v
tgt_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^tgt_idx = cellfun(@(x) getTDidx(trial_data,condition,x),num2cell(unique([trial_data.(condition)]/;"	v
tgt_pos	lib/TrialData/td_limblab/getRWTargetDirection.m	/^    tgt_pos = trial_data(i).(target_pos_name);$/;"	v
tgt_pos	lib/TrialData/td_limblab/getTargetDirection.m	/^    tgt_pos = repmat([reach_distance*cos(trial_data(i).target_direction), reach_distance*sin(tri/;"	v
th	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
th_fill	lib/neuron-table/plotTuning.m	/^            th_fill = [pdData.(sprintf('%sCI',pd_colname))(1),...$/;"	v
th_fill	lib/neuron-table/plotTuning.m	/^            th_fill = [th_wrap fliplr(th_wrap)];$/;"	v
th_fill	lib/neuron-table/plotTuning.m	/^            th_fill = th_fill(~isnan(r_fill));$/;"	v
th_wrap	lib/neuron-table/plotTuning.m	/^        th_wrap = [bins-2*pi bins bins+2*pi];$/;"	v
th_wrap	lib/neuron-table/plotTuning.m	/^        th_wrap = th_wrap(~isnan(curve_wrap));$/;"	v
the_field	lib/TrialData/Tools/dupeAndShift.m	/^        the_field  = signals{j};$/;"	v
the_shifts	lib/TrialData/Tools/dupeAndShift.m	/^        the_shifts = all_shifts{j};$/;"	v
the_shifts_new	lib/TrialData/Tools/dupeAndShift.m	/^            the_shifts_new  = sort(-the_shifts);$/;"	v
the_val	lib/TrialData/Tools/reorderTDfields.m	/^        the_val = shift_idx;$/;"	v
thead	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
theta	lib/TrialData/td_limblab/getLearningMetrics.m	/^                theta = [bl_trials.(target_dir_fieldname)];$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = minusPi2Pi(theta);$/;"	v
theta	lib/TrialData/util/bin_angles.m	/^theta = round(theta.\/angle_bin_size).*angle_bin_size;$/;"	v
theta	lib/TrialData/util/compute_pseudo_R2.m	/^    theta = var(Y).\/mean(Y);$/;"	v
theta	plotBumpcurlTuning.m	/^        theta = linspace(-pi,pi,100);$/;"	v
thisColor	lib/matlab-colors/linspecer/linspecer.m	/^    thisColor = varargin{2};$/;"	v
thisColor	lib/matlab-colors/linspecer/linspecer.m	/^thisColor = 'blue';$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = 1e-10;$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = options.lambda(margNums(i));$/;"	v
thisLambda	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        thisLambda = options.lambda;$/;"	v
thisMarg	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisMarg = [];$/;"	v
thisMarg	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisMarg = options.whichMarg(cc);$/;"	v
thisVar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisVar = [];$/;"	v
thisVar	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisVar = options.explainedVar.componentVar(cc);$/;"	v
thisYlim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisYlim = options.ylims(options.whichMarg(cc));$/;"	v
thisYlim	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        thisYlim = options.ylims;$/;"	v
thisgrp	lib/tensor_toolbox/@tensor/issymmetric.m	/^            thisgrp = grps{i};$/;"	v
thisgrp	lib/tensor_toolbox/@tensor/symmetrize.m	/^            thisgrp = grps{i};$/;"	v
thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                thresh = absolute_acc_thresh;$/;"	v
thresh	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^                thresh = ds(mvt_peak)\/peak_divisor; % Threshold is max of acceleration peak div/;"	v
threshold	lib/tensor_toolbox/@ktensor/datadisp.m	/^threshold = setparam(opts,'threshold',1e-6);$/;"	v
time	lib/TrialData/Analysis/runDPCA.m	/^time            = (1:T)*trial_data(1).bin_size;$/;"	v
time	lib/TrialData/td_limblab/td_dpca/dpca_plot_td.m	/^    time = 1:size(data, ndims(data));$/;"	v
time1	lib/tensor_toolbox/doc/cp_arls_doc.m	/^time1 = toc;$/;"	v
time2	lib/tensor_toolbox/doc/cp_arls_doc.m	/^time2 = toc;$/;"	v
time3	lib/tensor_toolbox/doc/cp_arls_doc.m	/^time3 = toc;$/;"	v
timeSplitsBeg	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    timeSplitsBeg = [1 options.timeSplits];$/;"	v
timeSplitsEnd	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^    timeSplitsEnd = [options.timeSplits-1 size(X, length(size(X)))];$/;"	v
time_cols	lib/TrialData/Plotting/visData.m	/^time_cols          =   3;        % how many columns for time-variable plots$/;"	v
time_event_exc_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    time_event_exc_idx = time_event_exc_idx | contains(fn,time_event_exceptions{exc});$/;"	v
time_event_exc_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_event_exc_idx = false(size(fn));$/;"	v
time_event_exceptions	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_event_exceptions = {'ctrHold'};$/;"	v
time_events	lib/TrialData/Analysis/runDPCA.m	/^time_events     = 1;$/;"	v
time_events	lib/TrialData/td_limblab/parseFileByTrial.m	/^time_events = union({'startTime','endTime'},extra_time_events);$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = 0;$/;"	v
time_start	lib/TrialData/Plotting/visData.m	/^        time_start = pos_cols;$/;"	v
time_trace	lib/tensor_toolbox/gcp_opt.m	/^    time_trace = zeros(maxiters+1,1);$/;"	v
time_vars	lib/TrialData/Tools/stretchSignals.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_vars	lib/TrialData/Tools/trialAverage.m	/^time_vars = getTDfields(trial_data,'time');$/;"	v
time_window	lib/TrialData/td_limblab/getLearningMetrics.m	/^time_window = {'idx_movement_on',0; 'idx_peak_speed',0};$/;"	v
times	lib/tensor_toolbox/@ktensor/times.m	/^function C = times(A,B)$/;"	f
times	lib/tensor_toolbox/@sptensor/times.m	/^function C = times(A,B)$/;"	f
times	lib/tensor_toolbox/@symtensor/times.m	/^function Z = times(X,Y)$/;"	f
times	lib/tensor_toolbox/@tensor/times.m	/^function Z = times(X,Y)$/;"	f
times	lib/tensor_toolbox/cp_apr.m	/^times         = zeros(maxOuterIters,1);$/;"	v
times	lib/tensor_toolbox/cp_apr.m	/^times = zeros(maxOuterIters,1);$/;"	v
timestamps	lib/TrialData/util/remove_spike_artifacts.m	/^    timestamps = double(unit_structure.Data.Spikes.TimeStamp)';$/;"	v
timevec	bumpcurl_lda.m	/^    timevec = (-10:50)*0.01;$/;"	v
timevec	bumpcurl_tensors.m	/^                timevec = 1:size(temporal_factors,1);$/;"	v
timevec	bumpcurl_tensors.m	/^        timevec = trim_start:td(1).bin_size:(length(td(1).vel)*td(1).bin_size+trim_start-0.001);$/;"	v
timevec	lib/TrialData/Tools/joinTrials.m	/^        timevec = trial_data(trialnum).(fn_time{1});$/;"	v
timevec	lib/get_dpca_var.m	/^        timevec = trim_start:td(1).bin_size:(length(td(1).vel)*td(1).bin_size+trim_start-0.001);$/;"	v
timevec	lib/plotTensorDecomp.m	/^        timevec = 1:size(temporal_factors,1);$/;"	v
timevec	lib/plotTensorDecomp.m	/^    timevec = [];$/;"	v
titers	lib/tensor_toolbox/gcp_opt.m	/^            titers = titers + 1;$/;"	v
titers	lib/tensor_toolbox/gcp_opt.m	/^            titers = titers - epciters;$/;"	v
titers	lib/tensor_toolbox/gcp_opt.m	/^    titers = 0;                     % Total iterations (used by ADAM)$/;"	v
title	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:variable name="title">$/;"	v
tline	lib/tensor_toolbox/maintenance/update_copyright.m	/^            tline = fgetl(fidold);$/;"	v
tline	lib/tensor_toolbox/maintenance/update_copyright.m	/^    tline = fgetl(fidold);$/;"	v
tmp	lib/TrialData/td_limblab/td_dpca/dpca_explainedVariance.m	/^        tmp = randperm(neuronsConditions(i), 2);$/;"	v
tmp	lib/TrialData/util/lib/isomap/IsomapII.m	/^         tmp = zeros(10,N); $/;"	v
tmp	lib/tensor_toolbox/@ktensor/normalize.m	/^        tmp = norm(X.u{mode}(:,r),normtype);$/;"	v
tmp	lib/tensor_toolbox/@ktensor/normalize.m	/^        tmp = norm(X.u{n}(:,r),normtype);$/;"	v
tmp	lib/tensor_toolbox/@ktensor/subsref.m	/^                tmp = b;$/;"	v
tmp	lib/tensor_toolbox/@sumtensor/ttv.m	/^tmp = cell(length(a.part),1);$/;"	v
tmp	lib/tensor_toolbox/@symktensor/fg.m	/^    tmp = bsxfun(@dot,X,X)-1;$/;"	v
tmp	lib/tensor_toolbox/@symktensor/normalize.m	/^    tmp = norm(X.u(:,r),normtype);$/;"	v
tmp	lib/tensor_toolbox/@tenmat/ctranspose.m	/^tmp = a.rindices;$/;"	v
tmp	lib/tensor_toolbox/@tenmat/tenmat.m	/^	    tmp = true(1,n); $/;"	v
tmp	lib/tensor_toolbox/@tenmat/tenmat.m	/^    tmp = true(1,n); $/;"	v
tmp	lib/tensor_toolbox/@ttensor/norm.m	/^    tmp = innerprod(Y, X.core);$/;"	v
tmp	lib/tensor_toolbox/cp_apr.m	/^tmp = find(X < 0.0);$/;"	v
tmp	lib/tensor_toolbox/cp_nmu.m	/^        tmp = mttkrp(X,U,n) + epsilon;$/;"	v
tmp	lib/tensor_toolbox/create_problem_binary.m	/^            tmp = A{k}(:,j);$/;"	v
tmp	lib/tensor_toolbox/eig_geap.m	/^        tmp = min( eig( beta * geap_hessian(data) ) );$/;"	v
tmp	lib/tensor_toolbox/gcp_opt.m	/^            tmp = fsamp;$/;"	v
tmp	lib/tensor_toolbox/gcp_opt.m	/^            tmp = gsamp;$/;"	v
tmp	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^tmp = split(type);$/;"	v
tmpIx	lib/tensor_toolbox/cp_apr.m	/^  tmpIx = find(rowsum == 0);$/;"	v
tmp_delg	lib/tensor_toolbox/cp_apr.m	/^                tmp_delg = gradM - gradOLD;$/;"	v
tmp_delm	lib/tensor_toolbox/cp_apr.m	/^                tmp_delm = m_row - m_rowOLD;$/;"	v
tmp_rho	lib/tensor_toolbox/cp_apr.m	/^                tmp_rho = 1 \/ (tmp_delm * tmp_delg);$/;"	v
tmpcore	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    tmpcore = subsasgn(t.core, s(2:end), b);$/;"	v
tmpidx	lib/tensor_toolbox/tt_sample_zeros.m	/^tmpidx = tt_sub2ind64(sz, tmpsubs);$/;"	v
tmpsubs	lib/tensor_toolbox/tt_sample_zeros.m	/^    tmpsubs = unique(tmpsubs,'rows','stable');$/;"	v
tmpsubs	lib/tensor_toolbox/tt_sample_zeros.m	/^tmpsubs = bsxfun(@(a,b)ceil(a.*b), rand(nsamps,d), sz);$/;"	v
tmpsubs	lib/tensor_toolbox/tt_sample_zeros.m	/^tmpsubs = tmpsubs(iszero,:);$/;"	v
tmpu	lib/tensor_toolbox/@ktensor/subsasgn.m	/^                    tmpu = subsasgn(t.u, s(2:end), b);$/;"	v
tmpu	lib/tensor_toolbox/@ttensor/subsasgn.m	/^                    tmpu = subsasgn(t.u, s(2:end), b); %Refine in U$/;"	v
tmpvals	lib/tensor_toolbox/@ktensor/mask.m	/^        tmpvals = tmpvals .* akvals;$/;"	v
tmpvals	lib/tensor_toolbox/@ktensor/mask.m	/^    tmpvals = lambda(j) * ones(vsz);$/;"	v
tmpyl	lib/tensor_toolbox/@ktensor/viz.m	/^            tmpyl = [ min(-0.01, min(U(:,j))), max( 0.01, max(U(:,j))) ];$/;"	v
tnew	lib/tensor_toolbox/@symktensor/full.m	/^tnew = symtensor(@ones,m,n);$/;"	v
tnt	lib/tensor_toolbox/@sptensor/nvecs.m	/^tnt = double(sptenmat(t,n,'t'));$/;"	v
toDisplayMargNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        toDisplayMargNames = 1;$/;"	v
toDisplayMargNames	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^toDisplayMargNames = 0;$/;"	v
toFlip	lib/TrialData/td_limblab/td_dpca/dpca.m	/^toFlip = find(sum(sign(V))<0);$/;"	v
toKeep	lib/TrialData/td_limblab/td_dpca/dpca.m	/^        toKeep = [toKeep components(order(1:nc))];$/;"	v
toKeep	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    toKeep = [];$/;"	v
toSkip	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^                        toSkip = 1;$/;"	v
toSkip	lib/TrialData/td_limblab/td_dpca/dpca_marginalize.m	/^            toSkip = 0;$/;"	v
tocell	lib/tensor_toolbox/@ktensor/tocell.m	/^function U = tocell(X,N)$/;"	f
tol	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tol = 1e-6;$/;"	v
tol	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  tol        = 1e-8; $/;"	v
tol	lib/tensor_toolbox/cp_apr.m	/^tol           = params.Results.stoptol;$/;"	v
tol	lib/tensor_toolbox/eig_geap.m	/^tol = p.Results.Tol;$/;"	v
tol	lib/tensor_toolbox/eig_sshopm.m	/^tol = p.Results.Tol;$/;"	v
tol	lib/tensor_toolbox/eig_sshopmc.m	/^tol = p.Results.Tol;$/;"	v
tol	lib/tensor_toolbox/matrandorth.m	/^            tol = 1e-6;$/;"	v
tol	lib/tensor_toolbox/tucker_sym.m	/^tol = params.Results.tol;$/;"	v
top	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    top = pos(2)+pos(4);$/;"	v
totalVar	lib/TrialData/td_limblab/td_dpca/dpca.m	/^totalVar = sum(X(:).^2);$/;"	v
total_insertions	lib/tensor_toolbox/doc/test_problems_doc.m	/^total_insertions = sum(info.Data.vals)$/;"	v
total_perms	lib/tensor_toolbox/@tensor/symmetrize.m	/^        total_perms = prod(cellfun(@length,combos));$/;"	v
tovec	lib/tensor_toolbox/@ktensor/tovec.m	/^function x = tovec(K,lambdaflag)$/;"	f
tovec	lib/tensor_toolbox/@symktensor/tovec.m	/^function x = tovec(S,nolambda)$/;"	f
tr	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    tr            = randperm(N);$/;"	v
tr	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
trFFT	lib/TrialData/util/process_lfp.m	/^function [data_fft,freq,window_centers]=trFFT( ...$/;"	f
trace	lib/tensor_toolbox/eig_sshopmc.m	/^trace = zeros(maxits,1);$/;"	v
trackingPacketID	lib/TrialData/util/openNEV_td.m	/^trackingPacketID = 65533;$/;"	v
trackingPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^trackingPacketIDIndices    = find(PacketIDs == trackingPacketID);$/;"	v
trainMask	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    trainMask = ~testMask;$/;"	v
trainTrialIdx	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    trainTrialIdx = tr(trainMask);$/;"	v
train_func	lib/TrialData/Analysis/getModel.m	/^train_func           =  'trainlm'; % training function for neural net$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^    train_idx = getTDidx(trial_data,train_idx{:});$/;"	v
train_idx	lib/TrialData/Analysis/getModel.m	/^train_idx     =  1:length(trial_data);$/;"	v
train_idx	lib/TrialData/TrialData_tutorial.m	/^train_idx = 11:length(td);$/;"	v
train_kalman	lib/TrialData/util/train_kalman.m	/^function kf_model = train_kalman(X,Y,Z)$/;"	f
traj_rows	lib/TrialData/Plotting/visData.m	/^traj_rows          =   3;        % how many rows for time-varying trajectory plots$/;"	v
transpose	lib/tensor_toolbox/@tensor/transpose.m	/^function transpose(x)$/;"	f
trial	lib/TrialData/Plotting/visData.m	/^    trial = trials_to_plot(tr_idx); % Use tr_num from here down$/;"	v
trialAverage	lib/TrialData/Tools/trialAverage.m	/^function [avg_data,cond_idx] = trialAverage(trial_data, params)$/;"	f
trial_colors	bumpcurl_tensors.m	/^            trial_colors = dir_colors(cat(1,td_select.target_block),:);$/;"	v
trial_colors	lib/plotTensorDecomp.m	/^    trial_colors = 'k';$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_data = trimTD(trial_data,trim_idx(1,:),trim_idx(2,:));$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/estimateDimensionality.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/evalModel.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getModel.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getNoiseCovar.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/getNoiseCovar.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data	lib/TrialData/Analysis/getPotentSpace.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_data  =  trial_data(trial_idx);$/;"	v
trial_data	lib/TrialData/Analysis/runDPCA.m	/^trial_data     =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Analysis/runGPFA.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                        trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^                    trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^            trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^    trial_data = [];$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = rmfield(trial_data,t_fn);$/;"	v
trial_data	lib/TrialData/DataProcessing/convertDataToTD.m	/^trial_data = trim_time(trial_data);$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^                trial_data = f(trial_data,funcCall{2:end});$/;"	v
trial_data	lib/TrialData/DataProcessing/loadTDfiles.m	/^        trial_data = f(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/addCorrelatedNoise.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/addFiringRates.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/binTD.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/centerSignals.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/convBasisFunc.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/convBasisFunc.m	/^trial_data = reorderTDfields(trial_data);/;"	v
trial_data	lib/TrialData/Tools/dimReduce.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/dupeAndShift.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/dupeAndShift.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getCommonUnits.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getDifferential.m	/^trial_data  =  check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getDifferential.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getEnvelope.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getLFPidx.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getNorm.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getSig.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getSigByTrial.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getTDfields.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^        trial_data = trial_data';$/;"	v
trial_data	lib/TrialData/Tools/getTDidx.m	/^trial_data = trial_data(return_idx);$/;"	v
trial_data	lib/TrialData/Tools/joinTrials.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadNeurons.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadTrials.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/removeBadTrials.m	/^trial_data = trial_data(~bad_idx);/;"	v
trial_data	lib/TrialData/Tools/reorderTDfields.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/reorderTDfields.m	/^trial_data = orderfields(trial_data,master_idx);$/;"	v
trial_data	lib/TrialData/Tools/smoothSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/softNormalize.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/splitTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/sqrtTransform.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/stretchSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/stripSpikeSorting.m	/^    trial_data = rmfield(trial_data,'temp_spikes');$/;"	v
trial_data	lib/TrialData/Tools/stripSpikeSorting.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/subtractConditionMean.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/trialAverage.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/trimTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/upsampleTD.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/Tools/zscoreSignals.m	/^trial_data = check_td_quality(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = binTD(trial_data,5);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = getMoveOnsetAndPeak(trial_data, params);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = getSpeed(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = removeBadNeurons(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = trialAverage(trial_data_pca, 'target_direction');$/;"	v
trial_data	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data = trial_data(~isnan([trial_data.target_direction]));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','marker_vel','alias','marker_ac/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = getDifferential(trial_data,struct('signals','markers','alias','marker_vel')/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','marker_vel'));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^        trial_data = smoothSignals(trial_data,struct('signals','markers'));$/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    trial_data = addProcessedSignal(trial_data,struct('in_signals',{{cart_names{postfix_ctr},poi/;"	v
trial_data	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/addProcessedSignal.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/getRWTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/getTargetDirection.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = reorderTDfields(trial_data);$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = repmat(struct(),1,length(idx_trials));$/;"	v
trial_data	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_data = trial_data(~cellfun(@isempty,{trial_data.(fn{1})}));$/;"	v
trial_data	lib/TrialData/td_limblab/subspace_demo.m	/^trial_data = smoothSignals(trial_data,struct( ...$/;"	v
trial_data	lib/neuron-table/getTuningCurves.m	/^trial_data = trial_data(use_trials);$/;"	v
trial_data_butter	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_butter= parseFileByTrial(cds);$/;"	v
trial_data_cell	bumpcurl_dpca.m	/^    trial_data_cell = load_curl_data(fullfile(dataroot,'limblab','s1-adapt','td-library',filenam/;"	v
trial_data_cell	bumpcurl_lda.m	/^    trial_data_cell = load_curl_data(fullfile(dataroot,'limblab','s1-adapt','td-library',filenam/;"	v
trial_data_cell	bumpcurl_tensors.m	/^    trial_data_cell = load_curl_data(fullfile(dataroot,'limblab','s1-adapt','td-library',filenam/;"	v
trial_data_cell	lib/load_curl_data.m	/^    trial_data_cell = cell(1,length(filenames));$/;"	v
trial_data_events	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_events = getTDfields(trial_data, 'idx');$/;"	v
trial_data_movement	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_movement = trimTD(trial_data, {'idx_movement_on', 0}, {'idx_movement_on', 6});$/;"	v
trial_data_noBumps	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_noBumps = removeBadTrials(trial_data);$/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = getPCA(trial_data_movement, paramPCA); $/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = removeBadNeurons(trial_data_pca);$/;"	v
trial_data_pca	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_pca = smoothSignals(trial_data_pca, struct('signals', 'S1_pca'));$/;"	v
trial_data_premovement	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_premovement = trimTD(trial_data, {'idx_movement_on', -5}, {'idx_movement_on', -2});$/;"	v
trial_data_ts	lib/TrialData/td_limblab/BBDemoScript.m	/^trial_data_ts = parseFileByTrial(cds, paramsCDS);$/;"	v
trial_event_colors	lib/TrialData/Plotting/visData.m	/^trial_event_colors =   parula(size(event_db,1)); % use default matlab colors$/;"	v
trial_factors	bumpcurl_tensors.m	/^            trial_factors = M.U{3};$/;"	v
trial_factors	lib/plotTensorDecomp.m	/^    trial_factors = M.U{3};$/;"	v
trial_idx	bumpcurl_tensors.m	/^            trial_idx = getTDidx(td,'tgtDir',unique_tgt_dirs(dirnum));$/;"	v
trial_idx	lib/TrialData/Analysis/evalModel.m	/^trial_idx        =  [1 length(trial_data)];$/;"	v
trial_idx	lib/TrialData/Analysis/pairwiseCorr.m	/^trial_idx        =  1:length(trial_data);$/;"	v
trial_idx	lib/neuron-table/getTDPDs.m	/^trial_idx        =  1:length(trial_data);$/;"	v
trial_lengths	lib/TrialData/Tools/getTDfields.m	/^            trial_lengths = nanmax( cat(1,trial_lengths,cellfun(@(x) size(x,1),{trial_data.(cont/;"	v
trial_lengths	lib/TrialData/Tools/getTDfields.m	/^        trial_lengths = zeros(1,length(trial_data));$/;"	v
trial_nbrs	lib/TrialData/Analysis/estimateDimensionality.m	/^    trial_nbrs    	= randperm(min(nbr_trials),2);$/;"	v
trial_num	bumpcurl_analysis.m	/^    trial_num = eval_params.trial_idx(1:end-1);$/;"	v
trial_results	lib/TrialData/td_limblab/parseFileByTrial.m	/^trial_results  =  {'R'};$/;"	v
trials	lib/TrialData/Analysis/evalModel.m	/^        trials = trial_idx(i):trial_idx(i+1)-1;$/;"	v
trials	lib/TrialData/td_limblab/parseFileByTrial.m	/^trials = cds.trials;$/;"	v
trialsToKeep	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    trialsToKeep = ([seq.T] > 0);$/;"	v
trials_to_plot	lib/TrialData/Plotting/visData.m	/^trials_to_plot    =   1;$/;"	v
trials_to_plot	lib/plot_trace_projections.m	/^    trials_to_plot = 1:length(trial_data);$/;"	v
trials_to_plot	lib/plot_traces.m	/^    trials_to_plot = 1:length(trial_data);$/;"	v
trials_to_use	lib/plot_trace_projections.m	/^    trials_to_use = 1:length(trial_data);$/;"	v
trials_to_use	lib/plot_traces.m	/^    trials_to_use = 1:length(trial_data);$/;"	v
trialvec	bumpcurl_tensors.m	/^            trialvec = (1:size(trial_factors,1))-ad_offset;$/;"	v
trialvec	lib/plotTensorDecomp.m	/^    trialvec = 1:size(trial_factors,1);$/;"	v
trig_ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^                            trig_ts = find([0; diff(data > trigger_thresh) > 0])\/sig_data(count/;"	v
trigger_thresh	lib/TrialData/DataProcessing/convertDataToTD.m	/^trigger_thresh  =  1;     % to identify time$/;"	v
trimTD	lib/TrialData/Tools/trimTD.m	/^function trial_data = trimTD(trial_data,varargin)$/;"	f
trim_end	bumpcurl_tensors.m	/^    trim_end = 0.5;$/;"	v
trim_end	lib/get_dpca_var.m	/^    trim_end = 0.5;$/;"	v
trim_idx	lib/TrialData/Analysis/estimateDimensionality.m	/^trim_idx        =  {};   % can trim data in here {'idx',val;'idx',val}$/;"	v
trim_idx	lib/TrialData/Analysis/getPotentSpace.m	/^trim_idx           =  {};     % can trim in Machens method ONLY$/;"	v
trim_start	bumpcurl_tensors.m	/^    trim_start = -0.3;$/;"	v
trim_start	lib/get_dpca_var.m	/^    trim_start = -0.1;$/;"	v
trim_time	lib/TrialData/DataProcessing/convertDataToTD.m	/^function trial_data = trim_time(trial_data)$/;"	f
true_neur_num	bumpcurl_analysis.m	/^            true_neur_num = num_neurons*(fignum-1)+neuron_ctr;$/;"	v
truefit	lib/tensor_toolbox/cp_arls.m	/^truefit = params.Results.truefit;$/;"	v
truth	lib/TrialData/td_limblab/coord_test.m	/^        truth = getSig(td_true,'cyl_hand_pos');$/;"	v
truth	lib/TrialData/td_limblab/coord_test.m	/^        truth = getSig(td_true,'sphere_hand_pos');$/;"	v
ts	lib/TrialData/DataProcessing/convertDataToTD.m	/^    ts = units{unit_idx(unit)};$/;"	v
ts	lib/TrialData/td_limblab/parseFileByTrial.m	/^    ts = units(unit_idx(unit)).spikes.ts;$/;"	v
tscore	lib/neuron-table/getTuningCurves.m	/^        tscore = tinv(0.975,size(response_var_in_bin,2)-1); % t-score for 95% CI$/;"	v
tsiz	lib/tensor_toolbox/@tenmat/mtimes.m	/^tsiz = [A.tsize(A.rindices) B.tsize(B.cindices)];$/;"	v
tsize	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    tsize = varargin{4};$/;"	v
tsize	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    tsize = varargin{5};$/;"	v
tsize	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^tsize = size(T);$/;"	v
tsize	lib/tensor_toolbox/@sptenmat/tsize.m	/^function sz = tsize(a,idx)$/;"	f
tsize	lib/tensor_toolbox/@tenmat/tenmat.m	/^    tsize = varargin{4};$/;"	v
tsize	lib/tensor_toolbox/@tenmat/tenmat.m	/^tsize = size(T);$/;"	v
tsize	lib/tensor_toolbox/@tenmat/tsize.m	/^function sz = tsize(a,idx)$/;"	f
tsubs	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^tsubs = T.subs;$/;"	v
tsz	lib/tensor_toolbox/gcp_opt.m	/^tsz = prod(sz);$/;"	v
tsz	lib/tensor_toolbox/tt_sample_uniform.m	/^tsz = prod(sz); % Number of entries in X$/;"	v
tt	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
tt	lib/tensor_toolbox/doc/html/ttb.css	/^tt { font-size: 1.2em; }$/;"	s
tt	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="tt">$/;"	m
tt img	lib/tensor_toolbox/doc/html/ttb.css	/^p img, pre img, tt img, li img, h1 img, h2 img { margin-bottom:0px; } $/;"	s
tt_assignment_type	lib/tensor_toolbox/@sptensor/subsasgn.m	/^function type = tt_assignment_type(x,subs,rhs)$/;"	f
tt_calcpi_prowsubprob	lib/tensor_toolbox/cp_apr.m	/^function Pi = tt_calcpi_prowsubprob(X, isSparse, M, R, n, N, sparse_indices)$/;"	f
tt_combinator	lib/tensor_toolbox/teneye.m	/^function [A] = tt_combinator(N,K,s1,s2)$/;"	f
tt_cp_apr_mu	lib/tensor_toolbox/cp_apr.m	/^function [M, output] = tt_cp_apr_mu(X, R, Minit, varargin)$/;"	f
tt_cp_apr_pdnr	lib/tensor_toolbox/cp_apr.m	/^function [M, out] = tt_cp_apr_pdnr(X, R, Minit, varargin)$/;"	f
tt_cp_apr_pqnr	lib/tensor_toolbox/cp_apr.m	/^function [M, out] = tt_cp_apr_pqnr(X, R, Minit, varargin)$/;"	f
tt_cp_fg	lib/tensor_toolbox/tt_cp_fg.m	/^function [f,G] = tt_cp_fg(Z,A,Znormsqr)$/;"	f
tt_cp_fun	lib/tensor_toolbox/tt_cp_fun.m	/^function [f,g] = tt_cp_fun(x,Z,Znormsqr)$/;"	f
tt_cp_vec_to_fac	lib/tensor_toolbox/tt_cp_vec_to_fac.m	/^function A = tt_cp_vec_to_fac(x,Z)$/;"	f
tt_cp_wfg	lib/tensor_toolbox/cp_wopt.m	/^function [f,G] = tt_cp_wfg(Z,W,A,normZsqr)$/;"	f
tt_cp_wfg_sparse	lib/tensor_toolbox/cp_wopt.m	/^function [f,G] = tt_cp_wfg_sparse(Zvals,W,A,normZsqr,memflag)$/;"	f
tt_cp_wfg_sparse_setup	lib/tensor_toolbox/cp_wopt.m	/^function Zvals = tt_cp_wfg_sparse_setup(Z,W)$/;"	f
tt_cp_wfun	lib/tensor_toolbox/cp_wopt.m	/^function [f,g] = tt_cp_wfun(Zdata,W,x,normZsqr,memflag)$/;"	f
tt_create_missing_data_pattern	lib/tensor_toolbox/create_problem.m	/^function W = tt_create_missing_data_pattern(sz,M,isSparse)$/;"	f
tt_dimscheck	lib/tensor_toolbox/tt_dimscheck.m	/^function [sdims,vidx] = tt_dimscheck(dims,N,M)$/;"	f
tt_fac_to_vec	lib/tensor_toolbox/tt_fac_to_vec.m	/^function x = tt_fac_to_vec(A)$/;"	f
tt_gcp_fg	lib/tensor_toolbox/tt_gcp_fg.m	/^function [F,G] = tt_gcp_fg(M, X, f, g, W, computeF, computeG, vectorG)$/;"	f
tt_ind2sub	lib/tensor_toolbox/tt_ind2sub.m	/^function subs = tt_ind2sub(siz,idx)$/;"	f
tt_ind2sub64	lib/tensor_toolbox/tt_ind2sub64.m	/^function subs = tt_ind2sub64(siz,idx)$/;"	f
tt_intvec2str	lib/tensor_toolbox/tt_intvec2str.m	/^function s = tt_intvec2str(v)$/;"	f
tt_loglikelihood	lib/tensor_toolbox/cp_apr.m	/^function f = tt_loglikelihood(X,M)$/;"	f
tt_loglikelihood_row	lib/tensor_toolbox/cp_apr.m	/^function f = tt_loglikelihood_row(isSparse, x, m, Pi)$/;"	f
tt_matrix2cellstr	lib/tensor_toolbox/tt_matrix2cellstr.m	/^function S = tt_matrix2cellstr(M)$/;"	f
tt_sample_nonzeros	lib/tensor_toolbox/tt_sample_nonzeros.m	/^function [subs,vals] = tt_sample_nonzeros(X, nns, with_replacement)$/;"	f
tt_sample_semistrat	lib/tensor_toolbox/tt_sample_semistrat.m	/^function [subs, xvals, weights] = tt_sample_semistrat(X, nnzs, nzrs)$/;"	f
tt_sample_stratified	lib/tensor_toolbox/tt_sample_stratified.m	/^function [subs, xvals, weights] = tt_sample_stratified(X, xnzidx, nnzs, nzrs, oversample)$/;"	f
tt_sample_uniform	lib/tensor_toolbox/tt_sample_uniform.m	/^function [subs,vals,wgts] = tt_sample_uniform(X,nsamp)$/;"	f
tt_sample_zeros	lib/tensor_toolbox/tt_sample_zeros.m	/^function subs = tt_sample_zeros(X,Xnzidx,nsamps,oversample,with_replacement)$/;"	f
tt_size2str	lib/tensor_toolbox/tt_size2str.m	/^function s = tt_size2str(sz)$/;"	f
tt_sizecheck	lib/tensor_toolbox/tt_sizecheck.m	/^function ok = tt_sizecheck(siz)$/;"	f
tt_sub2ind	lib/tensor_toolbox/tt_sub2ind.m	/^function idx = tt_sub2ind(siz,subs)$/;"	f
tt_sub2ind64	lib/tensor_toolbox/tt_sub2ind64.m	/^function idx = tt_sub2ind64(siz,subs)$/;"	f
tt_subscheck	lib/tensor_toolbox/tt_subscheck.m	/^function ok = tt_subscheck(subs)$/;"	f
tt_subsubsref	lib/tensor_toolbox/tt_subsubsref.m	/^function a = tt_subsubsref(obj,s)$/;"	f
tt_valscheck	lib/tensor_toolbox/tt_valscheck.m	/^function ok = tt_valscheck(vals)$/;"	f
ttbdir	lib/tensor_toolbox/maintenance/update_classlist.m	/^ttbdir = getfield(what('tensor_toolbox'),'path');$/;"	v
ttensor	lib/tensor_toolbox/@ttensor/ttensor.m	/^function t = ttensor(varargin)$/;"	f
ttm	lib/tensor_toolbox/@ktensor/ttm.m	/^function X = ttm(X,V,varargin)$/;"	f
ttm	lib/tensor_toolbox/@sptensor/ttm.m	/^function Y = ttm(X,V,varargin)$/;"	f
ttm	lib/tensor_toolbox/@tensor/ttm.m	/^function Y = ttm(X,V,varargin)$/;"	f
ttm	lib/tensor_toolbox/@ttensor/ttm.m	/^function X = ttm(X,V,varargin)$/;"	f
ttsv	lib/tensor_toolbox/@tensor/ttsv.m	/^function y = ttsv(A,x,n,ver)$/;"	f
ttt	lib/tensor_toolbox/@sptensor/ttt.m	/^function c = ttt(varargin)$/;"	f
ttt	lib/tensor_toolbox/@tensor/ttt.m	/^function c = ttt(varargin)$/;"	f
ttv	lib/tensor_toolbox/@ktensor/ttv.m	/^function c = ttv(a,v,dims)$/;"	f
ttv	lib/tensor_toolbox/@sptensor/ttv.m	/^function c = ttv(a,v,dims)$/;"	f
ttv	lib/tensor_toolbox/@sumtensor/ttv.m	/^function c = ttv(a,v,dims)$/;"	f
ttv	lib/tensor_toolbox/@tensor/ttv.m	/^function c = ttv(a,v,dims)$/;"	f
ttv	lib/tensor_toolbox/@ttensor/ttv.m	/^function c = ttv(a,v,dims)$/;"	f
tucker_als	lib/tensor_toolbox/tucker_als.m	/^function [T,Uinit] = tucker_als(X,R,varargin)$/;"	f
tucker_sym	lib/tensor_toolbox/tucker_sym.m	/^function [T,Xinit] = tucker_sym(S,R,varargin)$/;"	f
tuningHulls	lib/neuron-table/getTuningHull.m	/^tuningHulls = [unitIDs hullTab];$/;"	v
tuningTable_unit	lib/neuron-table/getTuningHull.m	/^    tuningTable_unit = tuningTable(unit_idx,weight_header_idx);$/;"	v
tuningTable_unit	lib/neuron-table/plotWeightClouds.m	/^    tuningTable_unit = tuningTable(unit_idx,:);$/;"	v
tvals	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^tvals = T.vals;$/;"	v
tvals	lib/tensor_toolbox/@sptensor/divide.m	/^        tvals = tvals .* v(subs(:,n));$/;"	v
tvals	lib/tensor_toolbox/@sptensor/divide.m	/^    tvals = ones(size(vals)) * K.lambda(r);$/;"	v
tvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^                tvals = tvals .* v(csubs(:,n));$/;"	v
tvals	lib/tensor_toolbox/@sptensor/rdivide.m	/^            tvals = B.lambda(r) * ones(NZ,1);$/;"	v
tvals	lib/tensor_toolbox/@sptensor/times.m	/^                tvals = tvals .* v(csubs(:,n));$/;"	v
tvals	lib/tensor_toolbox/@sptensor/times.m	/^            tvals = B.lambda(r) * A.vals;$/;"	v
twoStageEngine_td	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^function result = twoStageEngine_td(seqTrain, seqTest, fname, varargin)$/;"	f
twod	lib/TrialData/util/lib/isomap/IsomapII.m	/^     twod = find(dims==2); $/;"	v
twod	lib/TrialData/util/lib/isomap/isomap.m	/^     twod = find(dims==2); $/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^            tx = tx(tx<end_time);$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^            tx = tx(tx>start_time);$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = [start_time; tx];$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = [tx;end_time];$/;"	v
tx	lib/TrialData/td_limblab/parseFileByTrial.m	/^        tx = data.t;$/;"	v
tx	lib/TrialData/util/resample_signals.m	/^    tx = tx';$/;"	v
txt	lib/tensor_toolbox/@ktensor/viz.m	/^            txt = sprintf('%3.2f', rellambda(j));$/;"	v
txt	lib/tensor_toolbox/@ktensor/viz.m	/^            txt = sprintf('%d', j);$/;"	v
typ	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  typ        = 'fa';$/;"	v
typ	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^typ           = 'fa';$/;"	v
type	lib/tensor_toolbox/@sptensor/subsasgn.m	/^        type = tt_assignment_type(t,s.subs,rhs);$/;"	v
type	lib/tensor_toolbox/@sptensor/subsasgn.m	/^    type = 'subtensor';$/;"	v
type	lib/tensor_toolbox/@sptensor/subsasgn.m	/^type = 'subscripts';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^                    type = 'linear indicies';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^                    type = 'subscripts';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^                type = 'subtensor';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^               type = 'subscripts';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^               type = 'subtensor';$/;"	v
type	lib/tensor_toolbox/@tensor/subsasgn.m	/^        type = 'error';$/;"	v
type	lib/tensor_toolbox/gcp_opt.m	/^    type = 'user-specified';$/;"	v
type	lib/tensor_toolbox/gcp_opt.m	/^type = params.Results.type;$/;"	v
type	lib/tensor_toolbox/import_data.m	/^type = import_type(fid);$/;"	v
type	lib/tensor_toolbox/import_data.m	/^type = typelist(1);$/;"	v
type	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^type = tmp{1};$/;"	v
typelist	lib/tensor_toolbox/import_data.m	/^typelist = regexp(line, '\\s+', 'split');$/;"	v
u	lib/TrialData/Analysis/pairwiseCorr.m	/^u = unique(c);$/;"	v
u	lib/TrialData/Analysis/runDPCA.m	/^            u = num2cell(unique([trial_data.(varargin{i})]));$/;"	v
u	lib/TrialData/Analysis/runDPCA.m	/^            u = unique({trial_data.(varargin{i})});$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique([trial_data(cond_idx{trial}).(fn_meta{f})]);$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^                u = unique(cat(1,trial_data(cond_idx{trial}).(fn_meta{f})),'rows');$/;"	v
u	lib/TrialData/Tools/trialAverage.m	/^            u = unique({trial_data(cond_idx{trial}).(fn_meta{f})});$/;"	v
u	lib/tensor_toolbox/@ktensor/ktensor.m	/^    u = varargin{1};$/;"	v
u	lib/tensor_toolbox/@ktensor/minus.m	/^    u = cell(M,1);$/;"	v
u	lib/tensor_toolbox/@ktensor/plus.m	/^    u = cell(M,1);$/;"	v
u	lib/tensor_toolbox/@symktensor/symktensor.m	/^    u = v(p+1:end);$/;"	v
u	lib/tensor_toolbox/@symktensor/symktensor.m	/^    u = v;$/;"	v
u	lib/tensor_toolbox/@symktensor/symktensor.m	/^   u = v(p+1:end);$/;"	v
u	lib/tensor_toolbox/@symktensor/symktensor.m	/^   u = v;$/;"	v
u	lib/tensor_toolbox/cp_apr.m	/^        u = v .^ 2;$/;"	v
u	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
ub	lib/tensor_toolbox/@symktensor/fg_setup.m	/^ub = Inf * ones(R,1);$/;"	v
ub	lib/tensor_toolbox/cp_sym.m	/^        ub = Inf * ones(size(x0));$/;"	v
ub	lib/tensor_toolbox/cp_sym.m	/^    ub = Inf * ones(size(x0));$/;"	v
ubumpDirs	lib/estimateBumpFromPCA.m	/^ubumpDirs = sort(unique([td.bumpDir]));$/;"	v
ubvec	lib/tensor_toolbox/gcp_opt.m	/^    ubvec = inf(vecsz,1);$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = num2cell(unique([trial_data.(conditions{iCond})]));$/;"	v
uc	lib/TrialData/Tools/trialAverage.m	/^            uc = unique({trial_data.(conditions{iCond})});$/;"	v
uf	lib/tensor_toolbox/tests/Test_Symtensor.m	/^        uf = struct('not', @not, 'uminus', @uminus, 'uplus', @uplus);$/;"	v
uf	lib/tensor_toolbox/tests/Test_Tensor.m	/^        uf = struct('not', @not, 'uminus', @uminus, 'uplus', @uplus);$/;"	v
ul	lib/TrialData/util/circular_mean.m	/^  ul = mu + t;$/;"	v
ul	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
ul	lib/tensor_toolbox/doc/html/ttb.css	/^ul { padding:0px; margin:0px 0px 20px 23px; list-style:square; }$/;"	s
ul	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^<xsl:template match="ul">$/;"	m
ul li	lib/tensor_toolbox/doc/html/ttb.css	/^ul li { padding:0px; margin:0px 0px 7px 0px; }$/;"	s
ul li ol li	lib/tensor_toolbox/doc/html/ttb.css	/^ul li ol li { list-style:decimal; }$/;"	s
ul li ul	lib/tensor_toolbox/doc/html/ttb.css	/^ul li ul { padding:5px 0px 0px; margin:0px 0px 7px 23px; }$/;"	s
uminus	lib/tensor_toolbox/@ktensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@sptenmat/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@sptensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@sumtensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@symktensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@symtensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@tenmat/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@tensor/uminus.m	/^function t = uminus(t)$/;"	f
uminus	lib/tensor_toolbox/@ttensor/uminus.m	/^function t = uminus(t)$/;"	f
uni	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        uni = unique(options.whichMarg);$/;"	v
union	lib/tensor_toolbox/maintenance/capabilitychart.m	/^    functionnames = union(functionnames,C);$/;"	f
unique_bin_sizes	lib/TrialData/util/subfcn/check_td_quality.m	/^    unique_bin_sizes = unique([trial_data.bin_size]);$/;"	v
unique_tgt_dirs	bumpcurl_tensors.m	/^        unique_tgt_dirs = unique(tgt_dirs);$/;"	v
unique_tgt_dirs	lib/load_curl_data.m	/^        unique_tgt_dirs = sort(unique(tgt_dirs));$/;"	v
unitIDs	lib/neuron-table/getTuningHull.m	/^unitIDs = unique(tuningTable(:,meta_header_idx));$/;"	v
unit_ids	lib/load_curl_data.m	/^                unit_ids = td(trialnum).([arrayname '_unit_guide']);$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx & NEV.Data.Spikes.Unit == found_units(iUnit);$/;"	v
unit_idx	lib/TrialData/DataProcessing/processNEV.m	/^                    unit_idx = chan_idx;$/;"	v
unit_idx	lib/TrialData/td_limblab/parseFileByTrial.m	/^    unit_idx = cell(1,length(arrays));$/;"	v
unit_idx	lib/neuron-table/comparePDClouds.m	/^    unit_idx = ismember(ID,keys(i,:));$/;"	v
unit_idx	lib/neuron-table/getTuningHull.m	/^    unit_idx = ismember(ID,unitIDs(i,:));$/;"	v
unit_idx	lib/neuron-table/plotWeightClouds.m	/^    unit_idx = ismember(ID,modelIDs(i,:));$/;"	v
unit_structure	lib/TrialData/util/remove_spike_artifacts.m	/^    unit_structure = varargin{1};$/;"	v
unit_tic	lib/neuron-table/getTDPDs.m	/^unit_tic = tic;$/;"	v
unroll	lib/neuron-table/plotTuning.m	/^    unroll = false;$/;"	v
unroll	lib/neuron-table/plotTuning.m	/^unroll = false;$/;"	v
unsorted_units	lib/load_curl_data.m	/^                unsorted_units = (unit_ids(:,2)==0);$/;"	v
update	lib/tensor_toolbox/@ktensor/update.m	/^function M = update(M,modes,data)$/;"	f
update_classlist	lib/tensor_toolbox/maintenance/update_classlist.m	/^function update_classlist(varargin)$/;"	f
update_copyright	lib/tensor_toolbox/maintenance/update_copyright.m	/^function update_copyright(fname,varargin)$/;"	f
uplus	lib/tensor_toolbox/@ktensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@sptenmat/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@sptensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@sumtensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@symktensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@symtensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@tenmat/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@tensor/uplus.m	/^function t = uplus(t)$/;"	f
uplus	lib/tensor_toolbox/@ttensor/uplus.m	/^function t = uplus(t)$/;"	f
upper	lib/tensor_toolbox/cp_opt.m	/^    upper = convert_bound(upper,sz,R);$/;"	v
upper	lib/tensor_toolbox/cp_opt.m	/^upper = params.Results.upper;$/;"	v
upper	lib/tensor_toolbox/cp_wopt.m	/^    upper = convert_bound(upper,sz,R);$/;"	v
upper	lib/tensor_toolbox/cp_wopt.m	/^upper = params.Results.upper;$/;"	v
upper	lib/tensor_toolbox/tests/Test_Tensor.m	/^                        upper = lower+randi(sz(k)-lower);$/;"	v
ups_row	lib/tensor_toolbox/cp_apr.m	/^        ups_row = x_row .\/ max(u, eps_div_zero);$/;"	v
ups_row	lib/tensor_toolbox/cp_apr.m	/^        ups_row = x_row' .\/ max(u, eps_div_zero);$/;"	v
upsampleTD	lib/TrialData/Tools/upsampleTD.m	/^function trial_data = upsampleTD(trial_data,params)$/;"	f
upsample_factor	lib/TrialData/Tools/upsampleTD.m	/^        upsample_factor = params;$/;"	v
upsample_factor	lib/TrialData/Tools/upsampleTD.m	/^upsample_factor = 2;$/;"	v
useColor	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^    useColor = [ linspace(1,0,floor(min(length(seq),nPlotMax)\/2))', linspace(0,1,floor(min(leng/;"	v
useColor	lib/TrialData/td_limblab/td_gpfa/plot3D_td.m	/^useColor = 0.2 * [1 1 1]; % gray$/;"	v
useRad	lib/TrialData/util/angleDiff.m	/^        useRad = true;$/;"	v
useSqrt	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^  useSqrt = true;$/;"	v
use_adagrad	lib/tensor_toolbox/gcp_opt.m	/^use_adagrad = strcmpi(opt,'adagrad');$/;"	v
use_adam	lib/tensor_toolbox/gcp_opt.m	/^use_adam = strcmpi(opt,'adam');$/;"	v
use_array_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    use_array_name = array_alias{temp_idx,2};$/;"	v
use_array_name	lib/TrialData/td_limblab/parseFileByTrial.m	/^            use_array_name = arrays{array};$/;"	v
use_bl_ref	lib/TrialData/td_limblab/getLearningMetrics.m	/^use_bl_ref = true;$/;"	v
use_dijk	lib/TrialData/util/lib/isomap/IsomapII.m	/^use_dijk = options.dijkstra;$/;"	v
use_glmnet	lib/TrialData/Analysis/getModel.m	/^use_glmnet = false;$/;"	v
use_lbfgsb	lib/tensor_toolbox/cp_opt.m	/^use_lbfgsb = strcmp(opt,'lbfgsb');$/;"	v
use_lbfgsb	lib/tensor_toolbox/cp_wopt.m	/^use_lbfgsb = strcmp(opt,'lbfgsb');$/;"	v
use_lbfgsb	lib/tensor_toolbox/gcp_opt.m	/^use_lbfgsb = strcmpi(opt,'lbfgsb');$/;"	v
use_sgd	lib/tensor_toolbox/gcp_opt.m	/^use_sgd = strcmpi(opt,'sgd');$/;"	v
use_stoc	lib/tensor_toolbox/gcp_opt.m	/^use_stoc = use_adam || use_sgd || use_adagrad;$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/estimateDimensionality.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/getNoiseCovar.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Analysis/getPotentSpace.m	/^use_trials   =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/addCorrelatedNoise.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/centerSignals.m	/^    use_trials = 1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/centerSignals.m	/^use_trials   =  [];$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^            use_trials = trial_idx;$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/dimReduce.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^    use_trials = getTDidx(trial_data,use_trials{:});$/;"	v
use_trials	lib/TrialData/Tools/removeBadNeurons.m	/^use_trials      =  1:length(trial_data);$/;"	v
use_trials	lib/neuron-table/getTuningCurves.m	/^use_trials        =  1:length(trial_data);$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = inputArgument;$/;"	v
userRequestedChanRow	lib/TrialData/util/openNSx_td.m	/^            userRequestedChanRow = str2num(inputArgument(3:end)); %#ok<ST2NM>$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^            userRequestedChannels = NSx.MetaTags.ChannelID(userRequestedChanRow);$/;"	v
userRequestedChannels	lib/TrialData/util/openNSx_td.m	/^        userRequestedChannels = NSx.MetaTags.ChannelID;$/;"	v
usincos	lib/TrialData/td_limblab/getLearningMetrics.m	/^                usincos = [sin(utheta'*(1:num_freqs)) cos(utheta'*(1:num_freqs))];$/;"	v
usz	lib/tensor_toolbox/tests/Test_NewTTM.m	/^            usz = combo(3);$/;"	v
utheta	lib/TrialData/td_limblab/getLearningMetrics.m	/^utheta = unique([trial_data.(target_dir_fieldname)]);$/;"	v
utheta	lib/TrialData/util/bin_angles.m	/^    utheta = unique(theta);$/;"	v
v	lib/TrialData/Tools/reorderTDfields.m	/^v = zeros(1,length(idx_idx));$/;"	v
v	lib/tensor_toolbox/@sptensor/divide.m	/^        v = K{n}(:,r);$/;"	v
v	lib/tensor_toolbox/@sptensor/rdivide.m	/^                v = B{n}(:,r);$/;"	v
v	lib/tensor_toolbox/@sptensor/times.m	/^                v = B{n}(:,r);$/;"	v
v	lib/tensor_toolbox/@symktensor/symktensor.m	/^    v = varargin{1};$/;"	v
v	lib/tensor_toolbox/@symktensor/symktensor.m	/^   v = varargin{1};$/;"	v
v	lib/tensor_toolbox/@tenmat/norm.m	/^v = reshape(T.data, numel(T.data), 1);$/;"	v
v	lib/tensor_toolbox/@tensor/norm.m	/^v = reshape(T.data, numel(T.data), 1);$/;"	v
v	lib/tensor_toolbox/@tensor/tensor.m	/^    v = varargin{1};$/;"	v
v	lib/tensor_toolbox/cp_apr.m	/^        v = m_row * Pi';$/;"	v
v	lib/tensor_toolbox/cp_apr.m	/^    v = sum(M.U{n}(xsubs,:).*Pi,2);$/;"	v
v	lib/tensor_toolbox/doc/identities_doc.m	/^v = khatrirao(A,'r') * ones(size(A{1},2),1);$/;"	v
v	lib/tensor_toolbox/gcp_opt.m	/^                v = cellfun(@(vk,gk) beta2*vk + (1-beta2)*gk.^2,v,Gest,'UniformOutput',false);$/;"	v
v	lib/tensor_toolbox/gcp_opt.m	/^            v = vsave;$/;"	v
v	lib/tensor_toolbox/gcp_opt.m	/^        v = [];$/;"	v
v	lib/tensor_toolbox/gcp_opt.m	/^        v = cell(nd,1);$/;"	v
v	lib/tensor_toolbox/sptendiag.m	/^v = reshape(v,[numel(v) 1]);$/;"	v
v	lib/tensor_toolbox/tendiag.m	/^v = reshape(v,[numel(v) 1]);$/;"	v
v	lib/tensor_toolbox/teneye.m	/^   v = sum(sum(s,2)==M\/2);$/;"	v
v1	lib/tensor_toolbox/@sptenmat/aatx.m	/^v1 = vals .* v1;$/;"	v
v1	lib/tensor_toolbox/@sptenmat/aatx.m	/^v1 = x(s1);$/;"	v
v2	lib/tensor_toolbox/@sptenmat/aatx.m	/^v2 = vals .* v2;$/;"	v
v2	lib/tensor_toolbox/@sptenmat/aatx.m	/^v2 = y(s2);$/;"	v
vOut	lib/matlab-colors/linspecer/linspecer.m	/^vOut = cell(size(vIn,1),1);$/;"	v
vaf_s	lib/TrialData/TrialData_tutorial.m	/^vaf_s = compute_vaf(y_sp,y_sp_pred);$/;"	v
vaf_x	lib/TrialData/TrialData_tutorial.m	/^vaf_x = compute_vaf(x_vel,x_vel_pred);$/;"	v
vaf_y	lib/TrialData/TrialData_tutorial.m	/^vaf_y = compute_vaf(y_vel,y_vel_pred);$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^            val = [val,length(intersect(varargin{i:i+1}))];$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = [val,length(varargin{1})];$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = cat(3,val{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = loop_me_twice(length(size(val{1})),[],val,valIdx,0,idx_vals{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^        val = loops_all_the_way_down(val,temp{:});$/;"	v
val	lib/TrialData/Analysis/runDPCA.m	/^    val = [val {fr'}];$/;"	v
val	lib/TrialData/util/lib/isomap/IsomapII.m	/^     val = beta.^(1\/2); $/;"	v
val	lib/TrialData/util/lib/isomap/IsomapII.m	/^val = real(diag(val(sorth,sorth))); $/;"	v
val	lib/TrialData/util/lib/isomap/isomap.m	/^val = real(diag(val(sorth,sorth))); $/;"	v
val	lib/tensor_toolbox/@symtensor/symtensor.m	/^    val = varargin{1};$/;"	v
val	lib/tensor_toolbox/cp_apr.m	/^            val = sum(upsilon' .* Pi(:,c) .* Pi(:,d));$/;"	v
valCat	lib/TrialData/Analysis/runDPCA.m	/^        valCat = loop_me_twice(dim+1,valCat,val(p),valIdx(:,p),depthCount,varargin{2:end});$/;"	v
valCat	lib/TrialData/Analysis/runDPCA.m	/^    valCat = cat(dim+1,temp,valCat);$/;"	v
valIdx	lib/TrialData/Analysis/runDPCA.m	/^    valIdx = [valIdx, depthCount];$/;"	v
valid_binary	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^function tf = valid_binary(X)$/;"	f
valid_natural	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^function tf = valid_natural(X)$/;"	f
valid_nonneg	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^function tf = valid_nonneg(X)$/;"	f
vals	lib/tensor_toolbox/@ktensor/mask.m	/^    vals = vals + tmpvals;$/;"	v
vals	lib/tensor_toolbox/@ktensor/mask.m	/^vals = zeros(vsz);$/;"	v
vals	lib/tensor_toolbox/@sptenmat/aatx.m	/^vals = a.vals;$/;"	v
vals	lib/tensor_toolbox/@sptenmat/sptenmat.m	/^    vals = varargin{2};$/;"	v
vals	lib/tensor_toolbox/@sptensor/divide.m	/^    vals = vals + tvals;$/;"	v
vals	lib/tensor_toolbox/@sptensor/divide.m	/^vals = zeros(size(Y.vals));$/;"	v
vals	lib/tensor_toolbox/@sptensor/find.m	/^vals = t.vals;$/;"	v
vals	lib/tensor_toolbox/@sptensor/mask.m	/^vals = zeros(nvals,1);$/;"	v
vals	lib/tensor_toolbox/@sptensor/sptensor.m	/^            vals = source.vals;$/;"	v
vals	lib/tensor_toolbox/@sptensor/sptensor.m	/^    vals = fh(nz,1);$/;"	v
vals	lib/tensor_toolbox/@sptensor/sptensor.m	/^    vals = varargin{2};$/;"	v
vals	lib/tensor_toolbox/@sptensor/subsref.m	/^            vals = t.vals(loc);$/;"	v
vals	lib/tensor_toolbox/@symktensor/fg.m	/^    vals = xprods * lambda;$/;"	v
vals	lib/tensor_toolbox/@symktensor/full.m	/^vals = entry(t,I);$/;"	v
vals	lib/tensor_toolbox/@tensor/find.m	/^        vals = [];$/;"	v
vals	lib/tensor_toolbox/@tensor/find.m	/^        vals = reshape(t.data(idx), length(idx), 1);$/;"	v
vals	lib/tensor_toolbox/@tensor/mask.m	/^vals = X.data(idx);/;"	v
vals	lib/tensor_toolbox/doc/sptensor_doc.m	/^vals = [1; 2; 3]; %<-- The values of the nonzeros.$/;"	v
vals	lib/tensor_toolbox/import_data.m	/^vals = data{n+1};$/;"	v
vals	lib/tensor_toolbox/sptenrand.m	/^vals = rand(nz,1);$/;"	v
vals	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            vals = feval(g,[vsz 1]);$/;"	v
vals	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    vals = X(:);$/;"	v
vals	lib/tensor_toolbox/tt_gcp_fg_setup.m	/^    vals = X.vals;$/;"	v
vals	lib/tensor_toolbox/tt_sample_nonzeros.m	/^vals = X.vals(nidx); $/;"	v
vals	lib/tensor_toolbox/tt_sample_uniform.m	/^vals = X(subs);$/;"	v
value	lib/tensor_toolbox/@symktensor/entry.m	/^    value = dot(lambda,prod(X(I,:)));$/;"	v
value	lib/tensor_toolbox/@symktensor/entry.m	/^value = bar * lambda;$/;"	v
var	lib/tensor_toolbox/doc/html/ttb.css	/^html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,addres/;"	s
var2struct	lib/tensor_toolbox/@symktensor/fg_setup.m	/^function s = var2struct(varargin)$/;"	f
varFloor	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  varFloor = minVarFrac * diag(cX);  $/;"	v
var_names	lib/neuron-table/getTuningCurves.m	/^    var_names = [{'bins'} strcat(prefix,move_corr{:,1},{'Curve','CurveCIlow','CurveCIhigh'})];$/;"	v
var_names	lib/neuron-table/getTuningCurves.m	/^    var_names = [{'bins'} strcat(prefix,move_corr{:,1},{'Curve'})];$/;"	v
varargin	lib/TrialData/DataProcessing/initSignalStruct.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/appendTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/catTDs.m	/^varargin = varargin(~idx_empty);$/;"	v
varargin	lib/TrialData/Tools/dupeAndShift.m	/^            varargin = varargin(1:end-1);$/;"	v
varargin	lib/TrialData/Tools/dupeAndShift.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/Tools/getTDidx.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/TrialData/util/checkUnitGuides.m	/^    varargin = varargin{1};$/;"	v
varargin	lib/neuron-table/getNTidx.m	/^    varargin = varargin{1};$/;"	v
vars	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^vars  = who;$/;"	v
vars	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^vars  = who;$/;"	v
vars	lib/TrialData/util/assignParams.m	/^vars = fieldnames(params);$/;"	v
vec	lib/TrialData/util/lib/isomap/IsomapII.m	/^     vec = subB*alpha*inv(val); $/;"	v
vec	lib/TrialData/util/lib/isomap/IsomapII.m	/^vec = vec(:,sorth); $/;"	v
vec	lib/TrialData/util/lib/isomap/isomap.m	/^vec = vec(:,sorth); $/;"	v
vecs	lib/tensor_toolbox/@ktensor/innerprod.m	/^    vecs = cell(1,ndims(X));$/;"	v
vecsz	lib/tensor_toolbox/gcp_opt.m	/^vecsz = sum(sz)*nc;$/;"	v
vectorG	lib/tensor_toolbox/tt_gcp_fg.m	/^        vectorG = false;$/;"	v
vectorG	lib/tensor_toolbox/tt_gcp_fg_est.m	/^        vectorG = false;$/;"	v
vectorizeForMu	lib/tensor_toolbox/cp_apr.m	/^function y = vectorizeForMu(x)$/;"	f
vel_or_pos	lib/TrialData/td_limblab/getLearningMetrics.m	/^vel_or_pos = 'vel';$/;"	v
velocity	lib/TrialData/td_limblab/BBDemoScript.m	/^velocity = get_vars(trial_data_movement, {'vel',1:2});$/;"	v
velocity2	lib/TrialData/td_limblab/BBDemoScript.m	/^velocity2 = cat(1, trial_data_movement.vel);$/;"	v
ver	lib/tensor_toolbox/@symtensor/full.m	/^    ver = 0;$/;"	v
ver	lib/tensor_toolbox/@tensor/issymmetric.m	/^    ver = 0; %By default use new, faster version of issymmetric$/;"	v
ver	lib/tensor_toolbox/@tensor/issymmetric.m	/^    ver = 1; % User requested permutation and difference information.$/;"	v
ver	lib/tensor_toolbox/@tensor/ttm.m	/^    ver = varargin{3};$/;"	v
ver	lib/tensor_toolbox/@tensor/ttm.m	/^ver = 0;$/;"	v
ver	lib/tensor_toolbox/@tensor/ttsv.m	/^    ver = 2;$/;"	v
ver	lib/tensor_toolbox/tests/Test_NewTTM.m	/^        ver = struct('old', 0, 'new', 1);$/;"	v
verbose	lib/TrialData/Analysis/estimateDimensionality.m	/^verbose         =  false;$/;"	v
verbose	lib/TrialData/Analysis/evalModel.m	/^verbose          =  false;$/;"	v
verbose	lib/TrialData/Analysis/getModel.m	/^verbose              =  false;$/;"	v
verbose	lib/TrialData/Analysis/getNoiseCovar.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Analysis/getPotentSpace.m	/^verbose            =  false;$/;"	v
verbose	lib/TrialData/Analysis/pairwiseCorr.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Analysis/runDPCA.m	/^verbose        =  false;$/;"	v
verbose	lib/TrialData/Analysis/runGPFA.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/DataProcessing/convertDataToTD.m	/^verbose         = false;$/;"	v
verbose	lib/TrialData/Plotting/visData.m	/^verbose           =    false;$/;"	v
verbose	lib/TrialData/Tools/addCorrelatedNoise.m	/^verbose         = false;$/;"	v
verbose	lib/TrialData/Tools/addFiringRates.m	/^verbose       = false;$/;"	v
verbose	lib/TrialData/Tools/centerSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/convBasisFunc.m	/^verbose       =  false;$/;"	v
verbose	lib/TrialData/Tools/dimReduce.m	/^verbose           = false;$/;"	v
verbose	lib/TrialData/Tools/getDifferential.m	/^verbose  =  false;$/;"	v
verbose	lib/TrialData/Tools/getEnvelope.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^verbose             = false;$/;"	v
verbose	lib/TrialData/Tools/getNorm.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/joinTrials.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/removeBadNeurons.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/removeBadTrials.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/smoothSignals.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/softNormalize.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/splitTD.m	/^verbose            =  false;$/;"	v
verbose	lib/TrialData/Tools/sqrtTransform.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/stretchSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/Tools/subtractConditionMean.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/trialAverage.m	/^verbose = false;$/;"	v
verbose	lib/TrialData/Tools/trimTD.m	/^verbose = true;$/;"	v
verbose	lib/TrialData/Tools/zscoreSignals.m	/^verbose      =  false;$/;"	v
verbose	lib/TrialData/td_limblab/td_gpfa/fastfa.m	/^  verbose    = false;$/;"	v
verbose	lib/TrialData/util/lib/isomap/IsomapII.m	/^verbose = options.verbose; $/;"	v
verbose	lib/TrialData/util/lib/isomap/isomap.m	/^verbose = options.verbose; $/;"	v
verbose	lib/neuron-table/getTDClassicalPDs.m	/^verbose = true;$/;"	v
verbose	lib/neuron-table/getTDPDs.m	/^verbose = true;$/;"	v
verbose	lib/tensor_toolbox/maintenance/update_copyright.m	/^verbose = params.Results.Verbose;$/;"	v
verbose	lib/tensor_toolbox/tenrandblk.m	/^    verbose = false;$/;"	v
verbosity	lib/tensor_toolbox/cp_wopt.m	/^verbosity = params.Results.verbosity;$/;"	v
verbosity	lib/tensor_toolbox/create_problem_binary.m	/^verbosity = params.Results.verbosity;$/;"	v
verbosity	lib/tensor_toolbox/hosvd.m	/^verbosity = params.Results.verbosity;$/;"	v
vers	lib/tensor_toolbox/@tensor/mttkrp.m	/^    vers = 1;$/;"	v
vhat	lib/tensor_toolbox/gcp_opt.m	/^                vhat = cellfun(@(vk) vk\/(1-beta2^titers),v,'UniformOutput',false);$/;"	v
vi	lib/tensor_toolbox/matrandorth.m	/^		vi = randn(n,1);$/;"	v
vi	lib/tensor_toolbox/matrandorth.m	/^		vi = vi -  M(:,1:i-1)  * ( M(:,1:i-1).' * vi )  ;$/;"	v
vi	lib/tensor_toolbox/matrandorth.m	/^    vi = randn(n,1);  $/;"	v
videoSyncPacketID	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketID = 65534;$/;"	v
videoSyncPacketIDIndices	lib/TrialData/util/openNEV_td.m	/^videoSyncPacketIDIndices   = find(PacketIDs == videoSyncPacketID);$/;"	v
vidx	lib/tensor_toolbox/tt_dimscheck.m	/^        vidx = sdims;  % index multiplicands by (sorted) dimension$/;"	v
vidx	lib/tensor_toolbox/tt_dimscheck.m	/^        vidx = sidx;   $/;"	v
viridis	lib/matlab-colors/PythonColors/Colormaps/viridis.m	/^function cm_data=viridis(m)$/;"	f
visData	lib/TrialData/Plotting/visData.m	/^function [ ] = visData( trial_data, params )$/;"	f
viz	lib/tensor_toolbox/@ktensor/viz.m	/^function info = viz(K, varargin)$/;"	f
vizopts	lib/tensor_toolbox/doc/cp_als_doc.m	/^vizopts = {'PlotCommands',{'bar','line','line'},...$/;"	v
vizopts	lib/tensor_toolbox/doc/gcp_opt_amino_doc.m	/^vizopts = {'PlotCommands',{@bar,@(x,y) plot(x,y,'r'),@(x,y) plot(x,y,'g')},...$/;"	v
vsave	lib/tensor_toolbox/gcp_opt.m	/^            vsave = v;$/;"	v
vsave	lib/tensor_toolbox/gcp_opt.m	/^    vsave = v;                      % Corresponding ADAM parameters$/;"	v
vsz	lib/tensor_toolbox/@ktensor/mask.m	/^vsz = [size(wsubs,1) 1];$/;"	v
vsz	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            vsz = nchoosek(m+n-1,m);$/;"	v
w	lib/TrialData/Tools/dimReduce.m	/^            w = iso_info;$/;"	v
w	lib/TrialData/Tools/dimReduce.m	/^w                 = [];     % w is used to know if params was info_out (e.g. whether to recomput/;"	v
w	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^w = [.95 .95 .95];       %# middle$/;"	v
w	lib/TrialData/util/circular_mean.m	/^	w = ones(size(alpha));$/;"	v
w	lib/tensor_toolbox/@sptensor/ttv.m	/^        w = v{vidx(n)};        % extract nth vector$/;"	v
w	lib/tensor_toolbox/@ttensor/ttv.m	/^w = cell(ndims(a),1);$/;"	v
w	lib/tensor_toolbox/cp_apr.m	/^        w = x_row .\/ max(v, eps_div_zero);$/;"	v
w	lib/tensor_toolbox/cp_apr.m	/^        w = x_row' .\/ max(v, eps_div_zero);$/;"	v
w_in	lib/TrialData/Analysis/getPotentSpace.m	/^w_in = pca_info_in.w;$/;"	v
w_out	lib/TrialData/Analysis/getPotentSpace.m	/^w_out = pca_info_out.w;$/;"	v
wd_specfile	lib/tensor_toolbox/cp_sym.m	/^    wd_specfile = isempty(specfile);$/;"	v
wd_wrapper	lib/tensor_toolbox/cp_sym.m	/^    wd_wrapper = ~exist('snoptwrapper.m','file');$/;"	v
weightArr	lib/neuron-table/getTDModelWeights.m	/^    weightArr = zeros(num_out_signals,size(in_signals{in_signal_idx,2},2));$/;"	v
weightTable	lib/neuron-table/getTDModelWeights.m	/^    weightTable = [weightTable model_eval_table];$/;"	v
weightTable	lib/neuron-table/getTDModelWeights.m	/^    weightTable = [weightTable tab_append];$/;"	v
weightTable	lib/neuron-table/getTDModelWeights.m	/^weightTable = [tableStarter weightTable];$/;"	v
weightTable	lib/neuron-table/getTDModelWeights.m	/^weightTable = table(zeros(num_out_signals,1),'VariableNames',{[prefix 'baselineWeight']});$/;"	v
weightTable_select	lib/neuron-table/getPDsFromWeights.m	/^        weightTable_select = weightTable(ismember(weightTable(:,key_cols),key),:);$/;"	v
weight_cols	lib/neuron-table/getPDsFromWeights.m	/^weight_cols = endsWith(weightTable.Properties.VariableNames,'Weight') & ~baseline_cols;$/;"	v
weight_cols_idx	lib/neuron-table/getPDsFromWeights.m	/^weight_cols_idx = find(weight_cols);$/;"	v
weight_header_idx	lib/neuron-table/getTuningHull.m	/^weight_header_idx = endsWith(tuningTable.Properties.VariableNames,'Weight');$/;"	v
weights	lib/neuron-table/getPDsFromWeights.m	/^        weights = weightTable_select.(col_title);$/;"	v
weights	lib/neuron-table/getTDModelWeights.m	/^weights = temp_info.b';$/;"	v
weights	lib/tensor_toolbox/tt_sample_semistrat.m	/^weights = [nonzero_weights; zero_weights];$/;"	v
weights	lib/tensor_toolbox/tt_sample_stratified.m	/^weights = [nonzero_weights; zero_weights];$/;"	v
wgts	lib/tensor_toolbox/tt_sample_uniform.m	/^wgts = tsz \/ nsamp * ones(nsamp,1);$/;"	v
whats-new	lib/tensor_toolbox/doc/html/getting_started.html	/^      <h3 id="whats-new">What's new in Version 3.1?<\/h3>$/;"	I
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = [whichMarg i*ones(1, nc)];$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = margNums(whichMarg);$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = whichMarg(order(1:L));$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^    whichMarg = whichMarg(toKeep);$/;"	v
whichMarg	lib/TrialData/td_limblab/td_dpca/dpca.m	/^whichMarg = [];$/;"	v
which_field	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_field      = {'vel_norm',1};$/;"	v
which_file	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_file    = signal_info{iFile}.filename;$/;"	v
which_label	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_label = signal_info{iFile}.label{iSig};$/;"	v
which_marg	lib/TrialData/Analysis/runDPCA.m	/^which_marg = [];$/;"	v
which_method	lib/TrialData/Tools/getMoveOnsetAndPeak.m	/^which_method     =  'peak';$/;"	v
which_method	lib/TrialData/util/compute_r2.m	/^    which_method = 'corr';$/;"	v
which_metric	lib/TrialData/td_limblab/getLearningMetrics.m	/^which_metric = 'angle';$/;"	v
which_name	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_name = signal_info{iFile}.name{iSig};$/;"	v
which_operation	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_operation = signal_info{iFile}.operation{iSig};$/;"	v
which_routine	lib/TrialData/DataProcessing/convertDataToTD.m	/^    which_routine = signal_info{iFile}.routine;$/;"	v
which_type	lib/TrialData/DataProcessing/convertDataToTD.m	/^            which_type = signal_info{iFile}.type{iSig};$/;"	v
whiteFade	lib/matlab-colors/linspecer/linspecer.m	/^function cmap = whiteFade(varargin)$/;"	f
width	lib/TrialData/Tools/dimReduce.m	/^width             = 0.05;   %   gaussian kernel s.d. for smoothing$/;"	v
width	lib/TrialData/Tools/smoothSignals.m	/^    width = params.kernel_SD;$/;"	v
width	lib/TrialData/Tools/smoothSignals.m	/^width           =  0.05;$/;"	v
width	lib/tensor_toolbox/@ktensor/viz.m	/^width = (res.RelModeWidth .\/ sum(res.RelModeWidth)) .* Hplotspace;$/;"	v
win	lib/TrialData/td_limblab/getNeuronTuning.m	/^win        =  params.window;$/;"	v
win_func	lib/TrialData/util/process_lfp.m	/^win_func =  win_func.\/norm(win_func);$/;"	v
win_func	lib/TrialData/util/process_lfp.m	/^win_func = fft_win_fun(fft_window_size);$/;"	v
window_centers	lib/TrialData/util/process_lfp.m	/^window_centers = cat(2, ...$/;"	v
window_centers	lib/TrialData/util/process_lfp.m	/^window_centers = window_size:step:size(data,1);$/;"	v
with_replacement	lib/tensor_toolbox/tt_sample_nonzeros.m	/^    with_replacement = true;$/;"	v
with_replacement	lib/tensor_toolbox/tt_sample_semistrat.m	/^with_replacement = true;$/;"	v
with_replacement	lib/tensor_toolbox/tt_sample_stratified.m	/^with_replacement = true;$/;"	v
with_replacement	lib/tensor_toolbox/tt_sample_zeros.m	/^   with_replacement = true;    $/;"	v
wk	lib/tensor_toolbox/cp_apr.m	/^    wk = norm(m_row - projGradStep);$/;"	v
wo_color	plotBumpcurlTuning.m	/^wo_color = colormap('winter');$/;"	v
wo_dir	bumpcurl_analysis.m	/^    wo_dir = atan2(wo_vel(:,2),wo_vel(:,1));$/;"	v
wo_dir_lmpred	bumpcurl_analysis.m	/^    wo_dir_lmpred = atan2(wo_lmvel_pred(:,2),wo_lmvel_pred(:,1));$/;"	v
wo_dir_nnpred	bumpcurl_analysis.m	/^    wo_dir_nnpred = atan2(wo_nnvel_pred(:,2),wo_nnvel_pred(:,1));$/;"	v
wo_eval	bumpcurl_analysis.m	/^    wo_eval = evalModel(td_wo,eval_params);$/;"	v
wo_idx	bumpcurl_analysis.m	/^    wo_idx = getTDidx(td,'epoch','WO');$/;"	v
wo_idx	bumpcurl_dpca.m	/^        wo_idx = getTDidx(td,'epoch','WO');$/;"	v
wo_idx	exploreData.m	/^wo_idx = getTDidx(td,'epoch','WO');$/;"	v
wo_idx	plotBumpcurlTuning.m	/^wo_idx = floor(linspace(1,length(wo_color),3));$/;"	v
wo_lmvel_pred	bumpcurl_analysis.m	/^    wo_lmvel_pred = cat(1,td_wo.linmodel_vel_from_spikes);$/;"	v
wo_nnvel_pred	bumpcurl_analysis.m	/^    wo_nnvel_pred = cat(1,td_wo.nn_vel_from_spikes);$/;"	v
wo_vel	bumpcurl_analysis.m	/^    wo_vel = cat(1,td_wo.vel);$/;"	v
wrap_func	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    wrap_func = @cart2pol_wrap;$/;"	v
wrap_func	lib/TrialData/td_limblab/addCoordPoint2TD.m	/^    wrap_func = @cart2sph_wrap;$/;"	v
wsubs	lib/tensor_toolbox/@ktensor/mask.m	/^wsubs = find(W);$/;"	v
wsubs	lib/tensor_toolbox/@sptensor/mask.m	/^wsubs = find(W);$/;"	v
wsubs	lib/tensor_toolbox/@tensor/mask.m	/^wsubs = find(W);$/;"	v
wvals	lib/tensor_toolbox/cp_apr.m	/^    wvals = X.vals .\/ max(v, epsilon);$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^        x  = get_vars(trial_data(trial),in_signals);$/;"	v
x	lib/TrialData/Analysis/getModel.m	/^    x = get_vars(trial_data(train_idx),in_signals);$/;"	v
x	lib/TrialData/Analysis/getPotentSpace.m	/^    x = score_in(:,1:in_dims);$/;"	v
x	lib/TrialData/td_limblab/parseFileByTrial.m	/^        x = data.(var_list{var});$/;"	v
x	lib/TrialData/util/subfcn/get_vars.m	/^x = zeros(size(cat(1,trial_data.(signals{1,1})),1),sum(cellfun(@(x) length(x),idx)));$/;"	v
x	lib/curvature.m	/^    x = c(:,1);$/;"	v
x	lib/curvature.m	/^    x = varargin{1};$/;"	v
x	lib/matlab-colors/linspecer/linspecer.m	/^    x = linspace(1,n,size(cmapp,1));$/;"	v
x	lib/matlab-colors/linspecer/linspecer.m	/^x = linspace(1,n,size(cmapp,1));$/;"	v
x	lib/tensor_toolbox/@ktensor/datadisp.m	/^    x = default;$/;"	v
x	lib/tensor_toolbox/@ktensor/datadisp.m	/^    x = opts.(name);$/;"	v
x	lib/tensor_toolbox/@ktensor/ktensor.m	/^        x = x';$/;"	v
x	lib/tensor_toolbox/@ktensor/ktensor.m	/^    x = varargin{1};$/;"	v
x	lib/tensor_toolbox/@ktensor/tovec.m	/^    x = [K.lambda; x];$/;"	v
x	lib/tensor_toolbox/@ktensor/tovec.m	/^x = cell2mat(xcell);$/;"	v
x	lib/tensor_toolbox/@symktensor/tovec.m	/^    x = [S.lambda; reshape(S.u,[],1)];$/;"	v
x	lib/tensor_toolbox/@symktensor/tovec.m	/^    x = reshape(S.u,[],1);$/;"	v
x	lib/tensor_toolbox/@tensor/contract.m	/^x = permute(x, [remdims i j]);$/;"	v
x	lib/tensor_toolbox/@tensor/innerprod.m	/^    x = reshape(X.data, 1, numel(X.data));$/;"	v
x	lib/tensor_toolbox/cp_nmu.m	/^    x = default;$/;"	v
x	lib/tensor_toolbox/cp_nmu.m	/^    x = opts.(name);$/;"	v
x	lib/tensor_toolbox/doc/sptenmat_doc.m	/^x = ones(10,1); %<-- Create vector$/;"	v
x	lib/tensor_toolbox/eig_geap.m	/^    x = newx;$/;"	v
x	lib/tensor_toolbox/eig_geap.m	/^x = data.x;$/;"	v
x	lib/tensor_toolbox/eig_geap.m	/^x = x0 \/ norm(x0);$/;"	v
x	lib/tensor_toolbox/eig_sshopm.m	/^    x = newx;$/;"	v
x	lib/tensor_toolbox/eig_sshopm.m	/^x = x0 \/ norm(x0);$/;"	v
x	lib/tensor_toolbox/eig_sshopmc.m	/^    x = newx;$/;"	v
x	lib/tensor_toolbox/eig_sshopmc.m	/^x = x0 \/ norm(x0);$/;"	v
x	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            x = sptenrand(10,0.4);$/;"	v
x	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            x = sptenrand([4 3 2], 0.4);$/;"	v
x	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            x = sptensor([5 4 3]);$/;"	v
x	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            x = sptensor(y);$/;"	v
x	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            x = sptensor;$/;"	v
x	lib/tensor_toolbox/tests/Test_ExportData.m	/^            x = import_data('ktensor_small.ktns');$/;"	v
x	lib/tensor_toolbox/tests/Test_ImportData.m	/^            x = import_data('sptensor_small.tns');$/;"	v
x	lib/tensor_toolbox/tt_fac_to_vec.m	/^x = zeros(P,1);$/;"	v
x0	lib/tensor_toolbox/cp_sym.m	/^x0 = tovec(Model0,data.fgopts.nolambda);$/;"	v
x0	lib/tensor_toolbox/eig_geap.m	/^    x0 = 2*rand(N,1)-1;$/;"	v
x0	lib/tensor_toolbox/eig_geap.m	/^x0 = p.Results.Start;$/;"	v
x0	lib/tensor_toolbox/eig_sshopm.m	/^    x0 = 2*rand(N,1)-1;$/;"	v
x0	lib/tensor_toolbox/eig_sshopm.m	/^x0 = p.Results.Start;$/;"	v
x0	lib/tensor_toolbox/eig_sshopmc.m	/^    x0 = 2*rand(N,1)-1 + 1i * (2*randn(N,1)-1);$/;"	v
x0	lib/tensor_toolbox/eig_sshopmc.m	/^x0 = p.Results.Start;$/;"	v
x2	lib/tensor_toolbox/tests/Test_ExportData.m	/^            x2 = import_data('ktensor_small_2.ktns');$/;"	v
xDim	lib/TrialData/Analysis/runGPFA.m	/^xDim        =  8;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^xDim          = 8;$/;"	v
xDim	lib/TrialData/td_limblab/td_gpfa/twoStageEngine_td.m	/^xDim          = 3;$/;"	v
xDim	lib/TrialData/util/orthogonalize.m	/^  xDim = size(L, 2);$/;"	v
x_center	lib/TrialData/Plotting/visData.m	/^    x_center = target_distance*cos(trial_data(trial).target_direction);$/;"	v
x_row	lib/tensor_toolbox/cp_apr.m	/^                x_row = X.vals(sparse_indices);$/;"	v
x_row	lib/tensor_toolbox/cp_apr.m	/^                x_row = X_mat(jj,:);$/;"	v
x_vel	lib/TrialData/TrialData_tutorial.m	/^x_vel = getSig(td(test_idx),{'vel',1});$/;"	v
x_vel_pred	lib/TrialData/TrialData_tutorial.m	/^x_vel_pred = getSig(td(test_idx),{'linmodel_vel',1});$/;"	v
xcell	lib/tensor_toolbox/@ktensor/tovec.m	/^xcell = cellfun(@(x) x(:), K.u, 'UniformOutput', false);$/;"	v
xcomment	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  <xsl:variable name="xcomment">$/;"	v	matchedTemplate:originalCode
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^            xdetrend = xdetrend(tx<end_time);$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^            xdetrend = xdetrend(tx>start_time);$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = [xdetrend(1,:); xdetrend];$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = [xdetrend; xdetrend(end,:)];$/;"	v
xdetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^        xdetrend = x - polyval(a,tx);$/;"	v
xi	lib/matlab-colors/linspecer/linspecer.m	/^    xi = 1:n;$/;"	v
xi	lib/matlab-colors/linspecer/linspecer.m	/^xi = 1:n;$/;"	v
xl	lib/tensor_toolbox/@ktensor/viz.m	/^    xl = [0 size(K,k)+1];$/;"	v
xnzidx	lib/tensor_toolbox/gcp_opt.m	/^                xnzidx = sort(xnzidx);$/;"	v
xnzidx	lib/tensor_toolbox/gcp_opt.m	/^                xnzidx = tt_sub2ind64(sz,X.subs);$/;"	v
xnzidx	lib/tensor_toolbox/gcp_opt.m	/^            xnzidx = sort(xnzidx);$/;"	v
xnzidx	lib/tensor_toolbox/gcp_opt.m	/^            xnzidx = tt_sub2ind64(sz,X.subs);$/;"	v
xnzidx	lib/tensor_toolbox/gcp_opt.m	/^    xnzidx = []; % Only create the sorted indices if needed$/;"	v
xor	lib/tensor_toolbox/@sptensor/xor.m	/^function C = xor(A,B)$/;"	f
xor	lib/tensor_toolbox/@symtensor/xor.m	/^function Z = xor(X,Y)$/;"	f
xor	lib/tensor_toolbox/@tensor/xor.m	/^function Z = xor(X,Y)$/;"	f
xpos	lib/tensor_toolbox/@ktensor/viz.m	/^        xpos = 0.1 * res.LeftSpace;$/;"	v
xpos	lib/tensor_toolbox/@ktensor/viz.m	/^        xpos = res.LeftSpace + (k-1) * res.HorzSpace + sum(width(1:k-1)) + 0.5 * width(k);$/;"	v
xpos	lib/tensor_toolbox/@ktensor/viz.m	/^        xpos = res.LeftSpace + (k-1) * res.HorzSpace + sum(width(1:k-1));$/;"	v
xprods	lib/tensor_toolbox/@symktensor/fg.m	/^    xprods = squeeze(prod(foo,2)); % q x p matrix$/;"	v
xprodsjm1	lib/tensor_toolbox/@symktensor/fg.m	/^        xprodsjm1 = squeeze(prod(bar,2));$/;"	v
xsi	lib/tensor_toolbox/info.xml	/^  xsi:noNamespaceSchemaLocation="optional">$/;"	n	uri:http://www.w3.org/2001/XMLSchema-instance
xsl	lib/tensor_toolbox/maintenance/mxdom2simplehtml_ttb.xsl	/^  exclude-result-prefixes="mwsh">$/;"	n	uri:http://www.w3.org/1999/XSL/Transform
xsubs	lib/tensor_toolbox/cp_apr.m	/^    xsubs = X.subs(:,n);$/;"	v
xsubs	lib/tensor_toolbox/cp_apr.m	/^    xsubs = X.subs;$/;"	v
xsubs	lib/tensor_toolbox/tests/Test_Symtensor.m	/^            xsubs = indices(X);$/;"	v
xsz	lib/tensor_toolbox/doc/hosvd_doc.m	/^xsz = [20 20 20];$/;"	v
xvals	lib/tensor_toolbox/tt_sample_semistrat.m	/^xvals = [nonzero_xvals; zero_xvals];$/;"	v
xvals	lib/tensor_toolbox/tt_sample_stratified.m	/^xvals = [nonzero_xvals; zero_xvals];$/;"	v
xx	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        xx = xlim;$/;"	v
xx	lib/tensor_toolbox/@ktensor/viz.m	/^        xx = (1:size(K,k))';$/;"	v
xxt	lib/tensor_toolbox/eig_geap.m	/^xxt = x*x';$/;"	v
xzerosubs	lib/tensor_toolbox/@sptensor/eq.m	/^    xzerosubs = setdiff(allsubs(x),x.subs,'rows');$/;"	v
xzerosubs	lib/tensor_toolbox/@sptensor/le.m	/^    xzerosubs = setdiff(allsubs(x),x.subs,'rows');$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^        y = get_vars(trial_data(trials),out_signals);$/;"	v
y	lib/TrialData/Analysis/evalModel.m	/^    y = getSig(trial_data(trial_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getModel.m	/^        y  = get_vars(trial_data(trial),out_signals);$/;"	v
y	lib/TrialData/Analysis/getModel.m	/^    y = get_vars(trial_data(train_idx),out_signals);$/;"	v
y	lib/TrialData/Analysis/getPotentSpace.m	/^    y = score_out(:,1:out_dims);$/;"	v
y	lib/curvature.m	/^    y = c(:,2);$/;"	v
y	lib/curvature.m	/^    y = varargin{2};$/;"	v
y	lib/tensor_toolbox/@sptenmat/aatx.m	/^y = accumarray(s2, v1, [n 1]);$/;"	v
y	lib/tensor_toolbox/@sptensor/contract.m	/^    y = sum(x.vals(tfidx));$/;"	v
y	lib/tensor_toolbox/@sptensor/contract.m	/^    y = tensor(y);$/;"	v
y	lib/tensor_toolbox/@sptensor/contract.m	/^y = sptensor(x.subs(indx,remdims),x.vals(indx),x.size(remdims));$/;"	v
y	lib/tensor_toolbox/@sptensor/not.m	/^y = sptensor(subs,true,x.size);$/;"	v
y	lib/tensor_toolbox/@sptensor/nvecs.m	/^y = tnt' * tnt;$/;"	v
y	lib/tensor_toolbox/@tensor/contract.m	/^    y = trace(x.data);$/;"	v
y	lib/tensor_toolbox/@tensor/contract.m	/^y = tensor(newdata,newsize);$/;"	v
y	lib/tensor_toolbox/@tensor/innerprod.m	/^    y = reshape(Y.data, numel(Y.data), 1);$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^        y = double(ttv(A,X,-(1:-n)));$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^        y = ttv(A,X);$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^        y = ttv(A,X,-(1:-n));$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^    y = reshape(y, [sz sz]);$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^    y = tensor(y, sz * ones(dnew,1));$/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^   y = yy * x; $/;"	v
y	lib/tensor_toolbox/@tensor/ttsv.m	/^y = A.data;$/;"	v
y	lib/tensor_toolbox/cp_apr.m	/^y = x(:);$/;"	v
y	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            y = tenrand([10]);$/;"	v
y	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            y = tenrand([4 3 2]);$/;"	v
y	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            y = tensor(@zeros, [5 4 3]);$/;"	v
y	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            y = tensor(x);$/;"	v
y	lib/tensor_toolbox/tests/Test_DenseSparseConvert.m	/^            y = tensor;$/;"	v
y	lib/tensor_toolbox/tests/Test_ImportData.m	/^            y = sptensor([1 1 1;2 2 2;3 3 3],[1 2 3]',[3 3 3]);$/;"	v
yAll	lib/TrialData/td_limblab/td_gpfa/gpfaEngine_td.m	/^yAll             = [seqTrainCut.y];$/;"	v
yAll	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    yAll = [seqTrain.y];$/;"	v
yDim	lib/TrialData/td_limblab/td_gpfa/getSeq_td.m	/^    yDim = size(dat(n).spikes, 1);$/;"	v
yDim	lib/TrialData/td_limblab/td_gpfa/neuralTraj_td.m	/^    yDim  = size(yAll, 1);$/;"	v
y_center	lib/TrialData/Plotting/visData.m	/^    y_center = target_distance*sin(trial_data(trial).target_direction);$/;"	v
y_fit	lib/TrialData/Analysis/evalModel.m	/^y_fit = varargin{2};$/;"	v
y_fit2	lib/TrialData/Analysis/evalModel.m	/^    y_fit2 = varargin{3};$/;"	v
y_sp	lib/TrialData/TrialData_tutorial.m	/^y_sp = getSig(td(test_idx),'speed');$/;"	v
y_sp_pred	lib/TrialData/TrialData_tutorial.m	/^y_sp_pred = getSig(td(test_idx),{'linmodel_vel',3});$/;"	v
y_test	lib/TrialData/Analysis/evalModel.m	/^y_test         = varargin{1};$/;"	v
y_vel	lib/TrialData/TrialData_tutorial.m	/^y_vel = getSig(td(test_idx),{'vel',2});$/;"	v
y_vel_pred	lib/TrialData/TrialData_tutorial.m	/^y_vel_pred = getSig(td(test_idx),{'linmodel_vel',2});$/;"	v
ydetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    ydetrend = ydetrend(1:end-1);$/;"	v
ydetrend	lib/TrialData/td_limblab/parseFileByTrial.m	/^                    ydetrend = ydetrend(2:end);$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^                yfit = net(x')';$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = net(x')';$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = predict_kalman(kf_model,x,y(1,:),zeros(size(y,2)));$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^            yfit = zeros(size(y));$/;"	v
yfit	lib/TrialData/Analysis/getModel.m	/^        yfit = zeros(size(x,1),size(b,2));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^        yhat1 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{1}]));$/;"	v
yhat1	lib/TrialData/Analysis/evalModel.m	/^    yhat1 = getSig(trial_data(trial_idx),[td_fn_prefix '_' model_name{1}]);$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^            yhat2 = cat(1,trial_data(trials).([td_fn_prefix '_' model_name{2}]));$/;"	v
yhat2	lib/TrialData/Analysis/evalModel.m	/^        yhat2 = cat(1,trial_data(trial_idx).([td_fn_prefix '_' model_name{2}]));$/;"	v
yl	lib/tensor_toolbox/@ktensor/viz.m	/^    yl = [min( -0.01, min(U(:)) ), max( 0.01, max(U(:)) )];$/;"	v
ypos	lib/tensor_toolbox/@ktensor/viz.m	/^        ypos = 1 - res.TopSpace - 0.5 * height - (j-1) * (height + res.VertSpace);$/;"	v
ypos	lib/tensor_toolbox/@ktensor/viz.m	/^        ypos = 1 - res.TopSpace - height - (j-1) * (height + res.VertSpace);$/;"	v
ypos	lib/tensor_toolbox/@ktensor/viz.m	/^        ypos = 1 - res.TopSpace;$/;"	v
yposs	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^    yposs = [0.9 0.65 0.45 0.25];$/;"	v
yrnge	lib/TrialData/td_limblab/makeBasis_PostSpike.m	/^yrnge = nlin(hpeaks+b);        % nonlinearly transformed first & last bumps$/;"	v
ysz	lib/tensor_toolbox/doc/hosvd_doc.m	/^ysz = [100 100 100];$/;"	v
yvals	lib/tensor_toolbox/@sptensor/eq.m	/^    yvals = y(x.subs);$/;"	v
yvals	lib/tensor_toolbox/tt_gcp_fg_est.m	/^yvals = weights .* gh(xvals, mvals);$/;"	v
yy	lib/TrialData/td_limblab/td_dpca/dpca_plot.m	/^        yy = ylim;$/;"	v
yy	lib/tensor_toolbox/@ktensor/viz.m	/^        yy = U(:,j);$/;"	v
yy	lib/tensor_toolbox/@tensor/ttsv.m	/^   yy = reshape(y,sz.^(dnew + i - 1),sz); $/;"	v
yzerosubs	lib/tensor_toolbox/@sptensor/eq.m	/^    yzerosubs = find(y == 0);$/;"	v
yzerosubs	lib/tensor_toolbox/@sptensor/eq.m	/^    yzerosubs = setdiff(allsubs(y),y.subs,'rows');$/;"	v
yzerosubs	lib/tensor_toolbox/@sptensor/le.m	/^    yzerosubs = setdiff(allsubs(y),y.subs,'rows');$/;"	v
z	lib/tensor_toolbox/@sptenmat/aatx.m	/^z = accumarray(s1, v2, [m 1]);$/;"	v
z	lib/tensor_toolbox/@sptensor/eq.m	/^        z = sptensor(x.subs(idx,:),true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/eq.m	/^        z = ~x;$/;"	v
z	lib/tensor_toolbox/@sptensor/eq.m	/^    z = eq(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/eq.m	/^    z = sptensor([zzerosubs;znzsubs],true,x.size);$/;"	v
z	lib/tensor_toolbox/@sptensor/ge.m	/^    z = le(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/ge.m	/^    z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/gt.m	/^    z = lt(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/gt.m	/^    z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/isequal.m	/^    z = (nnz(x-y) == 0);$/;"	v
z	lib/tensor_toolbox/@sptensor/isequal.m	/^    z = false;$/;"	v
z	lib/tensor_toolbox/@sptensor/isequal.m	/^    z = isequal(full(x),y);$/;"	v
z	lib/tensor_toolbox/@sptensor/le.m	/^    z = ge(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/le.m	/^    z = sptensor([subs1;subs2;subs3;subs4],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/le.m	/^    z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/lt.m	/^    z = gt(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/lt.m	/^    z = sptensor([subs1;subs2;subs3],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/lt.m	/^    z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/ne.m	/^        z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/ne.m	/^        z = sptensor(x.subs,true,size(x));$/;"	v
z	lib/tensor_toolbox/@sptensor/ne.m	/^    z = ne(y,x);$/;"	v
z	lib/tensor_toolbox/@sptensor/ne.m	/^    z = sptensor([subs1;subs2],true,size(x));$/;"	v
z	lib/tensor_toolbox/@symtensor/isequal.m	/^    z = false;$/;"	v
z	lib/tensor_toolbox/@symtensor/isequal.m	/^    z = isequal(x.val,y.val);$/;"	v
z	lib/tensor_toolbox/@tensor/isequal.m	/^    z = false;$/;"	v
z	lib/tensor_toolbox/@tensor/isequal.m	/^    z = isequal(x,full(y));$/;"	v
z	lib/tensor_toolbox/@tensor/isequal.m	/^    z = isequal(x.data,y.data);$/;"	v
z	lib/tensor_toolbox/doc/multiply_doc.m	/^z = innerprod(X,Y)$/;"	v
zero_pad	lib/TrialData/Tools/trimTD.m	/^zero_pad = false;$/;"	v
zero_subs	lib/tensor_toolbox/tt_sample_semistrat.m	/^zero_subs = bsxfun(@(a,b)ceil(a.*b), rand(nzrs,d), sz);$/;"	v
zero_subs	lib/tensor_toolbox/tt_sample_stratified.m	/^zero_subs = tt_sample_zeros(X,xnzidx,nzrs,oversample,with_replacement);$/;"	v
zero_weights	lib/tensor_toolbox/tt_sample_semistrat.m	/^zero_weights = nelx \/ nzrs * ones(nzrs,1);$/;"	v
zero_weights	lib/tensor_toolbox/tt_sample_stratified.m	/^zero_weights = (nzrx \/ nzrs) * ones(nzrs,1);$/;"	v
zero_xvals	lib/tensor_toolbox/tt_sample_semistrat.m	/^zero_xvals = zeros(nzrs,1);$/;"	v
zero_xvals	lib/tensor_toolbox/tt_sample_stratified.m	/^zero_xvals = zeros(nzrs,1);$/;"	v
zerosidx	lib/tensor_toolbox/@symktensor/fg.m	/^    zerosidx = Data.zerosidx;$/;"	v
zerosidx	lib/tensor_toolbox/@symktensor/fg_setup.m	/^    zerosidx = cell(n,1);$/;"	v
znzsubs	lib/tensor_toolbox/@sptensor/eq.m	/^    znzsubs = nzsubs(x.vals(ix) == y.vals(iy),:);$/;"	v
znzsubs	lib/tensor_toolbox/@sptensor/eq.m	/^    znzsubs = x.subs(yvals == x.vals,:);$/;"	v
zscoreSignals	lib/TrialData/Tools/zscoreSignals.m	/^function trial_data = zscoreSignals(trial_data,params)$/;"	f
zsz	lib/tensor_toolbox/tests/Test_Tensor.m	/^                zsz = [size(X,ndims(X)) 1];$/;"	v
ztime	lib/tensor_toolbox/cp_wopt.m	/^    ztime = toc;$/;"	v
zzerosubs	lib/tensor_toolbox/@sptensor/eq.m	/^    zzerosubs = intersect(xzerosubs,yzerosubs,'rows');$/;"	v
zzerosubs	lib/tensor_toolbox/@sptensor/eq.m	/^    zzerosubs = yzerosubs(extract(x,yzerosubs) == 0,:);$/;"	v
~FibHeap	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeap::~FibHeap()$/;"	f	class:FibHeap
~FibHeapNode	lib/TrialData/util/lib/isomap/dijkstra.cpp	/^FibHeapNode::~FibHeapNode()$/;"	f	class:FibHeapNode
